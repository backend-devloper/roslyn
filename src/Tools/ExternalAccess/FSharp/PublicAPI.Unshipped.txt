Microsoft.CodeAnalysis.ExternalAccess.FSharp.Classification.ClassificationTags
Microsoft.CodeAnalysis.ExternalAccess.FSharp.Classification.IFSharpClassificationService
Microsoft.CodeAnalysis.ExternalAccess.FSharp.Classification.IFSharpClassificationService.AddLexicalClassifications(Microsoft.CodeAnalysis.Text.SourceText text, Microsoft.CodeAnalysis.Text.TextSpan textSpan, System.Collections.Generic.List<Microsoft.CodeAnalysis.Classification.ClassifiedSpan> result, System.Threading.CancellationToken cancellationToken) -> void
Microsoft.CodeAnalysis.ExternalAccess.FSharp.Classification.IFSharpClassificationService.AddSemanticClassificationsAsync(Microsoft.CodeAnalysis.Document document, Microsoft.CodeAnalysis.Text.TextSpan textSpan, System.Collections.Generic.List<Microsoft.CodeAnalysis.Classification.ClassifiedSpan> result, System.Threading.CancellationToken cancellationToken) -> System.Threading.Tasks.Task
Microsoft.CodeAnalysis.ExternalAccess.FSharp.Classification.IFSharpClassificationService.AddSyntacticClassificationsAsync(Microsoft.CodeAnalysis.Document document, Microsoft.CodeAnalysis.Text.TextSpan textSpan, System.Collections.Generic.List<Microsoft.CodeAnalysis.Classification.ClassifiedSpan> result, System.Threading.CancellationToken cancellationToken) -> System.Threading.Tasks.Task
Microsoft.CodeAnalysis.ExternalAccess.FSharp.Classification.IFSharpClassificationService.AdjustStaleClassification(Microsoft.CodeAnalysis.Text.SourceText text, Microsoft.CodeAnalysis.Classification.ClassifiedSpan classifiedSpan) -> Microsoft.CodeAnalysis.Classification.ClassifiedSpan
Microsoft.CodeAnalysis.ExternalAccess.FSharp.Completion.CompletionOptions
Microsoft.CodeAnalysis.ExternalAccess.FSharp.Diagnostics.DiagnosticCustomTags
Microsoft.CodeAnalysis.ExternalAccess.FSharp.Diagnostics.DocumentDiagnosticAnalyzer
Microsoft.CodeAnalysis.ExternalAccess.FSharp.Diagnostics.DocumentDiagnosticAnalyzer.DocumentDiagnosticAnalyzer() -> void
Microsoft.CodeAnalysis.ExternalAccess.FSharp.Diagnostics.IDiagnosticAnalyzerService
Microsoft.CodeAnalysis.ExternalAccess.FSharp.Diagnostics.IDiagnosticAnalyzerService.Reanalyze(Microsoft.CodeAnalysis.Workspace workspace, System.Collections.Generic.IEnumerable<Microsoft.CodeAnalysis.ProjectId> projectIds = null, System.Collections.Generic.IEnumerable<Microsoft.CodeAnalysis.DocumentId> documentIds = null, bool highPriority = false) -> void
Microsoft.CodeAnalysis.ExternalAccess.FSharp.Editor.BraceMatchingResult
Microsoft.CodeAnalysis.ExternalAccess.FSharp.Editor.BraceMatchingResult.BraceMatchingResult(Microsoft.CodeAnalysis.Text.TextSpan leftSpan, Microsoft.CodeAnalysis.Text.TextSpan rightSpan) -> void
Microsoft.CodeAnalysis.ExternalAccess.FSharp.Editor.BraceMatchingResult.LeftSpan.get -> Microsoft.CodeAnalysis.Text.TextSpan
Microsoft.CodeAnalysis.ExternalAccess.FSharp.Editor.BraceMatchingResult.RightSpan.get -> Microsoft.CodeAnalysis.Text.TextSpan
Microsoft.CodeAnalysis.ExternalAccess.FSharp.Editor.ContentTypeNames
Microsoft.CodeAnalysis.ExternalAccess.FSharp.Editor.IFSharpBraceMatcher
Microsoft.CodeAnalysis.ExternalAccess.FSharp.Editor.IFSharpBraceMatcher.FindBracesAsync(Microsoft.CodeAnalysis.Document document, int position, System.Threading.CancellationToken cancellationToken = default(System.Threading.CancellationToken)) -> System.Threading.Tasks.Task<Microsoft.CodeAnalysis.ExternalAccess.FSharp.Editor.BraceMatchingResult?>
Microsoft.CodeAnalysis.ExternalAccess.FSharp.Editor.IFSharpEditorFormattingService
Microsoft.CodeAnalysis.ExternalAccess.FSharp.Editor.IFSharpEditorFormattingService.GetFormattingChangesAsync(Microsoft.CodeAnalysis.Document document, Microsoft.CodeAnalysis.Text.TextSpan? textSpan, System.Threading.CancellationToken cancellationToken) -> System.Threading.Tasks.Task<System.Collections.Generic.IList<Microsoft.CodeAnalysis.Text.TextChange>>
Microsoft.CodeAnalysis.ExternalAccess.FSharp.Editor.IFSharpEditorFormattingService.GetFormattingChangesAsync(Microsoft.CodeAnalysis.Document document, char typedChar, int position, System.Threading.CancellationToken cancellationToken) -> System.Threading.Tasks.Task<System.Collections.Generic.IList<Microsoft.CodeAnalysis.Text.TextChange>>
Microsoft.CodeAnalysis.ExternalAccess.FSharp.Editor.IFSharpEditorFormattingService.GetFormattingChangesOnPasteAsync(Microsoft.CodeAnalysis.Document document, Microsoft.CodeAnalysis.Text.TextSpan textSpan, System.Threading.CancellationToken cancellationToken) -> System.Threading.Tasks.Task<System.Collections.Generic.IList<Microsoft.CodeAnalysis.Text.TextChange>>
Microsoft.CodeAnalysis.ExternalAccess.FSharp.Editor.IFSharpEditorFormattingService.GetFormattingChangesOnReturnAsync(Microsoft.CodeAnalysis.Document document, int position, System.Threading.CancellationToken cancellationToken) -> System.Threading.Tasks.Task<System.Collections.Generic.IList<Microsoft.CodeAnalysis.Text.TextChange>>
Microsoft.CodeAnalysis.ExternalAccess.FSharp.Editor.IFSharpEditorFormattingService.SupportsFormatDocument.get -> bool
Microsoft.CodeAnalysis.ExternalAccess.FSharp.Editor.IFSharpEditorFormattingService.SupportsFormatOnPaste.get -> bool
Microsoft.CodeAnalysis.ExternalAccess.FSharp.Editor.IFSharpEditorFormattingService.SupportsFormatOnReturn.get -> bool
Microsoft.CodeAnalysis.ExternalAccess.FSharp.Editor.IFSharpEditorFormattingService.SupportsFormatSelection.get -> bool
Microsoft.CodeAnalysis.ExternalAccess.FSharp.Editor.IFSharpEditorFormattingService.SupportsFormattingOnTypedCharacter(Microsoft.CodeAnalysis.Document document, char ch) -> bool
Microsoft.CodeAnalysis.ExternalAccess.FSharp.Editor.IFSharpSynchronousIndentationService
Microsoft.CodeAnalysis.ExternalAccess.FSharp.Editor.IFSharpSynchronousIndentationService.GetDesiredIndentation(Microsoft.CodeAnalysis.Document document, int lineNumber, System.Threading.CancellationToken cancellationToken) -> Microsoft.CodeAnalysis.ExternalAccess.FSharp.Editor.IndentationResult?
Microsoft.CodeAnalysis.ExternalAccess.FSharp.Editor.Implementation.Debugging.BreakpointResolutionResult
Microsoft.CodeAnalysis.ExternalAccess.FSharp.Editor.Implementation.Debugging.BreakpointResolutionResult.Document.get -> Microsoft.CodeAnalysis.Document
Microsoft.CodeAnalysis.ExternalAccess.FSharp.Editor.Implementation.Debugging.BreakpointResolutionResult.IsLineBreakpoint.get -> bool
Microsoft.CodeAnalysis.ExternalAccess.FSharp.Editor.Implementation.Debugging.BreakpointResolutionResult.LocationNameOpt.get -> string
Microsoft.CodeAnalysis.ExternalAccess.FSharp.Editor.Implementation.Debugging.BreakpointResolutionResult.TextSpan.get -> Microsoft.CodeAnalysis.Text.TextSpan
Microsoft.CodeAnalysis.ExternalAccess.FSharp.Editor.Implementation.Debugging.DebugDataTipInfo
Microsoft.CodeAnalysis.ExternalAccess.FSharp.Editor.Implementation.Debugging.DebugDataTipInfo.DebugDataTipInfo(Microsoft.CodeAnalysis.Text.TextSpan span, string text) -> void
Microsoft.CodeAnalysis.ExternalAccess.FSharp.Editor.Implementation.Debugging.DebugDataTipInfo.IsDefault.get -> bool
Microsoft.CodeAnalysis.ExternalAccess.FSharp.Editor.Implementation.Debugging.DebugLocationInfo
Microsoft.CodeAnalysis.ExternalAccess.FSharp.Editor.Implementation.Debugging.DebugLocationInfo.DebugLocationInfo(string name, int lineOffset) -> void
Microsoft.CodeAnalysis.ExternalAccess.FSharp.Editor.Implementation.Debugging.DebugLocationInfo.IsDefault.get -> bool
Microsoft.CodeAnalysis.ExternalAccess.FSharp.Editor.Implementation.Debugging.IFSharpBreakpointResolutionService
Microsoft.CodeAnalysis.ExternalAccess.FSharp.Editor.Implementation.Debugging.IFSharpBreakpointResolutionService.ResolveBreakpointAsync(Microsoft.CodeAnalysis.Document document, Microsoft.CodeAnalysis.Text.TextSpan textSpan, System.Threading.CancellationToken cancellationToken = default(System.Threading.CancellationToken)) -> System.Threading.Tasks.Task<Microsoft.CodeAnalysis.ExternalAccess.FSharp.Editor.Implementation.Debugging.BreakpointResolutionResult>
Microsoft.CodeAnalysis.ExternalAccess.FSharp.Editor.Implementation.Debugging.IFSharpBreakpointResolutionService.ResolveBreakpointsAsync(Microsoft.CodeAnalysis.Solution solution, string name, System.Threading.CancellationToken cancellationToken = default(System.Threading.CancellationToken)) -> System.Threading.Tasks.Task<System.Collections.Generic.IEnumerable<Microsoft.CodeAnalysis.ExternalAccess.FSharp.Editor.Implementation.Debugging.BreakpointResolutionResult>>
Microsoft.CodeAnalysis.ExternalAccess.FSharp.Editor.Implementation.Debugging.IFSharpLanguageDebugInfoService
Microsoft.CodeAnalysis.ExternalAccess.FSharp.Editor.Implementation.Debugging.IFSharpLanguageDebugInfoService.GetDataTipInfoAsync(Microsoft.CodeAnalysis.Document document, int position, System.Threading.CancellationToken cancellationToken) -> System.Threading.Tasks.Task<Microsoft.CodeAnalysis.ExternalAccess.FSharp.Editor.Implementation.Debugging.DebugDataTipInfo>
Microsoft.CodeAnalysis.ExternalAccess.FSharp.Editor.Implementation.Debugging.IFSharpLanguageDebugInfoService.GetLocationInfoAsync(Microsoft.CodeAnalysis.Document document, int position, System.Threading.CancellationToken cancellationToken) -> System.Threading.Tasks.Task<Microsoft.CodeAnalysis.ExternalAccess.FSharp.Editor.Implementation.Debugging.DebugLocationInfo>
Microsoft.CodeAnalysis.ExternalAccess.FSharp.Editor.IndentationResult
Microsoft.CodeAnalysis.ExternalAccess.FSharp.Editor.IndentationResult.BasePosition.get -> int
Microsoft.CodeAnalysis.ExternalAccess.FSharp.Editor.IndentationResult.IndentationResult(int basePosition, int offset) -> void
Microsoft.CodeAnalysis.ExternalAccess.FSharp.Editor.IndentationResult.Offset.get -> int
Microsoft.CodeAnalysis.ExternalAccess.FSharp.Editor.Shared.Utilities.ClassificationTypeMap
Microsoft.CodeAnalysis.ExternalAccess.FSharp.Editor.Shared.Utilities.ClassificationTypeMap.ClassificationTypeMap(Microsoft.VisualStudio.Text.Classification.IClassificationTypeRegistryService registryService) -> void
Microsoft.CodeAnalysis.ExternalAccess.FSharp.Editor.Shared.Utilities.ClassificationTypeMap.GetClassificationType(string name) -> Microsoft.VisualStudio.Text.Classification.IClassificationType
Microsoft.CodeAnalysis.ExternalAccess.FSharp.Glyph
Microsoft.CodeAnalysis.ExternalAccess.FSharp.Glyph.AddReference = 73 -> Microsoft.CodeAnalysis.ExternalAccess.FSharp.Glyph
Microsoft.CodeAnalysis.ExternalAccess.FSharp.Glyph.Assembly = 1 -> Microsoft.CodeAnalysis.ExternalAccess.FSharp.Glyph
Microsoft.CodeAnalysis.ExternalAccess.FSharp.Glyph.BasicFile = 2 -> Microsoft.CodeAnalysis.ExternalAccess.FSharp.Glyph
Microsoft.CodeAnalysis.ExternalAccess.FSharp.Glyph.BasicProject = 3 -> Microsoft.CodeAnalysis.ExternalAccess.FSharp.Glyph
Microsoft.CodeAnalysis.ExternalAccess.FSharp.Glyph.CSharpFile = 8 -> Microsoft.CodeAnalysis.ExternalAccess.FSharp.Glyph
Microsoft.CodeAnalysis.ExternalAccess.FSharp.Glyph.CSharpProject = 9 -> Microsoft.CodeAnalysis.ExternalAccess.FSharp.Glyph
Microsoft.CodeAnalysis.ExternalAccess.FSharp.Glyph.ClassInternal = 7 -> Microsoft.CodeAnalysis.ExternalAccess.FSharp.Glyph
Microsoft.CodeAnalysis.ExternalAccess.FSharp.Glyph.ClassPrivate = 6 -> Microsoft.CodeAnalysis.ExternalAccess.FSharp.Glyph
Microsoft.CodeAnalysis.ExternalAccess.FSharp.Glyph.ClassProtected = 5 -> Microsoft.CodeAnalysis.ExternalAccess.FSharp.Glyph
Microsoft.CodeAnalysis.ExternalAccess.FSharp.Glyph.ClassPublic = 4 -> Microsoft.CodeAnalysis.ExternalAccess.FSharp.Glyph
Microsoft.CodeAnalysis.ExternalAccess.FSharp.Glyph.CompletionWarning = 72 -> Microsoft.CodeAnalysis.ExternalAccess.FSharp.Glyph
Microsoft.CodeAnalysis.ExternalAccess.FSharp.Glyph.ConstantInternal = 13 -> Microsoft.CodeAnalysis.ExternalAccess.FSharp.Glyph
Microsoft.CodeAnalysis.ExternalAccess.FSharp.Glyph.ConstantPrivate = 12 -> Microsoft.CodeAnalysis.ExternalAccess.FSharp.Glyph
Microsoft.CodeAnalysis.ExternalAccess.FSharp.Glyph.ConstantProtected = 11 -> Microsoft.CodeAnalysis.ExternalAccess.FSharp.Glyph
Microsoft.CodeAnalysis.ExternalAccess.FSharp.Glyph.ConstantPublic = 10 -> Microsoft.CodeAnalysis.ExternalAccess.FSharp.Glyph
Microsoft.CodeAnalysis.ExternalAccess.FSharp.Glyph.DelegateInternal = 17 -> Microsoft.CodeAnalysis.ExternalAccess.FSharp.Glyph
Microsoft.CodeAnalysis.ExternalAccess.FSharp.Glyph.DelegatePrivate = 16 -> Microsoft.CodeAnalysis.ExternalAccess.FSharp.Glyph
Microsoft.CodeAnalysis.ExternalAccess.FSharp.Glyph.DelegateProtected = 15 -> Microsoft.CodeAnalysis.ExternalAccess.FSharp.Glyph
Microsoft.CodeAnalysis.ExternalAccess.FSharp.Glyph.DelegatePublic = 14 -> Microsoft.CodeAnalysis.ExternalAccess.FSharp.Glyph
Microsoft.CodeAnalysis.ExternalAccess.FSharp.Glyph.EnumInternal = 21 -> Microsoft.CodeAnalysis.ExternalAccess.FSharp.Glyph
Microsoft.CodeAnalysis.ExternalAccess.FSharp.Glyph.EnumMemberInternal = 25 -> Microsoft.CodeAnalysis.ExternalAccess.FSharp.Glyph
Microsoft.CodeAnalysis.ExternalAccess.FSharp.Glyph.EnumMemberPrivate = 24 -> Microsoft.CodeAnalysis.ExternalAccess.FSharp.Glyph
Microsoft.CodeAnalysis.ExternalAccess.FSharp.Glyph.EnumMemberProtected = 23 -> Microsoft.CodeAnalysis.ExternalAccess.FSharp.Glyph
Microsoft.CodeAnalysis.ExternalAccess.FSharp.Glyph.EnumMemberPublic = 22 -> Microsoft.CodeAnalysis.ExternalAccess.FSharp.Glyph
Microsoft.CodeAnalysis.ExternalAccess.FSharp.Glyph.EnumPrivate = 20 -> Microsoft.CodeAnalysis.ExternalAccess.FSharp.Glyph
Microsoft.CodeAnalysis.ExternalAccess.FSharp.Glyph.EnumProtected = 19 -> Microsoft.CodeAnalysis.ExternalAccess.FSharp.Glyph
Microsoft.CodeAnalysis.ExternalAccess.FSharp.Glyph.EnumPublic = 18 -> Microsoft.CodeAnalysis.ExternalAccess.FSharp.Glyph
Microsoft.CodeAnalysis.ExternalAccess.FSharp.Glyph.Error = 26 -> Microsoft.CodeAnalysis.ExternalAccess.FSharp.Glyph
Microsoft.CodeAnalysis.ExternalAccess.FSharp.Glyph.EventInternal = 31 -> Microsoft.CodeAnalysis.ExternalAccess.FSharp.Glyph
Microsoft.CodeAnalysis.ExternalAccess.FSharp.Glyph.EventPrivate = 30 -> Microsoft.CodeAnalysis.ExternalAccess.FSharp.Glyph
Microsoft.CodeAnalysis.ExternalAccess.FSharp.Glyph.EventProtected = 29 -> Microsoft.CodeAnalysis.ExternalAccess.FSharp.Glyph
Microsoft.CodeAnalysis.ExternalAccess.FSharp.Glyph.EventPublic = 28 -> Microsoft.CodeAnalysis.ExternalAccess.FSharp.Glyph
Microsoft.CodeAnalysis.ExternalAccess.FSharp.Glyph.ExtensionMethodInternal = 35 -> Microsoft.CodeAnalysis.ExternalAccess.FSharp.Glyph
Microsoft.CodeAnalysis.ExternalAccess.FSharp.Glyph.ExtensionMethodPrivate = 34 -> Microsoft.CodeAnalysis.ExternalAccess.FSharp.Glyph
Microsoft.CodeAnalysis.ExternalAccess.FSharp.Glyph.ExtensionMethodProtected = 33 -> Microsoft.CodeAnalysis.ExternalAccess.FSharp.Glyph
Microsoft.CodeAnalysis.ExternalAccess.FSharp.Glyph.ExtensionMethodPublic = 32 -> Microsoft.CodeAnalysis.ExternalAccess.FSharp.Glyph
Microsoft.CodeAnalysis.ExternalAccess.FSharp.Glyph.FieldInternal = 39 -> Microsoft.CodeAnalysis.ExternalAccess.FSharp.Glyph
Microsoft.CodeAnalysis.ExternalAccess.FSharp.Glyph.FieldPrivate = 38 -> Microsoft.CodeAnalysis.ExternalAccess.FSharp.Glyph
Microsoft.CodeAnalysis.ExternalAccess.FSharp.Glyph.FieldProtected = 37 -> Microsoft.CodeAnalysis.ExternalAccess.FSharp.Glyph
Microsoft.CodeAnalysis.ExternalAccess.FSharp.Glyph.FieldPublic = 36 -> Microsoft.CodeAnalysis.ExternalAccess.FSharp.Glyph
Microsoft.CodeAnalysis.ExternalAccess.FSharp.Glyph.InterfaceInternal = 43 -> Microsoft.CodeAnalysis.ExternalAccess.FSharp.Glyph
Microsoft.CodeAnalysis.ExternalAccess.FSharp.Glyph.InterfacePrivate = 42 -> Microsoft.CodeAnalysis.ExternalAccess.FSharp.Glyph
Microsoft.CodeAnalysis.ExternalAccess.FSharp.Glyph.InterfaceProtected = 41 -> Microsoft.CodeAnalysis.ExternalAccess.FSharp.Glyph
Microsoft.CodeAnalysis.ExternalAccess.FSharp.Glyph.InterfacePublic = 40 -> Microsoft.CodeAnalysis.ExternalAccess.FSharp.Glyph
Microsoft.CodeAnalysis.ExternalAccess.FSharp.Glyph.Intrinsic = 44 -> Microsoft.CodeAnalysis.ExternalAccess.FSharp.Glyph
Microsoft.CodeAnalysis.ExternalAccess.FSharp.Glyph.Keyword = 45 -> Microsoft.CodeAnalysis.ExternalAccess.FSharp.Glyph
Microsoft.CodeAnalysis.ExternalAccess.FSharp.Glyph.Label = 46 -> Microsoft.CodeAnalysis.ExternalAccess.FSharp.Glyph
Microsoft.CodeAnalysis.ExternalAccess.FSharp.Glyph.Local = 47 -> Microsoft.CodeAnalysis.ExternalAccess.FSharp.Glyph
Microsoft.CodeAnalysis.ExternalAccess.FSharp.Glyph.MethodInternal = 52 -> Microsoft.CodeAnalysis.ExternalAccess.FSharp.Glyph
Microsoft.CodeAnalysis.ExternalAccess.FSharp.Glyph.MethodPrivate = 51 -> Microsoft.CodeAnalysis.ExternalAccess.FSharp.Glyph
Microsoft.CodeAnalysis.ExternalAccess.FSharp.Glyph.MethodProtected = 50 -> Microsoft.CodeAnalysis.ExternalAccess.FSharp.Glyph
Microsoft.CodeAnalysis.ExternalAccess.FSharp.Glyph.MethodPublic = 49 -> Microsoft.CodeAnalysis.ExternalAccess.FSharp.Glyph
Microsoft.CodeAnalysis.ExternalAccess.FSharp.Glyph.ModuleInternal = 56 -> Microsoft.CodeAnalysis.ExternalAccess.FSharp.Glyph
Microsoft.CodeAnalysis.ExternalAccess.FSharp.Glyph.ModulePrivate = 55 -> Microsoft.CodeAnalysis.ExternalAccess.FSharp.Glyph
Microsoft.CodeAnalysis.ExternalAccess.FSharp.Glyph.ModuleProtected = 54 -> Microsoft.CodeAnalysis.ExternalAccess.FSharp.Glyph
Microsoft.CodeAnalysis.ExternalAccess.FSharp.Glyph.ModulePublic = 53 -> Microsoft.CodeAnalysis.ExternalAccess.FSharp.Glyph
Microsoft.CodeAnalysis.ExternalAccess.FSharp.Glyph.Namespace = 48 -> Microsoft.CodeAnalysis.ExternalAccess.FSharp.Glyph
Microsoft.CodeAnalysis.ExternalAccess.FSharp.Glyph.None = 0 -> Microsoft.CodeAnalysis.ExternalAccess.FSharp.Glyph
Microsoft.CodeAnalysis.ExternalAccess.FSharp.Glyph.NuGet = 74 -> Microsoft.CodeAnalysis.ExternalAccess.FSharp.Glyph
Microsoft.CodeAnalysis.ExternalAccess.FSharp.Glyph.OpenFolder = 57 -> Microsoft.CodeAnalysis.ExternalAccess.FSharp.Glyph
Microsoft.CodeAnalysis.ExternalAccess.FSharp.Glyph.Operator = 58 -> Microsoft.CodeAnalysis.ExternalAccess.FSharp.Glyph
Microsoft.CodeAnalysis.ExternalAccess.FSharp.Glyph.Parameter = 59 -> Microsoft.CodeAnalysis.ExternalAccess.FSharp.Glyph
Microsoft.CodeAnalysis.ExternalAccess.FSharp.Glyph.PropertyInternal = 63 -> Microsoft.CodeAnalysis.ExternalAccess.FSharp.Glyph
Microsoft.CodeAnalysis.ExternalAccess.FSharp.Glyph.PropertyPrivate = 62 -> Microsoft.CodeAnalysis.ExternalAccess.FSharp.Glyph
Microsoft.CodeAnalysis.ExternalAccess.FSharp.Glyph.PropertyProtected = 61 -> Microsoft.CodeAnalysis.ExternalAccess.FSharp.Glyph
Microsoft.CodeAnalysis.ExternalAccess.FSharp.Glyph.PropertyPublic = 60 -> Microsoft.CodeAnalysis.ExternalAccess.FSharp.Glyph
Microsoft.CodeAnalysis.ExternalAccess.FSharp.Glyph.RangeVariable = 64 -> Microsoft.CodeAnalysis.ExternalAccess.FSharp.Glyph
Microsoft.CodeAnalysis.ExternalAccess.FSharp.Glyph.Reference = 65 -> Microsoft.CodeAnalysis.ExternalAccess.FSharp.Glyph
Microsoft.CodeAnalysis.ExternalAccess.FSharp.Glyph.Snippet = 71 -> Microsoft.CodeAnalysis.ExternalAccess.FSharp.Glyph
Microsoft.CodeAnalysis.ExternalAccess.FSharp.Glyph.StatusInformation = 27 -> Microsoft.CodeAnalysis.ExternalAccess.FSharp.Glyph
Microsoft.CodeAnalysis.ExternalAccess.FSharp.Glyph.StructureInternal = 69 -> Microsoft.CodeAnalysis.ExternalAccess.FSharp.Glyph
Microsoft.CodeAnalysis.ExternalAccess.FSharp.Glyph.StructurePrivate = 68 -> Microsoft.CodeAnalysis.ExternalAccess.FSharp.Glyph
Microsoft.CodeAnalysis.ExternalAccess.FSharp.Glyph.StructureProtected = 67 -> Microsoft.CodeAnalysis.ExternalAccess.FSharp.Glyph
Microsoft.CodeAnalysis.ExternalAccess.FSharp.Glyph.StructurePublic = 66 -> Microsoft.CodeAnalysis.ExternalAccess.FSharp.Glyph
Microsoft.CodeAnalysis.ExternalAccess.FSharp.Glyph.TypeParameter = 70 -> Microsoft.CodeAnalysis.ExternalAccess.FSharp.Glyph
Microsoft.CodeAnalysis.ExternalAccess.FSharp.LanguageServices.VisualStudioWorkspaceExtensions
Microsoft.CodeAnalysis.ExternalAccess.FSharp.Shared.Options.ServiceFeatureOnOffOptions
abstract Microsoft.CodeAnalysis.ExternalAccess.FSharp.Diagnostics.DocumentDiagnosticAnalyzer.AnalyzeSemanticsAsync(Microsoft.CodeAnalysis.Document document, System.Threading.CancellationToken cancellationToken) -> System.Threading.Tasks.Task<System.Collections.Immutable.ImmutableArray<Microsoft.CodeAnalysis.Diagnostic>>
abstract Microsoft.CodeAnalysis.ExternalAccess.FSharp.Diagnostics.DocumentDiagnosticAnalyzer.AnalyzeSyntaxAsync(Microsoft.CodeAnalysis.Document document, System.Threading.CancellationToken cancellationToken) -> System.Threading.Tasks.Task<System.Collections.Immutable.ImmutableArray<Microsoft.CodeAnalysis.Diagnostic>>
const Microsoft.CodeAnalysis.ExternalAccess.FSharp.Diagnostics.DocumentDiagnosticAnalyzer.DefaultPriority = 50 -> int
const Microsoft.CodeAnalysis.ExternalAccess.FSharp.Editor.ContentTypeNames.RoslynContentType = "Roslyn Languages" -> string
override sealed Microsoft.CodeAnalysis.ExternalAccess.FSharp.Diagnostics.DocumentDiagnosticAnalyzer.Initialize(Microsoft.CodeAnalysis.Diagnostics.AnalysisContext context) -> void
readonly Microsoft.CodeAnalysis.ExternalAccess.FSharp.Editor.Implementation.Debugging.DebugDataTipInfo.Span -> Microsoft.CodeAnalysis.Text.TextSpan
readonly Microsoft.CodeAnalysis.ExternalAccess.FSharp.Editor.Implementation.Debugging.DebugDataTipInfo.Text -> string
readonly Microsoft.CodeAnalysis.ExternalAccess.FSharp.Editor.Implementation.Debugging.DebugLocationInfo.LineOffset -> int
readonly Microsoft.CodeAnalysis.ExternalAccess.FSharp.Editor.Implementation.Debugging.DebugLocationInfo.Name -> string
static Microsoft.CodeAnalysis.ExternalAccess.FSharp.Classification.ClassificationTags.GetClassificationTypeName(string textTag) -> string
static Microsoft.CodeAnalysis.ExternalAccess.FSharp.Diagnostics.DiagnosticCustomTags.EditAndContinue.get -> string[]
static Microsoft.CodeAnalysis.ExternalAccess.FSharp.Diagnostics.DiagnosticCustomTags.Microsoft.get -> string[]
static Microsoft.CodeAnalysis.ExternalAccess.FSharp.Diagnostics.DiagnosticCustomTags.Unnecessary.get -> string[]
static Microsoft.CodeAnalysis.ExternalAccess.FSharp.Editor.Implementation.Debugging.BreakpointResolutionResult.CreateLineResult(Microsoft.CodeAnalysis.Document document, string locationNameOpt = null) -> Microsoft.CodeAnalysis.ExternalAccess.FSharp.Editor.Implementation.Debugging.BreakpointResolutionResult
static Microsoft.CodeAnalysis.ExternalAccess.FSharp.Editor.Implementation.Debugging.BreakpointResolutionResult.CreateSpanResult(Microsoft.CodeAnalysis.Document document, Microsoft.CodeAnalysis.Text.TextSpan textSpan, string locationNameOpt = null) -> Microsoft.CodeAnalysis.ExternalAccess.FSharp.Editor.Implementation.Debugging.BreakpointResolutionResult
static Microsoft.CodeAnalysis.ExternalAccess.FSharp.LanguageServices.VisualStudioWorkspaceExtensions.GetMetadata(this Microsoft.VisualStudio.LanguageServices.VisualStudioWorkspace workspace, string fullPath, System.DateTime snapshotTimestamp) -> Microsoft.CodeAnalysis.Metadata
static Microsoft.CodeAnalysis.ExternalAccess.FSharp.LanguageServices.VisualStudioWorkspaceExtensions.GetOrCreateProjectIdForPath(this Microsoft.VisualStudio.LanguageServices.VisualStudioWorkspace workspace, string filePath, string projectDisplayName) -> Microsoft.CodeAnalysis.ProjectId
static Microsoft.CodeAnalysis.ExternalAccess.FSharp.LanguageServices.VisualStudioWorkspaceExtensions.GetProjectFilePath(this Microsoft.VisualStudio.LanguageServices.VisualStudioWorkspace workspace, Microsoft.CodeAnalysis.ProjectId projectId) -> string
static Microsoft.CodeAnalysis.ExternalAccess.FSharp.LanguageServices.VisualStudioWorkspaceExtensions.TryGetProjectIdByBinPath(this Microsoft.VisualStudio.LanguageServices.VisualStudioWorkspace workspace, string filePath, out Microsoft.CodeAnalysis.ProjectId projectId) -> bool
static readonly Microsoft.CodeAnalysis.ExternalAccess.FSharp.Completion.CompletionOptions.BlockForCompletionItems -> Microsoft.CodeAnalysis.Options.PerLanguageOption<bool>
static readonly Microsoft.CodeAnalysis.ExternalAccess.FSharp.Shared.Options.ServiceFeatureOnOffOptions.ClosedFileDiagnostic -> Microsoft.CodeAnalysis.Options.PerLanguageOption<bool?>
virtual Microsoft.CodeAnalysis.ExternalAccess.FSharp.Diagnostics.DocumentDiagnosticAnalyzer.Priority.get -> int