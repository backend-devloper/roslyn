<?xml version="1.0" encoding="utf-8"?>
<xliff xmlns="urn:oasis:names:tc:xliff:document:1.2" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" version="1.2" xsi:schemaLocation="urn:oasis:names:tc:xliff:document:1.2 xliff-core-1.2-transitional.xsd">
  <file datatype="xml" source-language="en" target-language="pl" original="../FeaturesResources.resx">
    <body>
      <trans-unit id="A_subtraction_must_be_the_last_element_in_a_character_class">
        <source>A subtraction must be the last element in a character class</source>
        <target state="new">A subtraction must be the last element in a character class</target>
        <note>This is an error message shown to the user when they write an invalid Regular Expression. Example: [a-[b]-c]</note>
      </trans-unit>
      <trans-unit id="Add_member_name">
        <source>Add member name</source>
        <target state="translated">Dodaj nazwę składowej</target>
        <note />
      </trans-unit>
      <trans-unit id="Add_optional_parameter_to_constructor">
        <source>Add optional parameter to constructor</source>
        <target state="new">Add optional parameter to constructor</target>
        <note />
      </trans-unit>
      <trans-unit id="Add_parameter_to_0_and_overrides_implementations">
        <source>Add parameter to '{0}' (and overrides/implementations)</source>
        <target state="translated">Dodaj parametr do elementu „{0}” (oraz przesłonięć/implementacji)</target>
        <note />
      </trans-unit>
      <trans-unit id="Add_parameter_to_constructor">
        <source>Add parameter to constructor</source>
        <target state="new">Add parameter to constructor</target>
        <note />
      </trans-unit>
      <trans-unit id="Add_project_reference_to_0">
        <source>Add project reference to '{0}'.</source>
        <target state="translated">Dodaj odwołanie do projektu do elementu „{0}”</target>
        <note />
      </trans-unit>
      <trans-unit id="Add_reference_to_0">
        <source>Add reference to '{0}'.</source>
        <target state="translated">Dodaj odwołanie do elementu „{0}”</target>
        <note />
      </trans-unit>
      <trans-unit id="Actions_can_not_be_empty">
        <source>Actions can not be empty.</source>
        <target state="translated">Akcje nie mogą być puste.</target>
        <note />
      </trans-unit>
      <trans-unit id="Add_tuple_element_name_0">
        <source>Add tuple element name '{0}'</source>
        <target state="translated">Dodaj nazwę elementu krotki „{0}”</target>
        <note />
      </trans-unit>
      <trans-unit id="Adding_method_with_explicit_interface_specifier_will_prevernt_the_debug_session_from_continuing">
        <source>Adding a method with an explicit interface specifier will prevent the debug session from continuing.</source>
        <target state="translated">Dodanie metody z jawnym specyfikatorem interfejsu uniemożliwi kontynuowanie sesji debugowania.</target>
        <note />
      </trans-unit>
      <trans-unit id="Align_wrapped_arguments">
        <source>Align wrapped arguments</source>
        <target state="translated">Dopasuj opakowane argumenty</target>
        <note />
      </trans-unit>
      <trans-unit id="Align_wrapped_parameters">
        <source>Align wrapped parameters</source>
        <target state="translated">Dopasuj opakowane parametry</target>
        <note />
      </trans-unit>
      <trans-unit id="Alternation_conditions_cannot_be_comments">
        <source>Alternation conditions cannot be comments</source>
        <target state="new">Alternation conditions cannot be comments</target>
        <note>This is an error message shown to the user when they write an invalid Regular Expression. Example: a|(?#b)</note>
      </trans-unit>
      <trans-unit id="Alternation_conditions_do_not_capture_and_cannot_be_named">
        <source>Alternation conditions do not capture and cannot be named</source>
        <target state="new">Alternation conditions do not capture and cannot be named</target>
        <note>This is an error message shown to the user when they write an invalid Regular Expression. Example: (?(?'x'))</note>
      </trans-unit>
      <trans-unit id="Avoid_unnecessary_value_assignments_in_your_code_as_these_likely_indicate_redundant_value_computations_If_the_value_computation_is_not_redundant_and_you_intend_to_retain_the_assignmentcomma_then_change_the_assignment_target_to_a_local_variable_whose_name_starts_with_an_underscore_and_is_optionally_followed_by_an_integercomma_such_as___comma__1_comma__2_comma_etc_These_are_treated_as_special_discard_symbol_names">
        <source>Avoid unnecessary value assignments in your code, as these likely indicate redundant value computations. If the value computation is not redundant and you intend to retain the assignment, then change the assignment target to a local variable whose name starts with an underscore and is optionally followed by an integer, such as '_', '_1', '_2', etc. These are treated as special discard symbol names.</source>
        <target state="new">Avoid unnecessary value assignments in your code, as these likely indicate redundant value computations. If the value computation is not redundant and you intend to retain the assignment, then change the assignment target to a local variable whose name starts with an underscore and is optionally followed by an integer, such as '_', '_1', '_2', etc. These are treated as special discard symbol names.</target>
        <note />
      </trans-unit>
      <trans-unit id="Avoid_unused_paramereters_in_your_code_If_the_parameter_cannot_be_removed_then_change_its_name_so_it_starts_with_an_underscore_and_is_optionally_followed_by_an_integer_such_as__comma__1_comma__2_etc_These_are_treated_as_special_discard_symbol_names">
        <source>Avoid unused paramereters in your code. If the parameter cannot be removed, then change its name so it starts with an underscore and is optionally followed by an integer, such as '_', '_1', '_2', etc. These are treated as special discard symbol names.</source>
        <target state="new">Avoid unused paramereters in your code. If the parameter cannot be removed, then change its name so it starts with an underscore and is optionally followed by an integer, such as '_', '_1', '_2', etc. These are treated as special discard symbol names.</target>
        <note />
      </trans-unit>
      <trans-unit id="Cannot_include_class_0_in_character_range">
        <source>Cannot include class \{0} in character range</source>
        <target state="new">Cannot include class \{0} in character range</target>
        <note>This is an error message shown to the user when they write an invalid Regular Expression. Example: [a-\w]. {0} is the invalid class (\w here)</note>
      </trans-unit>
      <trans-unit id="Capture_group_numbers_must_be_less_than_or_equal_to_Int32_MaxValue">
        <source>Capture group numbers must be less than or equal to Int32.MaxValue</source>
        <target state="new">Capture group numbers must be less than or equal to Int32.MaxValue</target>
        <note>This is an error message shown to the user when they write an invalid Regular Expression. Example: a{2147483648}</note>
      </trans-unit>
      <trans-unit id="Capture_number_cannot_be_zero">
        <source>Capture number cannot be zero</source>
        <target state="new">Capture number cannot be zero</target>
        <note>This is an error message shown to the user when they write an invalid Regular Expression. Example: (?&lt;0&gt;a)</note>
      </trans-unit>
      <trans-unit id="Change_namespace_to_0">
        <source>Change namespace to '{0}'</source>
        <target state="translated">Zmień przestrzeń nazw na „{0}”</target>
        <note />
      </trans-unit>
      <trans-unit id="Change_to_global_namespace">
        <source>Change to global namespace</source>
        <target state="translated">Zmień na globalną przestrzeń nazw</target>
        <note />
      </trans-unit>
      <trans-unit id="Code_Quality">
        <source>Code Quality</source>
        <target state="translated">Jakość kodu</target>
        <note />
      </trans-unit>
      <trans-unit id="Convert_to_linq">
        <source>Convert to LINQ</source>
        <target state="translated">Konwertuj na składnię LINQ</target>
        <note />
      </trans-unit>
      <trans-unit id="Add_to_0">
        <source>Add to '{0}'</source>
        <target state="translated">Dodaj do elementu „{0}”</target>
        <note />
      </trans-unit>
      <trans-unit id="Convert_to_class">
        <source>Convert to class</source>
        <target state="translated">Konwertuj na klasę</target>
        <note />
      </trans-unit>
      <trans-unit id="Convert_to_linq_call_form">
        <source>Convert to LINQ (call form)</source>
        <target state="translated">Konwertuj na składnię LINQ (wywołaj formularz)</target>
        <note />
      </trans-unit>
      <trans-unit id="Convert_to_struct">
        <source>Convert to struct</source>
        <target state="translated">Konwertuj na strukturę</target>
        <note />
      </trans-unit>
      <trans-unit id="Convert_to_tuple">
        <source>Convert to tuple</source>
        <target state="translated">Konwertuj na spójną kolekcję</target>
        <note />
      </trans-unit>
      <trans-unit id="DisposableFieldsShouldBeDisposedDescription">
        <source>A type that implements System.IDisposable declares fields that are of types that also implement IDisposable. The Dispose method of the field is not called by the Dispose method of the declaring type. To fix a violation of this rule, call Dispose on fields that are of types that implement IDisposable if you are responsible for allocating and releasing the unmanaged resources held by the field.</source>
        <target state="new">A type that implements System.IDisposable declares fields that are of types that also implement IDisposable. The Dispose method of the field is not called by the Dispose method of the declaring type. To fix a violation of this rule, call Dispose on fields that are of types that implement IDisposable if you are responsible for allocating and releasing the unmanaged resources held by the field.</target>
        <note />
      </trans-unit>
      <trans-unit id="Disposable_field_0_is_never_disposed">
        <source>Disposable field '{0}' is never disposed</source>
        <target state="new">Disposable field '{0}' is never disposed</target>
        <note />
      </trans-unit>
      <trans-unit id="Disposable_fields_should_be_disposed">
        <source>Disposable fields should be disposed</source>
        <target state="new">Disposable fields should be disposed</target>
        <note />
      </trans-unit>
      <trans-unit id="Disposable_object_created_by_0_is_never_disposed">
        <source>Disposable object created by '{0}' is never disposed</source>
        <target state="new">Disposable object created by '{0}' is never disposed</target>
        <note />
      </trans-unit>
      <trans-unit id="Dispose_objects_before_losing_scope">
        <source>Dispose objects before losing scope</source>
        <target state="new">Dispose objects before losing scope</target>
        <note />
      </trans-unit>
      <trans-unit id="Expression_value_is_never_used">
        <source>Expression value is never used</source>
        <target state="translated">Wartość wyrażenia nie jest nigdy używana.</target>
        <note />
      </trans-unit>
      <trans-unit id="Failed_to_analyze_data_flow_for_0">
        <source>Failed to analyze data-flow for: {0}</source>
        <target state="translated">Nie można przeanalizować przepływu danych dla: {0}</target>
        <note />
      </trans-unit>
      <trans-unit id="Fix_formatting">
        <source>Fix formatting</source>
        <target state="translated">Napraw formatowanie</target>
        <note />
      </trans-unit>
      <trans-unit id="Fix_typo_0">
        <source>Fix typo '{0}'</source>
        <target state="translated">Popraw błąd pisowni „{0}”</target>
        <note />
      </trans-unit>
      <trans-unit id="Formatting_document">
        <source>Formatting document</source>
        <target state="translated">Trwa formatowanie dokumentu...</target>
        <note />
      </trans-unit>
      <trans-unit id="Generate_parameter_0">
        <source>Generate parameter '{0}'</source>
        <target state="new">Generate parameter '{0}'</target>
        <note />
      </trans-unit>
      <trans-unit id="Generate_parameter_0_and_overrides_implementations">
        <source>Generate parameter '{0}' (and overrides/implementations)</source>
        <target state="new">Generate parameter '{0}' (and overrides/implementations)</target>
        <note />
      </trans-unit>
      <trans-unit id="Illegal_backslash_at_end_of_pattern">
        <source>Illegal \ at end of pattern</source>
        <target state="new">Illegal \ at end of pattern</target>
        <note>This is an error message shown to the user when they write an invalid Regular Expression. Example: \</note>
      </trans-unit>
      <trans-unit id="Illegal_x_y_with_x_less_than_y">
        <source>Illegal {x,y} with x &gt; y</source>
        <target state="new">Illegal {x,y} with x &gt; y</target>
        <note>This is an error message shown to the user when they write an invalid Regular Expression. Example: a{1,0}</note>
      </trans-unit>
      <trans-unit id="Incomplete_character_escape">
        <source>Incomplete \p{X} character escape</source>
        <target state="new">Incomplete \p{X} character escape</target>
        <note>This is an error message shown to the user when they write an invalid Regular Expression. Example: \p{ Cc }</note>
      </trans-unit>
      <trans-unit id="Indent_all_arguments">
        <source>Indent all arguments</source>
        <target state="translated">Dodaj wcięcie dla wszystkich argumentów</target>
        <note />
      </trans-unit>
      <trans-unit id="Indent_all_parameters">
        <source>Indent all parameters</source>
        <target state="translated">Dodaj wcięcie dla wszystkich parametrów</target>
        <note />
      </trans-unit>
      <trans-unit id="Indent_wrapped_arguments">
        <source>Indent wrapped arguments</source>
        <target state="translated">Dodaj wcięcie dla opakowanych argumentów</target>
        <note />
      </trans-unit>
      <trans-unit id="Indent_wrapped_parameters">
        <source>Indent wrapped parameters</source>
        <target state="translated">Dodaj wcięcie dla opakowanych parametrów</target>
        <note />
      </trans-unit>
      <trans-unit id="Indexing_can_be_simplified">
        <source>Indexing can be simplified</source>
        <target state="translated">Indeksowanie można uprościć</target>
        <note />
      </trans-unit>
      <trans-unit id="Insufficient_hexadecimal_digits">
        <source>Insufficient hexadecimal digits</source>
        <target state="new">Insufficient hexadecimal digits</target>
        <note>This is an error message shown to the user when they write an invalid Regular Expression. Example: \x</note>
      </trans-unit>
      <trans-unit id="Introduce_constant">
        <source>Introduce constant</source>
        <target state="translated">Wprowadź stałą</target>
        <note />
      </trans-unit>
      <trans-unit id="Introduce_field">
        <source>Introduce field</source>
        <target state="translated">Wprowadź pole</target>
        <note />
      </trans-unit>
      <trans-unit id="Introduce_local">
        <source>Introduce local</source>
        <target state="translated">Wprowadź zmienną lokalną</target>
        <note />
      </trans-unit>
      <trans-unit id="Introduce_query_variable">
        <source>Introduce query variable</source>
        <target state="translated">Wprowadź zmienną zapytania</target>
        <note />
      </trans-unit>
      <trans-unit id="Invalid_group_name_Group_names_must_begin_with_a_word_character">
        <source>Invalid group name: Group names must begin with a word character</source>
        <target state="new">Invalid group name: Group names must begin with a word character</target>
        <note>This is an error message shown to the user when they write an invalid Regular Expression. Example: (?&lt;a &gt;a)</note>
      </trans-unit>
      <trans-unit id="Make_readonly_fields_writable">
        <source>Make readonly fields writable</source>
        <target state="new">Make readonly fields writable</target>
        <note>{Locked="readonly"} "readonly" is C# keyword and should not be localized.</note>
      </trans-unit>
      <trans-unit id="Invert_conditional">
        <source>Invert conditional</source>
        <target state="translated">Odwróć warunkowe</target>
        <note />
      </trans-unit>
      <trans-unit id="Local_function_can_be_made_static">
        <source>Local function can be made static</source>
        <target state="new">Local function can be made static</target>
        <note />
      </trans-unit>
      <trans-unit id="Make_local_function_static">
        <source>Make local function 'static'</source>
        <target state="new">Make local function 'static'</target>
        <note />
      </trans-unit>
      <trans-unit id="Malformed">
        <source>malformed</source>
        <target state="new">malformed</target>
        <note>This is an error message shown to the user when they write an invalid Regular Expression. Example: (?(0</note>
      </trans-unit>
      <trans-unit id="Malformed_character_escape">
        <source>Malformed \p{X} character escape</source>
        <target state="new">Malformed \p{X} character escape</target>
        <note>This is an error message shown to the user when they write an invalid Regular Expression. Example: \p {Cc}</note>
      </trans-unit>
      <trans-unit id="Malformed_named_back_reference">
        <source>Malformed \k&lt;...&gt; named back reference</source>
        <target state="new">Malformed \k&lt;...&gt; named back reference</target>
        <note>This is an error message shown to the user when they write an invalid Regular Expression. Example: \k'</note>
      </trans-unit>
      <trans-unit id="Merge_with_nested_0_statement">
        <source>Merge with nested '{0}' statement</source>
        <target state="new">Merge with nested '{0}' statement</target>
        <note />
      </trans-unit>
      <trans-unit id="Merge_with_next_0_statement">
        <source>Merge with next '{0}' statement</source>
        <target state="new">Merge with next '{0}' statement</target>
        <note />
      </trans-unit>
      <trans-unit id="Merge_with_outer_0_statement">
        <source>Merge with outer '{0}' statement</source>
        <target state="new">Merge with outer '{0}' statement</target>
        <note />
      </trans-unit>
      <trans-unit id="Merge_with_previous_0_statement">
        <source>Merge with previous '{0}' statement</source>
        <target state="new">Merge with previous '{0}' statement</target>
        <note />
      </trans-unit>
      <trans-unit id="MethodMustReturnStreamThatSupportsReadAndSeek">
        <source>{0} must return a stream that supports read and seek operations.</source>
        <target state="new">{0} must return a stream that supports read and seek operations.</target>
        <note />
      </trans-unit>
      <trans-unit id="Missing_control_character">
        <source>Missing control character</source>
        <target state="new">Missing control character</target>
        <note>This is an error message shown to the user when they write an invalid Regular Expression. Example: \c</note>
      </trans-unit>
      <trans-unit id="Move_contents_to_namespace">
        <source>Move contents to namespace...</source>
        <target state="new">Move contents to namespace...</target>
        <note />
      </trans-unit>
      <trans-unit id="Move_file_to_0">
        <source>Move file to '{0}'</source>
        <target state="translated">Przenieś plik do lokalizacji „{0}”</target>
        <note />
      </trans-unit>
      <trans-unit id="Move_file_to_project_root_folder">
        <source>Move file to project root folder</source>
        <target state="translated">Przenieś plik do folderu głównego projektu</target>
        <note />
      </trans-unit>
      <trans-unit id="Move_to_namespace">
        <source>Move to namespace...</source>
        <target state="new">Move to namespace...</target>
        <note />
      </trans-unit>
      <trans-unit id="Nested_quantifier_0">
        <source>Nested quantifier {0}</source>
        <target state="new">Nested quantifier {0}</target>
        <note>This is an error message shown to the user when they write an invalid Regular Expression. Example: a**. In this case {0} will be '*', the extra unnecessary quantifier.</note>
      </trans-unit>
      <trans-unit id="Not_enough_close_parens">
        <source>Not enough )'s</source>
        <target state="new">Not enough )'s</target>
        <note>This is an error message shown to the user when they write an invalid Regular Expression. Example: (a</note>
      </trans-unit>
      <trans-unit id="Private_member_0_can_be_removed_as_the_value_assigned_to_it_is_never_read">
        <source>Private member '{0}' can be removed as the value assigned to it is never read.</source>
        <target state="translated">Prywatną składową „{0}” można usunąć, ponieważ przypisana do niej wartość nie jest nigdy odczytywana.</target>
        <note />
      </trans-unit>
      <trans-unit id="Private_member_0_is_unused">
        <source>Private member '{0}' is unused.</source>
        <target state="translated">Prywatna składowa „{0}” jest nieużywana.</target>
        <note />
      </trans-unit>
      <trans-unit id="Modifying_source_file_will_prevent_the_debug_session_from_continuing_due_to_internal_error">
        <source>Modifying source file {0} will prevent the debug session from continuing due to internal error: {1}.</source>
        <target state="translated">Zmodyfikowanie pliku źródłowego {0} uniemożliwi kontynuowanie sesji debugowania ze względu na błąd wewnętrzny: {1}.</target>
        <note />
      </trans-unit>
      <trans-unit id="Private_method_0_can_be_removed_as_it_is_never_invoked">
        <source>Private method '{0}' can be removed as it is never invoked.</source>
        <target state="translated">Metodę prywatną „{0}” można usunąć, ponieważ nie jest nigdy wywoływana.</target>
        <note />
      </trans-unit>
      <trans-unit id="Private_property_0_can_be_converted_to_a_method_as_its_get_accessor_is_never_invoked">
        <source>Private property '{0}' can be converted to a method as its get accessor is never invoked.</source>
        <target state="new">Private property '{0}' can be converted to a method as its get accessor is never invoked.</target>
        <note />
      </trans-unit>
      <trans-unit id="Pull_0_up">
        <source>Pull '{0}' up</source>
        <target state="translated">Ściągnij element „{0}” w górę</target>
        <note />
      </trans-unit>
      <trans-unit id="Pull_0_up_to_1">
        <source>Pull '{0}' up to '{1}'</source>
        <target state="translated">Ściągnij elementy „{0}” aż do elementu „{1}”</target>
        <note />
      </trans-unit>
      <trans-unit id="Pull_members_up_to_base_type">
        <source>Pull members up to base type...</source>
        <target state="translated">Ściągnij składowe aż do typu bazowego...</target>
        <note />
      </trans-unit>
      <trans-unit id="Quantifier_x_y_following_nothing">
        <source>Quantifier {x,y} following nothing</source>
        <target state="new">Quantifier {x,y} following nothing</target>
        <note>This is an error message shown to the user when they write an invalid Regular Expression. Example: *</note>
      </trans-unit>
      <trans-unit id="Reference_to_undefined_group">
        <source>reference to undefined group</source>
        <target state="new">reference to undefined group</target>
        <note>This is an error message shown to the user when they write an invalid Regular Expression. Example: (?(1))</note>
      </trans-unit>
      <trans-unit id="Reference_to_undefined_group_name_0">
        <source>Reference to undefined group name {0}</source>
        <target state="new">Reference to undefined group name {0}</target>
        <note>This is an error message shown to the user when they write an invalid Regular Expression. Example: \k&lt;a&gt;. Here, {0} will be the name of the undefined group ('a')</note>
      </trans-unit>
      <trans-unit id="Reference_to_undefined_group_number_0">
        <source>Reference to undefined group number {0}</source>
        <target state="new">Reference to undefined group number {0}</target>
        <note>This is an error message shown to the user when they write an invalid Regular Expression. Example: (?&lt;-1&gt;). Here, {0} will be the number of the undefined group ('1')</note>
      </trans-unit>
      <trans-unit id="Regex_all_control_characters_long">
        <source>All control characters. This includes the Cc, Cf, Cs, Co, and Cn categories.</source>
        <target state="new">All control characters. This includes the Cc, Cf, Cs, Co, and Cn categories.</target>
        <note />
      </trans-unit>
      <trans-unit id="Regex_all_control_characters_short">
        <source>all control characters</source>
        <target state="new">all control characters</target>
        <note />
      </trans-unit>
      <trans-unit id="Regex_all_diacritic_marks_long">
        <source>All diacritic marks. This includes the Mn, Mc, and Me categories.</source>
        <target state="new">All diacritic marks. This includes the Mn, Mc, and Me categories.</target>
        <note />
      </trans-unit>
      <trans-unit id="Regex_all_diacritic_marks_short">
        <source>all diacritic marks</source>
        <target state="new">all diacritic marks</target>
        <note />
      </trans-unit>
      <trans-unit id="Regex_all_letter_characters_long">
        <source>All letter characters. This includes the Lu, Ll, Lt, Lm, and Lo characters.</source>
        <target state="new">All letter characters. This includes the Lu, Ll, Lt, Lm, and Lo characters.</target>
        <note />
      </trans-unit>
      <trans-unit id="Regex_all_letter_characters_short">
        <source>all letter characters</source>
        <target state="new">all letter characters</target>
        <note />
      </trans-unit>
      <trans-unit id="Regex_all_numbers_long">
        <source>All numbers. This includes the Nd, Nl, and No categories.</source>
        <target state="new">All numbers. This includes the Nd, Nl, and No categories.</target>
        <note />
      </trans-unit>
      <trans-unit id="Regex_all_numbers_short">
        <source>all numbers</source>
        <target state="new">all numbers</target>
        <note />
      </trans-unit>
      <trans-unit id="Regex_all_punctuation_characters_long">
        <source>All punctuation characters. This includes the Pc, Pd, Ps, Pe, Pi, Pf, and Po categories.</source>
        <target state="new">All punctuation characters. This includes the Pc, Pd, Ps, Pe, Pi, Pf, and Po categories.</target>
        <note />
      </trans-unit>
      <trans-unit id="Regex_all_punctuation_characters_short">
        <source>all punctuation characters</source>
        <target state="new">all punctuation characters</target>
        <note />
      </trans-unit>
      <trans-unit id="Regex_all_separator_characters_long">
        <source>All separator characters. This includes the Zs, Zl, and Zp categories.</source>
        <target state="new">All separator characters. This includes the Zs, Zl, and Zp categories.</target>
        <note />
      </trans-unit>
      <trans-unit id="Regex_all_separator_characters_short">
        <source>all separator characters</source>
        <target state="new">all separator characters</target>
        <note />
      </trans-unit>
      <trans-unit id="Regex_all_symbols_long">
        <source>All symbols. This includes the Sm, Sc, Sk, and So categories.</source>
        <target state="new">All symbols. This includes the Sm, Sc, Sk, and So categories.</target>
        <note />
      </trans-unit>
      <trans-unit id="Regex_all_symbols_short">
        <source>all symbols</source>
        <target state="new">all symbols</target>
        <note />
      </trans-unit>
      <trans-unit id="Regex_alternation_long">
        <source>You can use the vertical bar (|) character to match any one of a series of patterns, where the | character separates each pattern.</source>
        <target state="new">You can use the vertical bar (|) character to match any one of a series of patterns, where the | character separates each pattern.</target>
        <note />
      </trans-unit>
      <trans-unit id="Regex_alternation_short">
        <source>alternation</source>
        <target state="new">alternation</target>
        <note />
      </trans-unit>
      <trans-unit id="Regex_any_character_group_long">
        <source>The period character (.) matches any character except \n (the newline character, \u000A).  If a regular expression pattern is modified by the RegexOptions.Singleline option, or if the portion of the pattern that contains the . character class is modified by the 's' option, . matches any character.</source>
        <target state="new">The period character (.) matches any character except \n (the newline character, \u000A).  If a regular expression pattern is modified by the RegexOptions.Singleline option, or if the portion of the pattern that contains the . character class is modified by the 's' option, . matches any character.</target>
        <note />
      </trans-unit>
      <trans-unit id="Regex_any_character_group_short">
        <source>any character</source>
        <target state="new">any character</target>
        <note />
      </trans-unit>
      <trans-unit id="Regex_backspace_character_long">
        <source>Matches a backspace character, \u0008</source>
        <target state="new">Matches a backspace character, \u0008</target>
        <note />
      </trans-unit>
      <trans-unit id="Regex_backspace_character_short">
        <source>backspace character</source>
        <target state="new">backspace character</target>
        <note />
      </trans-unit>
      <trans-unit id="Regex_balancing_group_long">
        <source>A balancing group definition deletes the definition of a previously defined group and stores, in the current group, the interval between the previously defined group and the current group.
    
'name1' is the current group (optional), 'name2' is a previously defined group, and 'subexpression' is any valid regular expression pattern. The balancing group definition deletes the definition of name2 and stores the interval between name2 and name1 in name1. If no name2 group is defined, the match backtracks. Because deleting the last definition of name2 reveals the previous definition of name2, this construct lets you use the stack of captures for group name2 as a counter for keeping track of nested constructs such as parentheses or opening and closing brackets.

The balancing group definition uses 'name2' as a stack. The beginning character of each nested construct is placed in the group and in its Group.Captures collection. When the closing character is matched, its corresponding opening character is removed from the group, and the Captures collection is decreased by one. After the opening and closing characters of all nested constructs have been matched, 'name1' is empty.</source>
        <target state="new">A balancing group definition deletes the definition of a previously defined group and stores, in the current group, the interval between the previously defined group and the current group.
    
'name1' is the current group (optional), 'name2' is a previously defined group, and 'subexpression' is any valid regular expression pattern. The balancing group definition deletes the definition of name2 and stores the interval between name2 and name1 in name1. If no name2 group is defined, the match backtracks. Because deleting the last definition of name2 reveals the previous definition of name2, this construct lets you use the stack of captures for group name2 as a counter for keeping track of nested constructs such as parentheses or opening and closing brackets.

The balancing group definition uses 'name2' as a stack. The beginning character of each nested construct is placed in the group and in its Group.Captures collection. When the closing character is matched, its corresponding opening character is removed from the group, and the Captures collection is decreased by one. After the opening and closing characters of all nested constructs have been matched, 'name1' is empty.</target>
        <note />
      </trans-unit>
      <trans-unit id="Regex_balancing_group_short">
        <source>balancing group</source>
        <target state="new">balancing group</target>
        <note />
      </trans-unit>
      <trans-unit id="Regex_base_group">
        <source>base-group</source>
        <target state="new">base-group</target>
        <note />
      </trans-unit>
      <trans-unit id="Regex_bell_character_long">
        <source>Matches a bell (alarm) character, \u0007</source>
        <target state="new">Matches a bell (alarm) character, \u0007</target>
        <note />
      </trans-unit>
      <trans-unit id="Regex_bell_character_short">
        <source>bell character</source>
        <target state="new">bell character</target>
        <note />
      </trans-unit>
      <trans-unit id="Regex_carriage_return_character_long">
        <source>Matches a carriage-return character, \u000D.  Note that \r is not equivalent to the newline character, \n.</source>
        <target state="new">Matches a carriage-return character, \u000D.  Note that \r is not equivalent to the newline character, \n.</target>
        <note />
      </trans-unit>
      <trans-unit id="Regex_carriage_return_character_short">
        <source>carriage-return character</source>
        <target state="new">carriage-return character</target>
        <note />
      </trans-unit>
      <trans-unit id="Regex_character_class_subtraction_long">
        <source>Character class subtraction yields a set of characters that is the result of excluding the characters in one character class from another character class.

'base_group' is a positive or negative character group or range. The 'excluded_group' component is another positive or negative character group, or another character class subtraction expression (that is, you can nest character class subtraction expressions).</source>
        <target state="new">Character class subtraction yields a set of characters that is the result of excluding the characters in one character class from another character class.

'base_group' is a positive or negative character group or range. The 'excluded_group' component is another positive or negative character group, or another character class subtraction expression (that is, you can nest character class subtraction expressions).</target>
        <note />
      </trans-unit>
      <trans-unit id="Regex_character_class_subtraction_short">
        <source>character class subtraction</source>
        <target state="new">character class subtraction</target>
        <note />
      </trans-unit>
      <trans-unit id="Regex_character_group">
        <source>character-group</source>
        <target state="new">character-group</target>
        <note />
      </trans-unit>
      <trans-unit id="Regex_comment">
        <source>comment</source>
        <target state="new">comment</target>
        <note />
      </trans-unit>
      <trans-unit id="Regex_conditional_expression_match_long">
        <source>This language element attempts to match one of two patterns depending on whether it can match an initial pattern.

'expression' is the initial pattern to match, 'yes' is the pattern to match if expression is matched, and 'no' is the optional pattern to match if expression is not matched.</source>
        <target state="new">This language element attempts to match one of two patterns depending on whether it can match an initial pattern.

'expression' is the initial pattern to match, 'yes' is the pattern to match if expression is matched, and 'no' is the optional pattern to match if expression is not matched.</target>
        <note />
      </trans-unit>
      <trans-unit id="Regex_conditional_expression_match_short">
        <source>conditional expression match</source>
        <target state="new">conditional expression match</target>
        <note />
      </trans-unit>
      <trans-unit id="Regex_conditional_group_match_long">
        <source>This language element attempts to match one of two patterns depending on whether it has matched a specified capturing group.

'name' is the name (or number) of a capturing group, 'yes' is the expression to match if 'name' (or 'number') has a match, and 'no' is the optional expression to match if it does not.</source>
        <target state="new">This language element attempts to match one of two patterns depending on whether it has matched a specified capturing group.

'name' is the name (or number) of a capturing group, 'yes' is the expression to match if 'name' (or 'number') has a match, and 'no' is the optional expression to match if it does not.</target>
        <note />
      </trans-unit>
      <trans-unit id="Regex_conditional_group_match_short">
        <source>conditional group match</source>
        <target state="new">conditional group match</target>
        <note />
      </trans-unit>
      <trans-unit id="Regex_contiguous_matches_long">
        <source>The \G anchor specifies that a match must occur at the point where the previous match ended. When you use this anchor with the Regex.Matches or Match.NextMatch method, it ensures that all matches are contiguous.</source>
        <target state="new">The \G anchor specifies that a match must occur at the point where the previous match ended. When you use this anchor with the Regex.Matches or Match.NextMatch method, it ensures that all matches are contiguous.</target>
        <note />
      </trans-unit>
      <trans-unit id="Regex_contiguous_matches_short">
        <source>contiguous matches</source>
        <target state="new">contiguous matches</target>
        <note />
      </trans-unit>
      <trans-unit id="Regex_control_character_long">
        <source>Matches an ASCII control character, where X is the letter of the control character. For example, \cC is CTRL-C.</source>
        <target state="new">Matches an ASCII control character, where X is the letter of the control character. For example, \cC is CTRL-C.</target>
        <note />
      </trans-unit>
      <trans-unit id="Regex_control_character_short">
        <source>control character</source>
        <target state="new">control character</target>
        <note />
      </trans-unit>
      <trans-unit id="Regex_decimal_digit_character_long">
        <source>\d matches any decimal digit. It is equivalent to the \p{Nd} regular expression pattern, which includes the standard decimal digits 0-9 as well as the decimal digits of a number of other character sets.

If ECMAScript-compliant behavior is specified, \d is equivalent to [0-9]</source>
        <target state="new">\d matches any decimal digit. It is equivalent to the \p{Nd} regular expression pattern, which includes the standard decimal digits 0-9 as well as the decimal digits of a number of other character sets.

If ECMAScript-compliant behavior is specified, \d is equivalent to [0-9]</target>
        <note />
      </trans-unit>
      <trans-unit id="Regex_decimal_digit_character_short">
        <source>decimal-digit character</source>
        <target state="new">decimal-digit character</target>
        <note />
      </trans-unit>
      <trans-unit id="Regex_end_of_line_comment_long">
        <source>A number sign (#) marks an x-mode comment, which starts at the unescaped # character at the end of the regular expression pattern and continues until the end of the line. To use this construct, you must either enable the x option (through inline options) or supply the RegexOptions.IgnorePatternWhitespace value to the option parameter when instantiating the Regex object or calling a static Regex method.</source>
        <target state="new">A number sign (#) marks an x-mode comment, which starts at the unescaped # character at the end of the regular expression pattern and continues until the end of the line. To use this construct, you must either enable the x option (through inline options) or supply the RegexOptions.IgnorePatternWhitespace value to the option parameter when instantiating the Regex object or calling a static Regex method.</target>
        <note />
      </trans-unit>
      <trans-unit id="Regex_end_of_line_comment_short">
        <source>end-of-line comment</source>
        <target state="new">end-of-line comment</target>
        <note />
      </trans-unit>
      <trans-unit id="Regex_end_of_string_only_long">
        <source>The \z anchor specifies that a match must occur at the end of the input string. Like the $ language element, \z ignores the RegexOptions.Multiline option. Unlike the \Z language element, \z does not match a \n character at the end of a string. Therefore, it can only match the last line of the input string.</source>
        <target state="new">The \z anchor specifies that a match must occur at the end of the input string. Like the $ language element, \z ignores the RegexOptions.Multiline option. Unlike the \Z language element, \z does not match a \n character at the end of a string. Therefore, it can only match the last line of the input string.</target>
        <note />
      </trans-unit>
      <trans-unit id="Regex_end_of_string_only_short">
        <source>end of string only</source>
        <target state="new">end of string only</target>
        <note />
      </trans-unit>
      <trans-unit id="Regex_end_of_string_or_before_ending_newline_long">
        <source>The \Z anchor specifies that a match must occur at the end of the input string, or before \n at the end of the input string. It is identical to the $ anchor, except that \Z ignores the RegexOptions.Multiline option. Therefore, in a multiline string, it can only match the end of the last line, or the last line before \n.

The \Z anchor matches \n but does not match \r\n (the CR/LF character combination). To match CR/LF, include \r?\Z in the regular expression pattern.</source>
        <target state="new">The \Z anchor specifies that a match must occur at the end of the input string, or before \n at the end of the input string. It is identical to the $ anchor, except that \Z ignores the RegexOptions.Multiline option. Therefore, in a multiline string, it can only match the end of the last line, or the last line before \n.

The \Z anchor matches \n but does not match \r\n (the CR/LF character combination). To match CR/LF, include \r?\Z in the regular expression pattern.</target>
        <note />
      </trans-unit>
      <trans-unit id="Regex_end_of_string_or_before_ending_newline_short">
        <source>end of string or before ending newline</source>
        <target state="new">end of string or before ending newline</target>
        <note />
      </trans-unit>
      <trans-unit id="Regex_end_of_string_or_line_long">
        <source>The $ anchor specifies that the preceding pattern must occur at the end of the input string, or before \n at the end of the input string. If you use $ with the RegexOptions.Multiline option, the match can also occur at the end of a line.

The $ anchor matches \n but does not match \r\n (the combination of carriage return and newline characters, or CR/LF). To match the CR/LF character combination, include \r?$ in the regular expression pattern.</source>
        <target state="new">The $ anchor specifies that the preceding pattern must occur at the end of the input string, or before \n at the end of the input string. If you use $ with the RegexOptions.Multiline option, the match can also occur at the end of a line.

The $ anchor matches \n but does not match \r\n (the combination of carriage return and newline characters, or CR/LF). To match the CR/LF character combination, include \r?$ in the regular expression pattern.</target>
        <note />
      </trans-unit>
      <trans-unit id="Regex_end_of_string_or_line_short">
        <source>end of string or line</source>
        <target state="new">end of string or line</target>
        <note />
      </trans-unit>
      <trans-unit id="Regex_escape_character_long">
        <source>Matches an escape character, \u001B</source>
        <target state="new">Matches an escape character, \u001B</target>
        <note />
      </trans-unit>
      <trans-unit id="Regex_escape_character_short">
        <source>escape character</source>
        <target state="new">escape character</target>
        <note />
      </trans-unit>
      <trans-unit id="Regex_excluded_group">
        <source>excluded-group</source>
        <target state="new">excluded-group</target>
        <note />
      </trans-unit>
      <trans-unit id="Regex_expression">
        <source>expression</source>
        <target state="new">expression</target>
        <note />
      </trans-unit>
      <trans-unit id="Regex_form_feed_character_long">
        <source>Matches a form-feed character, \u000C</source>
        <target state="new">Matches a form-feed character, \u000C</target>
        <note />
      </trans-unit>
      <trans-unit id="Regex_form_feed_character_short">
        <source>form-feed character</source>
        <target state="new">form-feed character</target>
        <note />
      </trans-unit>
      <trans-unit id="Regex_group_options_long">
        <source>This grouping construct applies or disables the specified options within a subexpression. The options to enable are specified after the question mark, and the options to disable after the minus sign. The allowed options are:

    i	Use case-insensitive matching.
    m	Use multiline mode, where ^ and $ match the beginning and end of each line
	(instead of the beginning and end of the input string).
    s	Use single-line mode, where the period (.) matches every character
	(instead of every character except \n).
    n	Do not capture unnamed groups. The only valid captures are explicitly
	named or numbered groups of the form (?&lt;name&gt; subexpression).
    x	Exclude unescaped white space from the pattern, and enable comments
	after a number sign (#).</source>
        <target state="new">This grouping construct applies or disables the specified options within a subexpression. The options to enable are specified after the question mark, and the options to disable after the minus sign. The allowed options are:

    i	Use case-insensitive matching.
    m	Use multiline mode, where ^ and $ match the beginning and end of each line
	(instead of the beginning and end of the input string).
    s	Use single-line mode, where the period (.) matches every character
	(instead of every character except \n).
    n	Do not capture unnamed groups. The only valid captures are explicitly
	named or numbered groups of the form (?&lt;name&gt; subexpression).
    x	Exclude unescaped white space from the pattern, and enable comments
	after a number sign (#).</target>
        <note />
      </trans-unit>
      <trans-unit id="Regex_group_options_short">
        <source>group options</source>
        <target state="new">group options</target>
        <note />
      </trans-unit>
      <trans-unit id="Regex_hexadecimal_escape_long">
        <source>Matches an ASCII character, where ## is a two-digit hexadecimal character code.</source>
        <target state="new">Matches an ASCII character, where ## is a two-digit hexadecimal character code.</target>
        <note />
      </trans-unit>
      <trans-unit id="Regex_hexadecimal_escape_short">
        <source>hexidecimal escape</source>
        <target state="new">hexidecimal escape</target>
        <note />
      </trans-unit>
      <trans-unit id="Regex_inline_comment_long">
        <source>The (?# comment) construct lets you include an inline comment in a regular expression. The regular expression engine does not use any part of the comment in pattern matching, although the comment is included in the string that is returned by the Regex.ToString method. The comment ends at the first closing parenthesis.</source>
        <target state="new">The (?# comment) construct lets you include an inline comment in a regular expression. The regular expression engine does not use any part of the comment in pattern matching, although the comment is included in the string that is returned by the Regex.ToString method. The comment ends at the first closing parenthesis.</target>
        <note />
      </trans-unit>
      <trans-unit id="Regex_inline_comment_short">
        <source>inline comment</source>
        <target state="new">inline comment</target>
        <note />
      </trans-unit>
      <trans-unit id="Regex_inline_options_long">
        <source>Enables or disables specific pattern matching options for the remainder of a regular expression. The options to enable are specified after the question mark, and the options to disable after the minus sign. The allowed options are:

    i	Use case-insensitive matching.
    m	Use multiline mode, where ^ and $ match the beginning and end of each line
	(instead of the beginning and end of the input string).
    s	Use single-line mode, where the period (.) matches every character
	(instead of every character except \n).
    n	Do not capture unnamed groups. The only valid captures are explicitly named
	or numbered groups of the form (?&lt;name&gt; subexpression).
    x	Exclude unescaped white space from the pattern, and enable comments
	after a number sign (#).</source>
        <target state="new">Enables or disables specific pattern matching options for the remainder of a regular expression. The options to enable are specified after the question mark, and the options to disable after the minus sign. The allowed options are:

    i	Use case-insensitive matching.
    m	Use multiline mode, where ^ and $ match the beginning and end of each line
	(instead of the beginning and end of the input string).
    s	Use single-line mode, where the period (.) matches every character
	(instead of every character except \n).
    n	Do not capture unnamed groups. The only valid captures are explicitly named
	or numbered groups of the form (?&lt;name&gt; subexpression).
    x	Exclude unescaped white space from the pattern, and enable comments
	after a number sign (#).</target>
        <note />
      </trans-unit>
      <trans-unit id="Regex_inline_options_short">
        <source>inline options</source>
        <target state="new">inline options</target>
        <note />
      </trans-unit>
      <trans-unit id="Regex_issue_0">
        <source>Regex issue: {0}</source>
        <target state="new">Regex issue: {0}</target>
        <note>This is an error message shown to the user when they write an invalid Regular Expression. {0} will be the actual text of one of the above Regular Expression errors.</note>
      </trans-unit>
      <trans-unit id="Regex_letter_lowercase">
        <source>letter, lowercase</source>
        <target state="new">letter, lowercase</target>
        <note />
      </trans-unit>
      <trans-unit id="Regex_letter_modifier">
        <source>letter, modifier</source>
        <target state="new">letter, modifier</target>
        <note />
      </trans-unit>
      <trans-unit id="Regex_letter_other">
        <source>letter, other</source>
        <target state="new">letter, other</target>
        <note />
      </trans-unit>
      <trans-unit id="Regex_letter_titlecase">
        <source>letter, titlecase</source>
        <target state="new">letter, titlecase</target>
        <note />
      </trans-unit>
      <trans-unit id="Regex_letter_uppercase">
        <source>letter, uppercase</source>
        <target state="new">letter, uppercase</target>
        <note />
      </trans-unit>
      <trans-unit id="Regex_mark_enclosing">
        <source>mark, enclosing</source>
        <target state="new">mark, enclosing</target>
        <note />
      </trans-unit>
      <trans-unit id="Regex_mark_nonspacing">
        <source>mark, nonspacing</source>
        <target state="new">mark, nonspacing</target>
        <note />
      </trans-unit>
      <trans-unit id="Regex_mark_spacing_combining">
        <source>mark, spacing combining</source>
        <target state="new">mark, spacing combining</target>
        <note />
      </trans-unit>
      <trans-unit id="Regex_match_at_least_n_times_lazy_long">
        <source>The {n,}? quantifier matches the preceding element at least n times, where n is any integer, but as few times as possible. It is the lazy counterpart of the greedy quantifier {n,}</source>
        <target state="new">The {n,}? quantifier matches the preceding element at least n times, where n is any integer, but as few times as possible. It is the lazy counterpart of the greedy quantifier {n,}</target>
        <note />
      </trans-unit>
      <trans-unit id="Regex_match_at_least_n_times_lazy_short">
        <source>match at least 'n' times (lazy)</source>
        <target state="new">match at least 'n' times (lazy)</target>
        <note />
      </trans-unit>
      <trans-unit id="Regex_match_at_least_n_times_long">
        <source>The {n,} quantifier matches the preceding element at least n times, where n is any integer. {n,} is a greedy quantifier whose lazy equivalent is {n,}?</source>
        <target state="new">The {n,} quantifier matches the preceding element at least n times, where n is any integer. {n,} is a greedy quantifier whose lazy equivalent is {n,}?</target>
        <note />
      </trans-unit>
      <trans-unit id="Regex_match_at_least_n_times_short">
        <source>match at least 'n' times</source>
        <target state="new">match at least 'n' times</target>
        <note />
      </trans-unit>
      <trans-unit id="Regex_match_between_m_and_n_times_lazy_long">
        <source>The {n,m}? quantifier matches the preceding element between n and m times, where n and m are integers, but as few times as possible. It is the lazy counterpart of the greedy quantifier {n,m}</source>
        <target state="new">The {n,m}? quantifier matches the preceding element between n and m times, where n and m are integers, but as few times as possible. It is the lazy counterpart of the greedy quantifier {n,m}</target>
        <note />
      </trans-unit>
      <trans-unit id="Regex_match_between_m_and_n_times_lazy_short">
        <source>match at least 'n' times (lazy)</source>
        <target state="new">match at least 'n' times (lazy)</target>
        <note />
      </trans-unit>
      <trans-unit id="Regex_match_between_m_and_n_times_long">
        <source>The {n,m} quantifier matches the preceding element at least n times, but no more than m times, where n and m are integers. {n,m} is a greedy quantifier whose lazy equivalent is {n,m}?</source>
        <target state="new">The {n,m} quantifier matches the preceding element at least n times, but no more than m times, where n and m are integers. {n,m} is a greedy quantifier whose lazy equivalent is {n,m}?</target>
        <note />
      </trans-unit>
      <trans-unit id="Regex_match_between_m_and_n_times_short">
        <source>match between 'm' and 'n' times</source>
        <target state="new">match between 'm' and 'n' times</target>
        <note />
      </trans-unit>
      <trans-unit id="Regex_match_exactly_n_times_lazy_long">
        <source>The {n}? quantifier matches the preceding element exactly n times, where n is any integer. It is the lazy counterpart of the greedy quantifier {n}+</source>
        <target state="new">The {n}? quantifier matches the preceding element exactly n times, where n is any integer. It is the lazy counterpart of the greedy quantifier {n}+</target>
        <note />
      </trans-unit>
      <trans-unit id="Regex_match_exactly_n_times_lazy_short">
        <source>match exactly 'n' times (lazy)</source>
        <target state="new">match exactly 'n' times (lazy)</target>
        <note />
      </trans-unit>
      <trans-unit id="Regex_match_exactly_n_times_long">
        <source>The {n} quantifier matches the preceding element exactly n times, where n is any integer. {n} is a greedy quantifier whose lazy equivalent is {n}?</source>
        <target state="new">The {n} quantifier matches the preceding element exactly n times, where n is any integer. {n} is a greedy quantifier whose lazy equivalent is {n}?</target>
        <note />
      </trans-unit>
      <trans-unit id="Regex_match_exactly_n_times_short">
        <source>match exactly 'n' times</source>
        <target state="new">match exactly 'n' times</target>
        <note />
      </trans-unit>
      <trans-unit id="Regex_match_one_or_more_times_lazy_long">
        <source>The +? quantifier matches the preceding element one or more times, but as few times as possible. It is the lazy counterpart of the greedy quantifier +</source>
        <target state="new">The +? quantifier matches the preceding element one or more times, but as few times as possible. It is the lazy counterpart of the greedy quantifier +</target>
        <note />
      </trans-unit>
      <trans-unit id="Regex_match_one_or_more_times_lazy_short">
        <source>match one or more times (lazy)</source>
        <target state="new">match one or more times (lazy)</target>
        <note />
      </trans-unit>
      <trans-unit id="Regex_match_one_or_more_times_long">
        <source>The + quantifier matches the preceding element one or more times. It is equivalent to the {1,} quantifier. + is a greedy quantifier whose lazy equivalent is +?.</source>
        <target state="new">The + quantifier matches the preceding element one or more times. It is equivalent to the {1,} quantifier. + is a greedy quantifier whose lazy equivalent is +?.</target>
        <note />
      </trans-unit>
      <trans-unit id="Regex_match_one_or_more_times_short">
        <source>match one or more times</source>
        <target state="new">match one or more times</target>
        <note />
      </trans-unit>
      <trans-unit id="Regex_match_zero_or_more_times_lazy_long">
        <source>The *? quantifier matches the preceding element zero or more times, but as few times as possible. It is the lazy counterpart of the greedy quantifier *</source>
        <target state="new">The *? quantifier matches the preceding element zero or more times, but as few times as possible. It is the lazy counterpart of the greedy quantifier *</target>
        <note />
      </trans-unit>
      <trans-unit id="Regex_match_zero_or_more_times_lazy_short">
        <source>match zero or more times (lazy)</source>
        <target state="new">match zero or more times (lazy)</target>
        <note />
      </trans-unit>
      <trans-unit id="Regex_match_zero_or_more_times_long">
        <source>The * quantifier matches the preceding element zero or more times. It is equivalent to the {0,} quantifier. * is a greedy quantifier whose lazy equivalent is *?.</source>
        <target state="new">The * quantifier matches the preceding element zero or more times. It is equivalent to the {0,} quantifier. * is a greedy quantifier whose lazy equivalent is *?.</target>
        <note />
      </trans-unit>
      <trans-unit id="Regex_match_zero_or_more_times_short">
        <source>match zero or more times</source>
        <target state="new">match zero or more times</target>
        <note />
      </trans-unit>
      <trans-unit id="Regex_match_zero_or_one_time_lazy_long">
        <source>The ?? quantifier matches the preceding element zero or one time, but as few times as possible. It is the lazy counterpart of the greedy quantifier ?</source>
        <target state="new">The ?? quantifier matches the preceding element zero or one time, but as few times as possible. It is the lazy counterpart of the greedy quantifier ?</target>
        <note />
      </trans-unit>
      <trans-unit id="Regex_match_zero_or_one_time_lazy_short">
        <source>match zero or one time (lazy)</source>
        <target state="new">match zero or one time (lazy)</target>
        <note />
      </trans-unit>
      <trans-unit id="Regex_match_zero_or_one_time_long">
        <source>The ? quantifier matches the preceding element zero or one time. It is equivalent to the {0,1} quantifier. ? is a greedy quantifier whose lazy equivalent is ??.</source>
        <target state="new">The ? quantifier matches the preceding element zero or one time. It is equivalent to the {0,1} quantifier. ? is a greedy quantifier whose lazy equivalent is ??.</target>
        <note />
      </trans-unit>
      <trans-unit id="Regex_match_zero_or_one_time_short">
        <source>match zero or one time</source>
        <target state="new">match zero or one time</target>
        <note />
      </trans-unit>
      <trans-unit id="Regex_matched_subexpression_long">
        <source>This grouping construct captures a matched 'subexpression', where 'subexpression' is any valid regular expression pattern. Captures that use parentheses are numbered automatically from left to right based on the order of the opening parentheses in the regular expression, starting from one. The capture that is numbered zero is the text matched by the entire regular expression pattern.</source>
        <target state="new">This grouping construct captures a matched 'subexpression', where 'subexpression' is any valid regular expression pattern. Captures that use parentheses are numbered automatically from left to right based on the order of the opening parentheses in the regular expression, starting from one. The capture that is numbered zero is the text matched by the entire regular expression pattern.</target>
        <note />
      </trans-unit>
      <trans-unit id="Regex_matched_subexpression_short">
        <source>matched subexpression</source>
        <target state="new">matched subexpression</target>
        <note />
      </trans-unit>
      <trans-unit id="Regex_name">
        <source>name</source>
        <target state="new">name</target>
        <note />
      </trans-unit>
      <trans-unit id="Regex_name1">
        <source>name1</source>
        <target state="new">name1</target>
        <note />
      </trans-unit>
      <trans-unit id="Regex_name2">
        <source>name2</source>
        <target state="new">name2</target>
        <note />
      </trans-unit>
      <trans-unit id="Regex_name_or_number">
        <source>name-or-number</source>
        <target state="new">name-or-number</target>
        <note />
      </trans-unit>
      <trans-unit id="Regex_named_backreference_long">
        <source>A named or numbered backreference.

'name' is the name of a capturing group defined in the regular expression pattern.</source>
        <target state="new">A named or numbered backreference.

'name' is the name of a capturing group defined in the regular expression pattern.</target>
        <note />
      </trans-unit>
      <trans-unit id="Regex_named_backreference_short">
        <source>named backreference</source>
        <target state="new">named backreference</target>
        <note />
      </trans-unit>
      <trans-unit id="Regex_named_matched_subexpression_long">
        <source>Captures a matched subexpression and lets you access it by name or by number.

'name' is a valid group name, and 'subexpression' is any valid regular expression pattern. 'name' must not contain any punctuation characters and cannot begin with a number.

If the RegexOptions parameter of a regular expression pattern matching method includes the RegexOptions.ExplicitCapture flag, or if the n option is applied to this subexpression, the only way to capture a subexpression is to explicitly name capturing groups.</source>
        <target state="new">Captures a matched subexpression and lets you access it by name or by number.

'name' is a valid group name, and 'subexpression' is any valid regular expression pattern. 'name' must not contain any punctuation characters and cannot begin with a number.

If the RegexOptions parameter of a regular expression pattern matching method includes the RegexOptions.ExplicitCapture flag, or if the n option is applied to this subexpression, the only way to capture a subexpression is to explicitly name capturing groups.</target>
        <note />
      </trans-unit>
      <trans-unit id="Regex_named_matched_subexpression_short">
        <source>named matched subexpression</source>
        <target state="new">named matched subexpression</target>
        <note />
      </trans-unit>
      <trans-unit id="Regex_negative_character_group_long">
        <source>A negative character group specifies a list of characters that must not appear in an input string for a match to occur. The list of characters are specified individually.

Two or more character ranges can be concatenated. For example, to specify the range of decimal digits from "0" through "9", the range of lowercase letters from "a" through "f", and the range of uppercase letters from "A" through "F", use [0-9a-fA-F].</source>
        <target state="new">A negative character group specifies a list of characters that must not appear in an input string for a match to occur. The list of characters are specified individually.

Two or more character ranges can be concatenated. For example, to specify the range of decimal digits from "0" through "9", the range of lowercase letters from "a" through "f", and the range of uppercase letters from "A" through "F", use [0-9a-fA-F].</target>
        <note />
      </trans-unit>
      <trans-unit id="Regex_negative_character_group_short">
        <source>negative character group</source>
        <target state="new">negative character group</target>
        <note />
      </trans-unit>
      <trans-unit id="Regex_negative_character_range_long">
        <source>A negative character range specifies a list of characters that must not appear in an input string for a match to occur. 'firstCharacter' is the character that begins the range, and 'lastCharacter' is the character that ends the range.

Two or more character ranges can be concatenated. For example, to specify the range of decimal digits from "0" through "9", the range of lowercase letters from "a" through "f", and the range of uppercase letters from "A" through "F", use [0-9a-fA-F].</source>
        <target state="new">A negative character range specifies a list of characters that must not appear in an input string for a match to occur. 'firstCharacter' is the character that begins the range, and 'lastCharacter' is the character that ends the range.

Two or more character ranges can be concatenated. For example, to specify the range of decimal digits from "0" through "9", the range of lowercase letters from "a" through "f", and the range of uppercase letters from "A" through "F", use [0-9a-fA-F].</target>
        <note />
      </trans-unit>
      <trans-unit id="Regex_negative_character_range_short">
        <source>negative character range</source>
        <target state="new">negative character range</target>
        <note />
      </trans-unit>
      <trans-unit id="Regex_negative_unicode_category_long">
        <source>The regular expression construct \P{ name } matches any character that does not belong to a Unicode general category or named block, where name is the category abbreviation or named block name.</source>
        <target state="new">The regular expression construct \P{ name } matches any character that does not belong to a Unicode general category or named block, where name is the category abbreviation or named block name.</target>
        <note />
      </trans-unit>
      <trans-unit id="Regex_negative_unicode_category_short">
        <source>negative unicode category</source>
        <target state="new">negative unicode category</target>
        <note />
      </trans-unit>
      <trans-unit id="Regex_new_line_character_long">
        <source>Matches a new-line character, \u000A</source>
        <target state="new">Matches a new-line character, \u000A</target>
        <note />
      </trans-unit>
      <trans-unit id="Regex_new_line_character_short">
        <source>new-line character</source>
        <target state="new">new-line character</target>
        <note />
      </trans-unit>
      <trans-unit id="Regex_no">
        <source>no</source>
        <target state="new">no</target>
        <note />
      </trans-unit>
      <trans-unit id="Regex_non_digit_character_long">
        <source>\D matches any non-digit character. It is equivalent to the \P{Nd} regular expression pattern.

If ECMAScript-compliant behavior is specified, \D is equivalent to [^0-9]</source>
        <target state="new">\D matches any non-digit character. It is equivalent to the \P{Nd} regular expression pattern.

If ECMAScript-compliant behavior is specified, \D is equivalent to [^0-9]</target>
        <note />
      </trans-unit>
      <trans-unit id="Regex_non_digit_character_short">
        <source>non-digit character</source>
        <target state="new">non-digit character</target>
        <note />
      </trans-unit>
      <trans-unit id="Regex_non_white_space_character_long">
        <source>\S matches any non-white-space character. It is equivalent to the [^\f\n\r\t\v\x85\p{Z}] regular expression pattern, or the opposite of the regular expression pattern that is equivalent to \s, which matches white-space characters.

If ECMAScript-compliant behavior is specified, \S is equivalent to [^ \f\n\r\t\v]</source>
        <target state="new">\S matches any non-white-space character. It is equivalent to the [^\f\n\r\t\v\x85\p{Z}] regular expression pattern, or the opposite of the regular expression pattern that is equivalent to \s, which matches white-space characters.

If ECMAScript-compliant behavior is specified, \S is equivalent to [^ \f\n\r\t\v]</target>
        <note />
      </trans-unit>
      <trans-unit id="Regex_non_white_space_character_short">
        <source>non-white-space character</source>
        <target state="new">non-white-space character</target>
        <note />
      </trans-unit>
      <trans-unit id="Regex_non_word_boundary_long">
        <source>The \B anchor specifies that the match must not occur on a word boundary. It is the opposite of the \b anchor.</source>
        <target state="new">The \B anchor specifies that the match must not occur on a word boundary. It is the opposite of the \b anchor.</target>
        <note />
      </trans-unit>
      <trans-unit id="Regex_non_word_boundary_short">
        <source>non-word boundary</source>
        <target state="new">non-word boundary</target>
        <note />
      </trans-unit>
      <trans-unit id="Regex_non_word_character_long">
        <source>\W matches any non-word character. It matches any character except for those in the following Unicode categories:

    Ll	Letter, Lowercase
    Lu	Letter, Uppercase
    Lt	Letter, Titlecase
    Lo	Letter, Other
    Lm	Letter, Modifier
    Mn	Mark, Nonspacing
    Nd	Number, Decimal Digit
    Pc	Punctuation, Connector

If ECMAScript-compliant behavior is specified, \W is equivalent to [^a-zA-Z_0-9]</source>
        <target state="new">\W matches any non-word character. It matches any character except for those in the following Unicode categories:

    Ll	Letter, Lowercase
    Lu	Letter, Uppercase
    Lt	Letter, Titlecase
    Lo	Letter, Other
    Lm	Letter, Modifier
    Mn	Mark, Nonspacing
    Nd	Number, Decimal Digit
    Pc	Punctuation, Connector

If ECMAScript-compliant behavior is specified, \W is equivalent to [^a-zA-Z_0-9]</target>
        <note>Note: Ll, Lu, Lt, Lo, Lm, Mn, Nd, and Pc are all things that should not be localized. </note>
      </trans-unit>
      <trans-unit id="Regex_non_word_character_short">
        <source>non-word character</source>
        <target state="new">non-word character</target>
        <note />
      </trans-unit>
      <trans-unit id="Regex_nonbacktracking_subexpression_long">
        <source>This construct disables backtracking. The regular expression engine will match as many characters in the input string as it can. When no further match is possible, it will not backtrack to attempt alternate pattern matches. (That is, the subexpression matches only strings that would be matched by the subexpression alone; it does not attempt to match a string based on the subexpression and any subexpressions that follow it.)

This option is recommended if you know that backtracking will not succeed. Preventing the regular expression engine from performing unnecessary searching improves performance.</source>
        <target state="new">This construct disables backtracking. The regular expression engine will match as many characters in the input string as it can. When no further match is possible, it will not backtrack to attempt alternate pattern matches. (That is, the subexpression matches only strings that would be matched by the subexpression alone; it does not attempt to match a string based on the subexpression and any subexpressions that follow it.)

This option is recommended if you know that backtracking will not succeed. Preventing the regular expression engine from performing unnecessary searching improves performance.</target>
        <note />
      </trans-unit>
      <trans-unit id="Regex_nonbacktracking_subexpression_short">
        <source>nonbacktracking subexpression</source>
        <target state="new">nonbacktracking subexpression</target>
        <note />
      </trans-unit>
      <trans-unit id="Regex_noncapturing_group_long">
        <source>This construct does not capture the substring that is matched by a subexpression:

The noncapturing group construct is typically used when a quantifier is applied to a group, but the substrings captured by the group are of no interest.

If a regular expression includes nested grouping constructs, an outer noncapturing group construct does not apply to the inner nested group constructs.</source>
        <target state="new">This construct does not capture the substring that is matched by a subexpression:

The noncapturing group construct is typically used when a quantifier is applied to a group, but the substrings captured by the group are of no interest.

If a regular expression includes nested grouping constructs, an outer noncapturing group construct does not apply to the inner nested group constructs.</target>
        <note />
      </trans-unit>
      <trans-unit id="Regex_noncapturing_group_short">
        <source>noncapturing group</source>
        <target state="new">noncapturing group</target>
        <note />
      </trans-unit>
      <trans-unit id="Regex_number_decimal_digit">
        <source>number, decimal digit</source>
        <target state="new">number, decimal digit</target>
        <note />
      </trans-unit>
      <trans-unit id="Regex_number_letter">
        <source>number, letter</source>
        <target state="new">number, letter</target>
        <note />
      </trans-unit>
      <trans-unit id="Regex_number_other">
        <source>number, other</source>
        <target state="new">number, other</target>
        <note />
      </trans-unit>
      <trans-unit id="Regex_numbered_backreference_long">
        <source>A numbered backreference, where 'number' is the ordinal position of the capturing group in the regular expression. For example, \4 matches the contents of the fourth capturing group.

There is an ambiguity between octal escape codes (such as \16) and \number backreferences that use the same notation. If the ambiguity is a problem, you can use the \k&lt;name&gt; notation, which is unambiguous and cannot be confused with octal character codes. Similarly, hexadecimal codes such as \xdd are unambiguous and cannot be confused with backreferences.</source>
        <target state="new">A numbered backreference, where 'number' is the ordinal position of the capturing group in the regular expression. For example, \4 matches the contents of the fourth capturing group.

There is an ambiguity between octal escape codes (such as \16) and \number backreferences that use the same notation. If the ambiguity is a problem, you can use the \k&lt;name&gt; notation, which is unambiguous and cannot be confused with octal character codes. Similarly, hexadecimal codes such as \xdd are unambiguous and cannot be confused with backreferences.</target>
        <note />
      </trans-unit>
      <trans-unit id="Regex_numbered_backreference_short">
        <source>numbered backreference</source>
        <target state="new">numbered backreference</target>
        <note />
      </trans-unit>
      <trans-unit id="Regex_other_control">
        <source>other, control</source>
        <target state="new">other, control</target>
        <note />
      </trans-unit>
      <trans-unit id="Regex_other_format">
        <source>other, format</source>
        <target state="new">other, format</target>
        <note />
      </trans-unit>
      <trans-unit id="Regex_other_not_assigned">
        <source>other, not assigned</source>
        <target state="new">other, not assigned</target>
        <note />
      </trans-unit>
      <trans-unit id="Regex_other_private_use">
        <source>other, private use</source>
        <target state="new">other, private use</target>
        <note />
      </trans-unit>
      <trans-unit id="Regex_other_surrogate">
        <source>other, surrogate</source>
        <target state="new">other, surrogate</target>
        <note />
      </trans-unit>
      <trans-unit id="Regex_positive_character_group_long">
        <source>A positive character group specifies a list of characters, any one of which may appear in an input string for a match to occur.</source>
        <target state="new">A positive character group specifies a list of characters, any one of which may appear in an input string for a match to occur.</target>
        <note />
      </trans-unit>
      <trans-unit id="Regex_positive_character_group_short">
        <source>positive character group</source>
        <target state="new">positive character group</target>
        <note />
      </trans-unit>
      <trans-unit id="Regex_positive_character_range_long">
        <source>A positive character range specifies a range of characters, any one of which may appear in an input string for a match to occur.  'firstCharacter' is the character that begins the range and 'lastCharacter' is the character that ends the range. </source>
        <target state="new">A positive character range specifies a range of characters, any one of which may appear in an input string for a match to occur.  'firstCharacter' is the character that begins the range and 'lastCharacter' is the character that ends the range. </target>
        <note />
      </trans-unit>
      <trans-unit id="Regex_positive_character_range_short">
        <source>positive character range</source>
        <target state="new">positive character range</target>
        <note />
      </trans-unit>
      <trans-unit id="Regex_punctuation_close">
        <source>punctuation, close</source>
        <target state="new">punctuation, close</target>
        <note />
      </trans-unit>
      <trans-unit id="Regex_punctuation_connector">
        <source>punctuation, connector</source>
        <target state="new">punctuation, connector</target>
        <note />
      </trans-unit>
      <trans-unit id="Regex_punctuation_dash">
        <source>punctuation, dash</source>
        <target state="new">punctuation, dash</target>
        <note />
      </trans-unit>
      <trans-unit id="Regex_punctuation_final_quote">
        <source>punctuation, final quote</source>
        <target state="new">punctuation, final quote</target>
        <note />
      </trans-unit>
      <trans-unit id="Regex_punctuation_initial_quote">
        <source>punctuation, initial quote</source>
        <target state="new">punctuation, initial quote</target>
        <note />
      </trans-unit>
      <trans-unit id="Regex_punctuation_open">
        <source>punctuation, open</source>
        <target state="new">punctuation, open</target>
        <note />
      </trans-unit>
      <trans-unit id="Regex_punctuation_other">
        <source>punctuation, other</source>
        <target state="new">punctuation, other</target>
        <note />
      </trans-unit>
      <trans-unit id="Regex_separator_line">
        <source>separator, line</source>
        <target state="new">separator, line</target>
        <note />
      </trans-unit>
      <trans-unit id="Regex_separator_paragraph">
        <source>separator, paragraph</source>
        <target state="new">separator, paragraph</target>
        <note />
      </trans-unit>
      <trans-unit id="Regex_separator_space">
        <source>separator, space</source>
        <target state="new">separator, space</target>
        <note />
      </trans-unit>
      <trans-unit id="Regex_start_of_string_only_long">
        <source>The \A anchor specifies that a match must occur at the beginning of the input string. It is identical to the ^ anchor, except that \A ignores the RegexOptions.Multiline option. Therefore, it can only match the start of the first line in a multiline input string.</source>
        <target state="new">The \A anchor specifies that a match must occur at the beginning of the input string. It is identical to the ^ anchor, except that \A ignores the RegexOptions.Multiline option. Therefore, it can only match the start of the first line in a multiline input string.</target>
        <note />
      </trans-unit>
      <trans-unit id="Regex_start_of_string_only_short">
        <source>start of string only</source>
        <target state="new">start of string only</target>
        <note />
      </trans-unit>
      <trans-unit id="Regex_start_of_string_or_line_long">
        <source>The ^ anchor specifies that the following pattern must begin at the first character position of the string. If you use ^ with the RegexOptions.Multiline option, the match must occur at the beginning of each line.</source>
        <target state="new">The ^ anchor specifies that the following pattern must begin at the first character position of the string. If you use ^ with the RegexOptions.Multiline option, the match must occur at the beginning of each line.</target>
        <note />
      </trans-unit>
      <trans-unit id="Regex_start_of_string_or_line_short">
        <source>start of string or line</source>
        <target state="new">start of string or line</target>
        <note />
      </trans-unit>
      <trans-unit id="Regex_subexpression">
        <source>subexpression</source>
        <target state="new">subexpression</target>
        <note />
      </trans-unit>
      <trans-unit id="Regex_symbol_currency">
        <source>symbol, currency</source>
        <target state="new">symbol, currency</target>
        <note />
      </trans-unit>
      <trans-unit id="Regex_symbol_math">
        <source>symbol, math</source>
        <target state="new">symbol, math</target>
        <note />
      </trans-unit>
      <trans-unit id="Regex_symbol_modifier">
        <source>symbol, modifier</source>
        <target state="new">symbol, modifier</target>
        <note />
      </trans-unit>
      <trans-unit id="Regex_symbol_other">
        <source>symbol, other</source>
        <target state="new">symbol, other</target>
        <note />
      </trans-unit>
      <trans-unit id="Regex_tab_character_long">
        <source>Matches a tab character, \u0009</source>
        <target state="new">Matches a tab character, \u0009</target>
        <note />
      </trans-unit>
      <trans-unit id="Regex_tab_character_short">
        <source>tab character</source>
        <target state="new">tab character</target>
        <note />
      </trans-unit>
      <trans-unit id="Regex_unicode_category_long">
        <source>The regular expression construct \p{ name } matches any character that belongs to a Unicode general category or named block, where name is the category abbreviation or named block name.</source>
        <target state="new">The regular expression construct \p{ name } matches any character that belongs to a Unicode general category or named block, where name is the category abbreviation or named block name.</target>
        <note />
      </trans-unit>
      <trans-unit id="Regex_unicode_category_short">
        <source>unicode category</source>
        <target state="new">unicode category</target>
        <note />
      </trans-unit>
      <trans-unit id="Regex_unicode_escape_long">
        <source>Matches a UTF-16 code unit whose value is #### hexadecimal.</source>
        <target state="new">Matches a UTF-16 code unit whose value is #### hexadecimal.</target>
        <note />
      </trans-unit>
      <trans-unit id="Regex_unicode_escape_short">
        <source>unicode escape</source>
        <target state="new">unicode escape</target>
        <note />
      </trans-unit>
      <trans-unit id="Regex_unicode_general_category_0">
        <source>Unicode General Category: {0}</source>
        <target state="new">Unicode General Category: {0}</target>
        <note />
      </trans-unit>
      <trans-unit id="Regex_vertical_tab_character_long">
        <source>Matches a vertical-tab character, \u000B</source>
        <target state="new">Matches a vertical-tab character, \u000B</target>
        <note />
      </trans-unit>
      <trans-unit id="Regex_vertical_tab_character_short">
        <source>vertical-tab character</source>
        <target state="new">vertical-tab character</target>
        <note />
      </trans-unit>
      <trans-unit id="Regex_white_space_character_long">
        <source>\s matches any white-space character. It is equivalent to the following escape sequences and Unicode categories:

    \f	The form feed character, \u000C
    \n	The newline character, \u000A
    \r	The carriage return character, \u000D
    \t	The tab character, \u0009
    \v	The vertical tab character, \u000B
    \x85	The ellipsis or NEXT LINE (NEL) character (…), \u0085
    \p{Z}	Matches any separator character

If ECMAScript-compliant behavior is specified, \s is equivalent to [ \f\n\r\t\v]</source>
        <target state="new">\s matches any white-space character. It is equivalent to the following escape sequences and Unicode categories:

    \f	The form feed character, \u000C
    \n	The newline character, \u000A
    \r	The carriage return character, \u000D
    \t	The tab character, \u0009
    \v	The vertical tab character, \u000B
    \x85	The ellipsis or NEXT LINE (NEL) character (…), \u0085
    \p{Z}	Matches any separator character

If ECMAScript-compliant behavior is specified, \s is equivalent to [ \f\n\r\t\v]</target>
        <note />
      </trans-unit>
      <trans-unit id="Regex_white_space_character_short">
        <source>white-space character</source>
        <target state="new">white-space character</target>
        <note />
      </trans-unit>
      <trans-unit id="Regex_word_boundary_long">
        <source>The \b anchor specifies that the match must occur on a boundary between a word character (the \w language element) and a non-word character (the \W language element). Word characters consist of alphanumeric characters and underscores; a non-word character is any character that is not alphanumeric or an underscore. The match may also occur on a word boundary at the beginning or end of the string.

The \b anchor is frequently used to ensure that a subexpression matches an entire word instead of just the beginning or end of a word.</source>
        <target state="new">The \b anchor specifies that the match must occur on a boundary between a word character (the \w language element) and a non-word character (the \W language element). Word characters consist of alphanumeric characters and underscores; a non-word character is any character that is not alphanumeric or an underscore. The match may also occur on a word boundary at the beginning or end of the string.

The \b anchor is frequently used to ensure that a subexpression matches an entire word instead of just the beginning or end of a word.</target>
        <note />
      </trans-unit>
      <trans-unit id="Regex_word_boundary_short">
        <source>word boundary</source>
        <target state="new">word boundary</target>
        <note />
      </trans-unit>
      <trans-unit id="Regex_word_character_long">
        <source>\w matches any word character. A word character is a member of any of the following Unicode categories:

    Ll	Letter, Lowercase
    Lu	Letter, Uppercase
    Lt	Letter, Titlecase
    Lo	Letter, Other
    Lm	Letter, Modifier
    Mn	Mark, Nonspacing
    Nd	Number, Decimal Digit
    Pc	Punctuation, Connector

If ECMAScript-compliant behavior is specified, \w is equivalent to [a-zA-Z_0-9]</source>
        <target state="new">\w matches any word character. A word character is a member of any of the following Unicode categories:

    Ll	Letter, Lowercase
    Lu	Letter, Uppercase
    Lt	Letter, Titlecase
    Lo	Letter, Other
    Lm	Letter, Modifier
    Mn	Mark, Nonspacing
    Nd	Number, Decimal Digit
    Pc	Punctuation, Connector

If ECMAScript-compliant behavior is specified, \w is equivalent to [a-zA-Z_0-9]</target>
        <note>Note: Ll, Lu, Lt, Lo, Lm, Mn, Nd, and Pc are all things that should not be localized.</note>
      </trans-unit>
      <trans-unit id="Regex_word_character_short">
        <source>word character</source>
        <target state="new">word character</target>
        <note />
      </trans-unit>
      <trans-unit id="Regex_yes">
        <source>yes</source>
        <target state="new">yes</target>
        <note />
      </trans-unit>
      <trans-unit id="Regex_zero_width_negative_lookahead_assertion_long">
        <source>A zero-width negative lookahead assertion, where for the match to be successful, the input string must not match the regular expression pattern in subexpression. The matched string is not included in the match result.

A zero-width negative lookahead assertion is typically used either at the beginning or at the end of a regular expression. At the beginning of a regular expression, it can define a specific pattern that should not be matched when the beginning of the regular expression defines a similar but more general pattern to be matched. In this case, it is often used to limit backtracking. At the end of a regular expression, it can define a subexpression that cannot occur at the end of a match.</source>
        <target state="new">A zero-width negative lookahead assertion, where for the match to be successful, the input string must not match the regular expression pattern in subexpression. The matched string is not included in the match result.

A zero-width negative lookahead assertion is typically used either at the beginning or at the end of a regular expression. At the beginning of a regular expression, it can define a specific pattern that should not be matched when the beginning of the regular expression defines a similar but more general pattern to be matched. In this case, it is often used to limit backtracking. At the end of a regular expression, it can define a subexpression that cannot occur at the end of a match.</target>
        <note />
      </trans-unit>
      <trans-unit id="Regex_zero_width_negative_lookahead_assertion_short">
        <source>zero-width negative lookahead assertion</source>
        <target state="new">zero-width negative lookahead assertion</target>
        <note />
      </trans-unit>
      <trans-unit id="Regex_zero_width_negative_lookbehind_assertion_long">
        <source>A zero-width negative lookbehind assertion, where for a match to be successful, 'subexpression' must not occur at the input string to the left of the current position. Any substring that does not match 'subexpression' is not included in the match result.

Zero-width negative lookbehind assertions are typically used at the beginning of regular expressions. The pattern that they define precludes a match in the string that follows. They are also used to limit backtracking when the last character or characters in a captured group must not be one or more of the characters that match that group's regular expression pattern.</source>
        <target state="new">A zero-width negative lookbehind assertion, where for a match to be successful, 'subexpression' must not occur at the input string to the left of the current position. Any substring that does not match 'subexpression' is not included in the match result.

Zero-width negative lookbehind assertions are typically used at the beginning of regular expressions. The pattern that they define precludes a match in the string that follows. They are also used to limit backtracking when the last character or characters in a captured group must not be one or more of the characters that match that group's regular expression pattern.</target>
        <note />
      </trans-unit>
      <trans-unit id="Regex_zero_width_negative_lookbehind_assertion_short">
        <source>zero-width negative lookbehind assertion</source>
        <target state="new">zero-width negative lookbehind assertion</target>
        <note />
      </trans-unit>
      <trans-unit id="Regex_zero_width_positive_lookahead_assertion_long">
        <source>A zero-width positive lookahead assertion, where for a match to be successful, the input string must match the regular expression pattern in 'subexpression'. The matched substring is not included in the match result. A zero-width positive lookahead assertion does not backtrack.

Typically, a zero-width positive lookahead assertion is found at the end of a regular expression pattern. It defines a substring that must be found at the end of a string for a match to occur but that should not be included in the match. It is also useful for preventing excessive backtracking. You can use a zero-width positive lookahead assertion to ensure that a particular captured group begins with text that matches a subset of the pattern defined for that captured group.</source>
        <target state="new">A zero-width positive lookahead assertion, where for a match to be successful, the input string must match the regular expression pattern in 'subexpression'. The matched substring is not included in the match result. A zero-width positive lookahead assertion does not backtrack.

Typically, a zero-width positive lookahead assertion is found at the end of a regular expression pattern. It defines a substring that must be found at the end of a string for a match to occur but that should not be included in the match. It is also useful for preventing excessive backtracking. You can use a zero-width positive lookahead assertion to ensure that a particular captured group begins with text that matches a subset of the pattern defined for that captured group.</target>
        <note />
      </trans-unit>
      <trans-unit id="Regex_zero_width_positive_lookahead_assertion_short">
        <source>zero-width positive lookahead assertion</source>
        <target state="new">zero-width positive lookahead assertion</target>
        <note />
      </trans-unit>
      <trans-unit id="Regex_zero_width_positive_lookbehind_assertion_long">
        <source>A zero-width positive lookbehind assertion, where for a match to be successful, 'subexpression' must occur at the input string to the left of the current position. 'subexpression' is not included in the match result. A zero-width positive lookbehind assertion does not backtrack.

Zero-width positive lookbehind assertions are typically used at the beginning of regular expressions. The pattern that they define is a precondition for a match, although it is not a part of the match result.</source>
        <target state="new">A zero-width positive lookbehind assertion, where for a match to be successful, 'subexpression' must occur at the input string to the left of the current position. 'subexpression' is not included in the match result. A zero-width positive lookbehind assertion does not backtrack.

Zero-width positive lookbehind assertions are typically used at the beginning of regular expressions. The pattern that they define is a precondition for a match, although it is not a part of the match result.</target>
        <note />
      </trans-unit>
      <trans-unit id="Regex_zero_width_positive_lookbehind_assertion_short">
        <source>zero-width positive lookbehind assertion</source>
        <target state="new">zero-width positive lookbehind assertion</target>
        <note />
      </trans-unit>
      <trans-unit id="Related_method_signatures_found_in_metadata_will_not_be_updated">
        <source>Related method signatures found in metadata will not be updated.</source>
        <target state="translated">Sygnatury powiązanych metod znalezione w metadanych nie zostaną zaktualizowane.</target>
        <note />
      </trans-unit>
      <trans-unit id="Remove_redundant_assignment">
        <source>Remove redundant assignment</source>
        <target state="translated">Usuń nadmiarowe przypisanie</target>
        <note />
      </trans-unit>
      <trans-unit id="Remove_unread_private_members">
        <source>Remove unread private members</source>
        <target state="translated">Usuń nieodczytywane składowe prywatne</target>
        <note />
      </trans-unit>
      <trans-unit id="Remove_unused_member">
        <source>Remove unused member</source>
        <target state="translated">Usuń nieużywaną składową</target>
        <note />
      </trans-unit>
      <trans-unit id="Remove_unused_parameter">
        <source>Remove unused parameter</source>
        <target state="translated">Usuń nieużywany parametr</target>
        <note />
      </trans-unit>
      <trans-unit id="Remove_unused_parameter_0">
        <source>Remove unused parameter '{0}'</source>
        <target state="translated">Usuń nieużywany parametr „{0}”</target>
        <note />
      </trans-unit>
      <trans-unit id="Remove_unused_parameter_0_if_it_is_not_part_of_a_shipped_public_API">
        <source>Remove unused parameter '{0}' if it is not part of a shipped public API</source>
        <target state="translated">Usuń nieużywany parametr „{0}”, jeśli nie jest częścią dostarczonego publicznego API</target>
        <note />
      </trans-unit>
      <trans-unit id="Remove_unused_parameter_0_if_it_is_not_part_of_a_shipped_public_API_its_initial_value_is_never_used">
        <source>Remove unused parameter '{0}' if it is not part of a shipped public API, its initial value is never used</source>
        <target state="translated">Usuń nieużywany parametr „{0}”, jeśli nie jest częścią dostarczonego publicznego interfejsu API, ponieważ jego wartość początkowa nie jest nigdy używana</target>
        <note />
      </trans-unit>
      <trans-unit id="Remove_unused_parameter_0_its_initial_value_is_never_used">
        <source>Remove unused parameter '{0}', its initial value is never used</source>
        <target state="translated">Usuń nieużywany parametr „{0}”, ponieważ jego wartość początkowa nie jest nigdy używana.</target>
        <note />
      </trans-unit>
      <trans-unit id="Remove_unused_private_members">
        <source>Remove unused private members</source>
        <target state="translated">Usuń nieużywane prywatne składowe</target>
        <note />
      </trans-unit>
      <trans-unit id="Replace_0_with_1">
        <source>Replace '{0}' with '{1}' </source>
        <target state="translated">Zamień element „{0}” na element „{1}”</target>
        <note />
      </trans-unit>
      <trans-unit id="Split_into_consecutive_0_statements">
        <source>Split into consecutive '{0}' statements</source>
        <target state="new">Split into consecutive '{0}' statements</target>
        <note />
      </trans-unit>
      <trans-unit id="Split_into_nested_0_statements">
        <source>Split into nested '{0}' statements</source>
        <target state="new">Split into nested '{0}' statements</target>
        <note />
      </trans-unit>
      <trans-unit id="StreamMustSupportReadAndSeek">
        <source>Stream must support read and seek operations.</source>
        <target state="new">Stream must support read and seek operations.</target>
        <note />
      </trans-unit>
      <trans-unit id="Target_type_matches">
        <source>Target type matches</source>
        <target state="new">Target type matches</target>
        <note />
      </trans-unit>
      <trans-unit id="Too_many_bars_in_conditional_grouping">
        <source>Too many | in (?()|)</source>
        <target state="new">Too many | in (?()|)</target>
        <note>This is an error message shown to the user when they write an invalid Regular Expression. Example: (?(0)a|b|)</note>
      </trans-unit>
      <trans-unit id="Too_many_close_parens">
        <source>Too many )'s</source>
        <target state="new">Too many )'s</target>
        <note>This is an error message shown to the user when they write an invalid Regular Expression. Example: )</note>
      </trans-unit>
      <trans-unit id="Unknown_property">
        <source>Unknown property</source>
        <target state="new">Unknown property</target>
        <note>This is an error message shown to the user when they write an invalid Regular Expression. Example: \p{}</note>
      </trans-unit>
      <trans-unit id="Unknown_property_0">
        <source>Unknown property '{0}'</source>
        <target state="new">Unknown property '{0}'</target>
        <note>This is an error message shown to the user when they write an invalid Regular Expression. Example: \p{xxx}. Here, {0} will be the name of the unknown property ('xxx')</note>
      </trans-unit>
      <trans-unit id="Unnecessary_assignment_of_a_value">
        <source>Unnecessary assignment of a value</source>
        <target state="new">Unnecessary assignment of a value</target>
        <note />
      </trans-unit>
      <trans-unit id="Unnecessary_assignment_of_a_value_to_0">
        <source>Unnecessary assignment of a value to '{0}'</source>
        <target state="new">Unnecessary assignment of a value to '{0}'</target>
        <note />
      </trans-unit>
      <trans-unit id="Unrecognized_control_character">
        <source>Unrecognized control character</source>
        <target state="new">Unrecognized control character</target>
        <note>This is an error message shown to the user when they write an invalid Regular Expression. Example: [\c]</note>
      </trans-unit>
      <trans-unit id="Unrecognized_escape_sequence_0">
        <source>Unrecognized escape sequence \{0}</source>
        <target state="new">Unrecognized escape sequence \{0}</target>
        <note>This is an error message shown to the user when they write an invalid Regular Expression. Example: \m. Here, {0} will be the unrecognized character ('m')</note>
      </trans-unit>
      <trans-unit id="Unrecognized_grouping_construct">
        <source>Unrecognized grouping construct</source>
        <target state="new">Unrecognized grouping construct</target>
        <note>This is an error message shown to the user when they write an invalid Regular Expression. Example: (?&lt;</note>
      </trans-unit>
      <trans-unit id="Unterminated_character_class_set">
        <source>Unterminated [] set</source>
        <target state="new">Unterminated [] set</target>
        <note>This is an error message shown to the user when they write an invalid Regular Expression. Example: [</note>
      </trans-unit>
      <trans-unit id="Unterminated_regex_comment">
        <source>Unterminated (?#...) comment</source>
        <target state="new">Unterminated (?#...) comment</target>
        <note>This is an error message shown to the user when they write an invalid Regular Expression. Example: (?#</note>
      </trans-unit>
      <trans-unit id="Unwrap_all_arguments">
        <source>Unwrap all arguments</source>
        <target state="translated">Odpakuj wszystkie argumenty</target>
        <note />
      </trans-unit>
      <trans-unit id="Unwrap_all_parameters">
        <source>Unwrap all parameters</source>
        <target state="translated">Odpakuj wszystkie parametry</target>
        <note />
      </trans-unit>
      <trans-unit id="Unwrap_and_indent_all_arguments">
        <source>Unwrap and indent all arguments</source>
        <target state="translated">Odpakuj wszystkie argumenty i dodaj dla nich wcięcie</target>
        <note />
      </trans-unit>
      <trans-unit id="Unwrap_and_indent_all_parameters">
        <source>Unwrap and indent all parameters</source>
        <target state="translated">Odpakuj wszystkie parametry i dodaj dla nich wcięcie</target>
        <note />
      </trans-unit>
      <trans-unit id="Unwrap_argument_list">
        <source>Unwrap argument list</source>
        <target state="translated">Odpakuj listę argumentów</target>
        <note />
      </trans-unit>
      <trans-unit id="Unwrap_expression">
        <source>Unwrap expression</source>
        <target state="translated">Odpakuj wyrażenie</target>
        <note />
      </trans-unit>
      <trans-unit id="Unwrap_parameter_list">
        <source>Unwrap parameter list</source>
        <target state="translated">Odpakuj listę parametrów</target>
        <note />
      </trans-unit>
      <trans-unit id="UseRecommendedDisposePatternDescription">
        <source>Use recommended dispose pattern to ensure that locally scoped disposable objects are disposed on all paths. If possible, wrap the creation within a 'using' statement or a 'using' declaration. Otherwise, use a try-finally pattern, with a dedicated local variable declared before the try region and an unconditional Dispose invocation on non-null value in the 'finally' region, say 'x?.Dispose()'. If the object is explicitly disposed within the try region or the dispose ownership is transfered to another object or method, assign 'null' to the local variable just after such an operation to prevent double dispose in 'finally'</source>
        <target state="new">Use recommended dispose pattern to ensure that locally scoped disposable objects are disposed on all paths. If possible, wrap the creation within a 'using' statement or a 'using' declaration. Otherwise, use a try-finally pattern, with a dedicated local variable declared before the try region and an unconditional Dispose invocation on non-null value in the 'finally' region, say 'x?.Dispose()'. If the object is explicitly disposed within the try region or the dispose ownership is transfered to another object or method, assign 'null' to the local variable just after such an operation to prevent double dispose in 'finally'</target>
        <note />
      </trans-unit>
      <trans-unit id="Use_block_body_for_lambda_expressions">
        <source>Use block body for lambda expressions</source>
        <target state="translated">Użyj treści bloku dla wyrażeń lambda</target>
        <note />
      </trans-unit>
      <trans-unit id="Use_block_body_for_local_functions">
        <source>Use block body for local functions</source>
        <target state="translated">Użyj treści bloku dla funkcji lokalnych</target>
        <note />
      </trans-unit>
      <trans-unit id="Use_compound_assignment">
        <source>Use compound assignment</source>
        <target state="translated">Użyj przypisania złożonego</target>
        <note />
      </trans-unit>
      <trans-unit id="Use_discard_underscore">
        <source>Use discard '_'</source>
        <target state="translated">Użyj odrzucenia „_”</target>
        <note />
      </trans-unit>
      <trans-unit id="Use_discarded_local">
        <source>Use discarded local</source>
        <target state="translated">Użyj odrzuconej zmiennej lokalnej</target>
        <note />
      </trans-unit>
      <trans-unit id="Use_expression_body_for_lambda_expressions">
        <source>Use expression body for lambda expressions</source>
        <target state="translated">Użyj treści wyrażenia dla wyrażeń lambda</target>
        <note />
      </trans-unit>
      <trans-unit id="Use_expression_body_for_local_functions">
        <source>Use expression body for local functions</source>
        <target state="translated">Użyj treści wyrażenia dla funkcji lokalnych</target>
        <note />
      </trans-unit>
      <trans-unit id="Use_index_operator">
        <source>Use index operator</source>
        <target state="translated">Użyj operatora indeksu</target>
        <note />
      </trans-unit>
      <trans-unit id="Use_interpolated_verbatim_string">
        <source>Use interpolated verbatim string</source>
        <target state="translated">Użyj interpolowanego dosłownego ciągu wyrażenia</target>
        <note />
      </trans-unit>
      <trans-unit id="Use_range_operator">
        <source>Use range operator</source>
        <target state="translated">Użyj operatora zakresu</target>
        <note />
      </trans-unit>
      <trans-unit id="Use_recommended_dispose_pattern">
        <source>Use recommended dispose pattern</source>
        <target state="new">Use recommended dispose pattern</target>
        <note />
      </trans-unit>
      <trans-unit id="Use_recommended_dispose_pattern_to_ensure_that_object_created_by_0_is_disposed_on_all_paths_using_statement_declaration_or_try_finally">
        <source>Use recommended dispose pattern to ensure that object created by '{0}' is disposed on all paths: using statement/declaration or try/finally</source>
        <target state="new">Use recommended dispose pattern to ensure that object created by '{0}' is disposed on all paths: using statement/declaration or try/finally</target>
        <note>{Locked="using"}{Locked="try"}{Locked="finally"} "using", "try" and "finally" are C# keywords and should not be localized.</note>
      </trans-unit>
      <trans-unit id="Use_simple_using_statement">
        <source>Use simple 'using' statement</source>
        <target state="new">Use simple 'using' statement</target>
        <note />
      </trans-unit>
      <trans-unit id="Warning_colon_changing_namespace_may_produce_invalid_code_and_change_code_meaning">
        <source>Warning: Changing namespace may produce invalid code and change code meaning.</source>
        <target state="translated">Ostrzeżenie: Zmiana przestrzeni nazw może skutkować nieprawidłowym kodem i zmianą jego znaczenia.</target>
        <note />
      </trans-unit>
      <trans-unit id="Wrap_and_align_expression">
        <source>Wrap and align expression</source>
        <target state="new">Wrap and align expression</target>
        <note />
      </trans-unit>
      <trans-unit id="Wrap_every_argument">
        <source>Wrap every argument</source>
        <target state="translated">Opakuj każdy argument</target>
        <note />
      </trans-unit>
      <trans-unit id="Wrap_every_parameter">
        <source>Wrap every parameter</source>
        <target state="translated">Opakuj każdy parametr</target>
        <note />
      </trans-unit>
      <trans-unit id="Wrap_expression">
        <source>Wrap expression</source>
        <target state="translated">Opakuj wyrażenie</target>
        <note />
      </trans-unit>
      <trans-unit id="Wrap_long_argument_list">
        <source>Wrap long argument list</source>
        <target state="translated">Opakuj długą listę argumentów</target>
        <note />
      </trans-unit>
      <trans-unit id="Wrap_long_parameter_list">
        <source>Wrap long parameter list</source>
        <target state="translated">Opakuj długą listę parametrów</target>
        <note />
      </trans-unit>
      <trans-unit id="Wrapping">
        <source>Wrapping</source>
        <target state="translated">Opakowywanie</target>
        <note />
      </trans-unit>
      <trans-unit id="_0_can_be_simplified">
        <source>{0} can be simplified</source>
        <target state="translated">Element {0} można uprościć</target>
        <note />
      </trans-unit>
      <trans-unit id="generic_overload">
        <source>generic overload</source>
        <target state="translated">przeciążenie ogólne</target>
        <note />
      </trans-unit>
      <trans-unit id="generic_overloads">
        <source>generic overloads</source>
        <target state="translated">przeciążenia ogólne</target>
        <note />
      </trans-unit>
      <trans-unit id="in_Source_attribute">
        <source>in Source (attribute)</source>
        <target state="new">in Source (attribute)</target>
        <note />
      </trans-unit>
      <trans-unit id="overload">
        <source>overload</source>
        <target state="translated">przeciążenie</target>
        <note />
      </trans-unit>
      <trans-unit id="overloads_">
        <source>overloads</source>
        <target state="translated">przeciążenia</target>
        <note />
      </trans-unit>
      <trans-unit id="_0_Keyword">
        <source>{0} Keyword</source>
        <target state="translated">Słowo kluczowe {0}</target>
        <note />
      </trans-unit>
      <trans-unit id="Encapsulate_field_colon_0_and_use_property">
        <source>Encapsulate field: '{0}' (and use property)</source>
        <target state="translated">Hermetyzuj pole: „{0}” (i używaj właściwości)</target>
        <note />
      </trans-unit>
      <trans-unit id="Encapsulate_field_colon_0_but_still_use_field">
        <source>Encapsulate field: '{0}' (but still use field)</source>
        <target state="translated">Hermetyzuj pole: „{0}” (ale nadal używaj pola)</target>
        <note />
      </trans-unit>
      <trans-unit id="Encapsulate_fields_and_use_property">
        <source>Encapsulate fields (and use property)</source>
        <target state="translated">Hermetyzuj pola (i używaj właściwości)</target>
        <note />
      </trans-unit>
      <trans-unit id="Encapsulate_fields_but_still_use_field">
        <source>Encapsulate fields (but still use field)</source>
        <target state="translated">Hermetyzuj pola (ale nadal używaj pola)</target>
        <note />
      </trans-unit>
      <trans-unit id="Could_not_extract_interface_colon_The_selection_is_not_inside_a_class_interface_struct">
        <source>Could not extract interface: The selection is not inside a class/interface/struct.</source>
        <target state="translated">Nie można wyodrębnić interfejsu: zaznaczenie nie znajduje się w ramach klasy, interfejsu lub struktury.</target>
        <note />
      </trans-unit>
      <trans-unit id="Could_not_extract_interface_colon_The_type_does_not_contain_any_member_that_can_be_extracted_to_an_interface">
        <source>Could not extract interface: The type does not contain any member that can be extracted to an interface.</source>
        <target state="translated">Nie można wyodrębnić interfejsu: typ nie zawiera żadnej składowa, która może zostać wyodrębniona do interfejsu.</target>
        <note />
      </trans-unit>
      <trans-unit id="can_t_not_construct_final_tree">
        <source>can't not construct final tree</source>
        <target state="translated">nie można utworzyć drzewa końcowego</target>
        <note />
      </trans-unit>
      <trans-unit id="Parameters_type_or_return_type_cannot_be_an_anonymous_type_colon_bracket_0_bracket">
        <source>Parameters' type or return type cannot be an anonymous type : [{0}]</source>
        <target state="translated">Typ parametrów lub typ zwracany nie może być typu anonimowego: [{0}]</target>
        <note />
      </trans-unit>
      <trans-unit id="The_selection_contains_no_active_statement">
        <source>The selection contains no active statement.</source>
        <target state="translated">Zaznaczenie nie zawiera żadnej aktywnej instrukcji.</target>
        <note />
      </trans-unit>
      <trans-unit id="The_selection_contains_an_error_or_unknown_type">
        <source>The selection contains an error or unknown type.</source>
        <target state="translated">Zaznaczenie zawiera błąd lub nieznany typ.</target>
        <note />
      </trans-unit>
      <trans-unit id="Type_parameter_0_is_hidden_by_another_type_parameter_1">
        <source>Type parameter '{0}' is hidden by another type parameter '{1}'.</source>
        <target state="translated">Parametr typu „{0}” jest ukryty przez inny parametr typu „{1}”.</target>
        <note />
      </trans-unit>
      <trans-unit id="The_address_of_a_variable_is_used_inside_the_selected_code">
        <source>The address of a variable is used inside the selected code.</source>
        <target state="translated">Adres zmiennej został użyty w zaznaczonym kodzie.</target>
        <note />
      </trans-unit>
      <trans-unit id="Assigning_to_readonly_fields_must_be_done_in_a_constructor_colon_bracket_0_bracket">
        <source>Assigning to readonly fields must be done in a constructor : [{0}].</source>
        <target state="translated">Przypisywanie do pól tylko do odczytu musi zostać wykonane w konstruktorze: [{0}].</target>
        <note />
      </trans-unit>
      <trans-unit id="generated_code_is_overlapping_with_hidden_portion_of_the_code">
        <source>generated code is overlapping with hidden portion of the code</source>
        <target state="translated">wygenerowany kod pokrywa się z ukrytą częścią kodu</target>
        <note />
      </trans-unit>
      <trans-unit id="Add_optional_parameters_to_0">
        <source>Add optional parameters to '{0}'</source>
        <target state="translated">Dodaj opcjonalne parametry do elementu „{0}”</target>
        <note />
      </trans-unit>
      <trans-unit id="Add_parameters_to_0">
        <source>Add parameters to '{0}'</source>
        <target state="translated">Dodaj parametry do elementu „{0}”</target>
        <note />
      </trans-unit>
      <trans-unit id="Generate_delegating_constructor_0_1">
        <source>Generate delegating constructor '{0}({1})'</source>
        <target state="translated">Generuj konstruktor delegowania „{0}({1})”</target>
        <note />
      </trans-unit>
      <trans-unit id="Generate_constructor_0_1">
        <source>Generate constructor '{0}({1})'</source>
        <target state="translated">Generuj konstruktor „{0}({1})”</target>
        <note />
      </trans-unit>
      <trans-unit id="Generate_field_assigning_constructor_0_1">
        <source>Generate field assigning constructor '{0}({1})'</source>
        <target state="translated">Generuj konstruktor przypisujący pola „{0}({1})”</target>
        <note />
      </trans-unit>
      <trans-unit id="Generate_Equals_and_GetHashCode">
        <source>Generate Equals and GetHashCode</source>
        <target state="translated">Generuj element Equals i GetHashCode</target>
        <note />
      </trans-unit>
      <trans-unit id="Generate_Equals_object">
        <source>Generate Equals(object)</source>
        <target state="translated">Generuj element Equals(object)</target>
        <note />
      </trans-unit>
      <trans-unit id="Generate_GetHashCode">
        <source>Generate GetHashCode()</source>
        <target state="translated">Generuj element GetHashCode()</target>
        <note />
      </trans-unit>
      <trans-unit id="Generate_constructor_in_0">
        <source>Generate constructor in '{0}'</source>
        <target state="translated">Generuj konstruktor w elemencie „{0}”</target>
        <note />
      </trans-unit>
      <trans-unit id="Generate_all">
        <source>Generate all</source>
        <target state="translated">Generuj wszystko</target>
        <note />
      </trans-unit>
      <trans-unit id="Generate_enum_member_1_0">
        <source>Generate enum member '{1}.{0}'</source>
        <target state="translated">Generuj składową wyliczenia „{1}.{0}”</target>
        <note />
      </trans-unit>
      <trans-unit id="Generate_constant_1_0">
        <source>Generate constant '{1}.{0}'</source>
        <target state="translated">Generuj stałą „{1}.{0}”</target>
        <note />
      </trans-unit>
      <trans-unit id="Generate_read_only_property_1_0">
        <source>Generate read-only property '{1}.{0}'</source>
        <target state="translated">Generuj właściwość tylko do odczytu „{1}.{0}”</target>
        <note />
      </trans-unit>
      <trans-unit id="Generate_property_1_0">
        <source>Generate property '{1}.{0}'</source>
        <target state="translated">Generuj właściwość „{1}.{0}”</target>
        <note />
      </trans-unit>
      <trans-unit id="Generate_read_only_field_1_0">
        <source>Generate read-only field '{1}.{0}'</source>
        <target state="translated">Generuj pole tylko do odczytu „{1}.{0}”</target>
        <note />
      </trans-unit>
      <trans-unit id="Generate_field_1_0">
        <source>Generate field '{1}.{0}'</source>
        <target state="translated">Generuj pole „{1}.{0}”</target>
        <note />
      </trans-unit>
      <trans-unit id="Generate_local_0">
        <source>Generate local '{0}'</source>
        <target state="translated">Generuj lokalny element „{0}”</target>
        <note />
      </trans-unit>
      <trans-unit id="Generate_0_1_in_new_file">
        <source>Generate {0} '{1}' in new file</source>
        <target state="translated">Generuj element {0} „{1}” w nowym pliku</target>
        <note />
      </trans-unit>
      <trans-unit id="Generate_nested_0_1">
        <source>Generate nested {0} '{1}'</source>
        <target state="translated">Generuj zagnieżdżony element {0} „{1}”</target>
        <note />
      </trans-unit>
      <trans-unit id="Global_Namespace">
        <source>Global Namespace</source>
        <target state="translated">Globalna przestrzeń nazw</target>
        <note />
      </trans-unit>
      <trans-unit id="Implement_interface_explicitly">
        <source>Implement interface explicitly</source>
        <target state="translated">Implementuj interfejs jawnie</target>
        <note />
      </trans-unit>
      <trans-unit id="Implement_interface_abstractly">
        <source>Implement interface abstractly</source>
        <target state="translated">Implementuj interfejs abstrakcyjnie</target>
        <note />
      </trans-unit>
      <trans-unit id="Implement_interface_through_0">
        <source>Implement interface through '{0}'</source>
        <target state="translated">Implementuj interfejs za pomocą elementu „{0}”</target>
        <note />
      </trans-unit>
      <trans-unit id="Implement_interface">
        <source>Implement interface</source>
        <target state="translated">Zaimplementuj interfejs</target>
        <note />
      </trans-unit>
      <trans-unit id="Introduce_field_for_0">
        <source>Introduce field for '{0}'</source>
        <target state="translated">Wprowadź pole dla elementu „{0}”</target>
        <note />
      </trans-unit>
      <trans-unit id="Introduce_local_for_0">
        <source>Introduce local for '{0}'</source>
        <target state="translated">Wprowadź element lokalny dla elementu „{0}”</target>
        <note />
      </trans-unit>
      <trans-unit id="Introduce_constant_for_0">
        <source>Introduce constant for '{0}'</source>
        <target state="translated">Wprowadź stałą dla elementu „{0}”</target>
        <note />
      </trans-unit>
      <trans-unit id="Introduce_local_constant_for_0">
        <source>Introduce local constant for '{0}'</source>
        <target state="translated">Wprowadź stałą lokalną dla elementu „{0}”</target>
        <note />
      </trans-unit>
      <trans-unit id="Introduce_field_for_all_occurrences_of_0">
        <source>Introduce field for all occurrences of '{0}'</source>
        <target state="translated">Wprowadź pole dla wszystkich wystąpień elementu „{0}”</target>
        <note />
      </trans-unit>
      <trans-unit id="Introduce_local_for_all_occurrences_of_0">
        <source>Introduce local for all occurrences of '{0}'</source>
        <target state="translated">Wprowadź element lokalny dla wszystkich wystąpień elementu „{0}”</target>
        <note />
      </trans-unit>
      <trans-unit id="Introduce_constant_for_all_occurrences_of_0">
        <source>Introduce constant for all occurrences of '{0}'</source>
        <target state="translated">Wprowadź stałą dla wszystkich wystąpień elementu „{0}”</target>
        <note />
      </trans-unit>
      <trans-unit id="Introduce_local_constant_for_all_occurrences_of_0">
        <source>Introduce local constant for all occurrences of '{0}'</source>
        <target state="translated">Wprowadź stałą lokalną dla wszystkich wystąpień elementu „{0}”</target>
        <note />
      </trans-unit>
      <trans-unit id="Introduce_query_variable_for_all_occurrences_of_0">
        <source>Introduce query variable for all occurrences of '{0}'</source>
        <target state="translated">Wprowadź zmienną zapytania dla wszystkich wystąpień elementu „{0}”</target>
        <note />
      </trans-unit>
      <trans-unit id="Introduce_query_variable_for_0">
        <source>Introduce query variable for '{0}'</source>
        <target state="translated">Wprowadź zmienną zapytania dla elementu „{0}”</target>
        <note />
      </trans-unit>
      <trans-unit id="Anonymous_Types_colon">
        <source>Anonymous Types:</source>
        <target state="translated">Typy anonimowe:</target>
        <note />
      </trans-unit>
      <trans-unit id="is_">
        <source>is</source>
        <target state="translated">jest</target>
        <note />
      </trans-unit>
      <trans-unit id="Represents_an_object_whose_operations_will_be_resolved_at_runtime">
        <source>Represents an object whose operations will be resolved at runtime.</source>
        <target state="translated">Reprezentuje obiekt, którego operacje będą rozpoznane w czasie wykonania.</target>
        <note />
      </trans-unit>
      <trans-unit id="constant">
        <source>constant</source>
        <target state="translated">stała</target>
        <note />
      </trans-unit>
      <trans-unit id="field">
        <source>field</source>
        <target state="translated">pole</target>
        <note />
      </trans-unit>
      <trans-unit id="local_constant">
        <source>local constant</source>
        <target state="translated">stała lokalna</target>
        <note />
      </trans-unit>
      <trans-unit id="local_variable">
        <source>local variable</source>
        <target state="translated">zmienna lokalna</target>
        <note />
      </trans-unit>
      <trans-unit id="label">
        <source>label</source>
        <target state="translated">etykieta</target>
        <note />
      </trans-unit>
      <trans-unit id="range_variable">
        <source>range variable</source>
        <target state="translated">zmienna zakresu</target>
        <note />
      </trans-unit>
      <trans-unit id="parameter">
        <source>parameter</source>
        <target state="translated">parametr</target>
        <note />
      </trans-unit>
      <trans-unit id="in_">
        <source>in</source>
        <target state="translated">w</target>
        <note />
      </trans-unit>
      <trans-unit id="Summary_colon">
        <source>Summary:</source>
        <target state="translated">Podsumowanie:</target>
        <note />
      </trans-unit>
      <trans-unit id="Locals_and_parameters">
        <source>Locals and parameters</source>
        <target state="translated">Elementy lokalne i parametry</target>
        <note />
      </trans-unit>
      <trans-unit id="Type_parameters_colon">
        <source>Type parameters:</source>
        <target state="translated">Parametry typu:</target>
        <note />
      </trans-unit>
      <trans-unit id="Returns_colon">
        <source>Returns:</source>
        <target state="translated">Zwraca:</target>
        <note />
      </trans-unit>
      <trans-unit id="Exceptions_colon">
        <source>Exceptions:</source>
        <target state="translated">Wyjątki:</target>
        <note />
      </trans-unit>
      <trans-unit id="Remarks_colon">
        <source>Remarks:</source>
        <target state="translated">Uwagi:</target>
        <note />
      </trans-unit>
      <trans-unit id="generating_source_for_symbols_of_this_type_is_not_supported">
        <source>generating source for symbols of this type is not supported</source>
        <target state="translated">generowanie źródła dla symboli tego typu nie jest obsługiwane</target>
        <note />
      </trans-unit>
      <trans-unit id="Assembly">
        <source>Assembly</source>
        <target state="translated">zestaw</target>
        <note />
      </trans-unit>
      <trans-unit id="location_unknown">
        <source>location unknown</source>
        <target state="translated">lokalizacja nieznana</target>
        <note />
      </trans-unit>
      <trans-unit id="Extract_Interface">
        <source>Extract Interface...</source>
        <target state="translated">Wyodrębnij interfejs...</target>
        <note />
      </trans-unit>
      <trans-unit id="Updating_0_will_prevent_the_debug_session_from_continuing">
        <source>Updating '{0}' will prevent the debug session from continuing.</source>
        <target state="translated">Aktualizacja elementu „{0}” uniemożliwi kontynuowanie sesji debugowania.</target>
        <note />
      </trans-unit>
      <trans-unit id="Updating_a_complex_statement_containing_an_await_expression_will_prevent_the_debug_session_from_continuing">
        <source>Updating a complex statement containing an await expression will prevent the debug session from continuing.</source>
        <target state="translated">Zaktualizowanie instrukcji złożonej zawierającej wyrażenie await uniemożliwi kontynuowanie sesji debugowania.</target>
        <note />
      </trans-unit>
      <trans-unit id="Changing_visibility_of_a_constructor_will_prevent_the_debug_session_from_continuing">
        <source>Changing visibility of a constructor will prevent the debug session from continuing.</source>
        <target state="translated">Zmiana widoczności konstruktora uniemożliwi kontynuowanie sesji debugowania.</target>
        <note />
      </trans-unit>
      <trans-unit id="Capturing_variable_0_that_hasn_t_been_captured_before_will_prevent_the_debug_session_from_continuing">
        <source>Capturing variable '{0}' that hasn't been captured before will prevent the debug session from continuing.</source>
        <target state="translated">Przechwycenie zmiennej „{0}”, która nie została przechwycona wcześniej, uniemożliwi kontynuowanie sesji debugowania.</target>
        <note />
      </trans-unit>
      <trans-unit id="Ceasing_to_capture_variable_0_will_prevent_the_debug_session_from_continuing">
        <source>Ceasing to capture variable '{0}' will prevent the debug session from continuing.</source>
        <target state="translated">Zaprzestanie przechwytywania zmiennej „{0}” uniemożliwi kontynuowanie sesji debugowania.</target>
        <note />
      </trans-unit>
      <trans-unit id="Deleting_captured_variable_0_will_prevent_the_debug_session_from_continuing">
        <source>Deleting captured variable '{0}' will prevent the debug session from continuing.</source>
        <target state="translated">Usunięcie przechwyconej zmiennej „{0}” uniemożliwi kontynuowanie sesji debugowania.</target>
        <note />
      </trans-unit>
      <trans-unit id="Changing_the_type_of_a_captured_variable_0_previously_of_type_1_will_prevent_the_debug_session_from_continuing">
        <source>Changing the type of a captured variable '{0}' previously of type '{1}' will prevent the debug session from continuing.</source>
        <target state="translated">Wprowadzenie zmian typu przechwyconej zmiennej „{0}”, której wcześniejszy typ to „{1}”, uniemożliwi kontynuowanie sesji debugowania.</target>
        <note />
      </trans-unit>
      <trans-unit id="Changing_the_parameters_of_0_will_prevent_the_debug_session_from_continuing">
        <source>Changing the parameters of '{0}' will prevent the debug session from continuing.</source>
        <target state="translated">Wprowadzenie zmian parametrów elementu „{0}” uniemożliwi kontynuowanie sesji debugowania.</target>
        <note />
      </trans-unit>
      <trans-unit id="Changing_the_return_type_of_0_will_prevent_the_debug_session_from_continuing">
        <source>Changing the return type of '{0}' will prevent the debug session from continuing.</source>
        <target state="translated">Wprowadzenie zmian typu zwracanego elementu „{0}” uniemożliwi kontynuowanie sesji debugowania.</target>
        <note />
      </trans-unit>
      <trans-unit id="Changing_the_type_of_0_will_prevent_the_debug_session_from_continuing">
        <source>Changing the type of '{0}' will prevent the debug session from continuing.</source>
        <target state="translated">Wprowadzenie zmian typu elementu „{0}” uniemożliwi kontynuowanie sesji debugowania.</target>
        <note />
      </trans-unit>
      <trans-unit id="Changing_the_declaration_scope_of_a_captured_variable_0_will_prevent_the_debug_session_from_continuing">
        <source>Changing the declaration scope of a captured variable '{0}' will prevent the debug session from continuing.</source>
        <target state="translated">Wprowadzenie zmian zakresu deklaracji przechwyconej zmiennej „{0}” uniemożliwi kontynuowanie sesji debugowania.</target>
        <note />
      </trans-unit>
      <trans-unit id="Accessing_captured_variable_0_that_hasn_t_been_accessed_before_in_1_will_prevent_the_debug_session_from_continuing">
        <source>Accessing captured variable '{0}' that hasn't been accessed before in {1} will prevent the debug session from continuing.</source>
        <target state="translated">Uzyskanie dostępu do przechwyconej zmiennej „{0}”, do której wcześniej nie uzyskano dostępu w elemencie {1}, uniemożliwi kontynuowanie sesji debugowania.</target>
        <note />
      </trans-unit>
      <trans-unit id="Ceasing_to_access_captured_variable_0_in_1_will_prevent_the_debug_session_from_continuing">
        <source>Ceasing to access captured variable '{0}' in {1} will prevent the debug session from continuing.</source>
        <target state="translated">Zaprzestanie uzyskiwania dostępu do przechwyconej zmiennej „{0}” w elemencie {1} uniemożliwi kontynuowanie sesji debugowania.</target>
        <note />
      </trans-unit>
      <trans-unit id="Adding_0_that_accesses_captured_variables_1_and_2_declared_in_different_scopes_will_prevent_the_debug_session_from_continuing">
        <source>Adding '{0}' that accesses captured variables '{1}' and '{2}' declared in different scopes will prevent the debug session from continuing.</source>
        <target state="translated">Dodanie elementu „{0}”, który uzyskuje dostęp do przechwyconych zmiennych „{1}” i „{2}” zadeklarowanych w innych zakresach, uniemożliwi kontynuowanie sesji debugowania.</target>
        <note />
      </trans-unit>
      <trans-unit id="Removing_0_that_accessed_captured_variables_1_and_2_declared_in_different_scopes_will_prevent_the_debug_session_from_continuing">
        <source>Removing '{0}' that accessed captured variables '{1}' and '{2}' declared in different scopes will prevent the debug session from continuing.</source>
        <target state="translated">Usunięcie elementu „{0}”, z poziomu którego uzyskano dostęp do przechwyconych zmiennych „{1}” i „{2}” zadeklarowanych w innych zakresach, uniemożliwi kontynuowanie sesji debugowania.</target>
        <note />
      </trans-unit>
      <trans-unit id="Adding_0_into_a_1_will_prevent_the_debug_session_from_continuing">
        <source>Adding '{0}' into a '{1}' will prevent the debug session from continuing.</source>
        <target state="translated">Dodanie elementu „{0}” do elementu „{1}” uniemożliwi kontynuowanie sesji debugowania.</target>
        <note />
      </trans-unit>
      <trans-unit id="Adding_0_into_a_class_with_explicit_or_sequential_layout_will_prevent_the_debug_session_from_continuing">
        <source>Adding '{0}' into a class with explicit or sequential layout will prevent the debug session from continuing.</source>
        <target state="translated">Dodanie elementu „{0}” do klasy z układem jawnym lub sekwencyjnym uniemożliwi kontynuowanie sesji debugowania.</target>
        <note />
      </trans-unit>
      <trans-unit id="Updating_the_modifiers_of_0_will_prevent_the_debug_session_from_continuing">
        <source>Updating the modifiers of '{0}' will prevent the debug session from continuing.</source>
        <target state="translated">Aktualizacja modyfikatorów elementu „{0}” uniemożliwi kontynuowanie sesji debugowania.</target>
        <note />
      </trans-unit>
      <trans-unit id="Updating_the_Handles_clause_of_0_will_prevent_the_debug_session_from_continuing">
        <source>Updating the Handles clause of '{0}' will prevent the debug session from continuing.</source>
        <target state="translated">Aktualizacja klauzuli Handles elementu „{0}” uniemożliwi kontynuowanie sesji debugowania.</target>
        <note />
      </trans-unit>
      <trans-unit id="Adding_0_with_the_Handles_clause_will_prevent_the_debug_session_from_continuing">
        <source>Adding '{0}' with the Handles clause will prevent the debug session from continuing.</source>
        <target state="translated">Dodanie elementu „{0}” z klauzulą Handles uniemożliwi kontynuowanie sesji debugowania.</target>
        <note />
      </trans-unit>
      <trans-unit id="Updating_the_Implements_clause_of_a_0_will_prevent_the_debug_session_from_continuing">
        <source>Updating the Implements clause of a '{0}' will prevent the debug session from continuing.</source>
        <target state="translated">Aktualizacja klauzuli Implements elementu „{0}” uniemożliwi kontynuowanie sesji debugowania.</target>
        <note />
      </trans-unit>
      <trans-unit id="Changing_the_constraint_from_0_to_1_will_prevent_the_debug_session_from_continuing">
        <source>Changing the constraint from '{0}' to '{1}' will prevent the debug session from continuing.</source>
        <target state="translated">Zmiana ograniczenia z „{0}” na „{1}” uniemożliwi kontynuowanie sesji debugowania.</target>
        <note />
      </trans-unit>
      <trans-unit id="Updating_the_variance_of_0_will_prevent_the_debug_session_from_continuing">
        <source>Updating the variance of '{0}' will prevent the debug session from continuing.</source>
        <target state="translated">Aktualizacja wariancji elementu „{0}” uniemożliwi kontynuowanie sesji debugowania.</target>
        <note />
      </trans-unit>
      <trans-unit id="Updating_the_type_of_0_will_prevent_the_debug_session_from_continuing">
        <source>Updating the type of '{0}' will prevent the debug session from continuing.</source>
        <target state="translated">Aktualizacja typu elementu „{0}” uniemożliwi kontynuowanie sesji debugowania.</target>
        <note />
      </trans-unit>
      <trans-unit id="Updating_the_initializer_of_0_will_prevent_the_debug_session_from_continuing">
        <source>Updating the initializer of '{0}' will prevent the debug session from continuing.</source>
        <target state="translated">Aktualizacja inicjatora elementu „{0}” uniemożliwi kontynuowanie sesji debugowania.</target>
        <note />
      </trans-unit>
      <trans-unit id="Updating_the_size_of_a_0_will_prevent_the_debug_session_from_continuing">
        <source>Updating the size of a '{0}' will prevent the debug session from continuing.</source>
        <target state="translated">Aktualizacja rozmiaru elementu „{0}” uniemożliwi kontynuowanie sesji debugowania.</target>
        <note />
      </trans-unit>
      <trans-unit id="Updating_the_underlying_type_of_0_will_prevent_the_debug_session_from_continuing">
        <source>Updating the underlying type of '{0}' will prevent the debug session from continuing.</source>
        <target state="translated">Aktualizacja typu bazowego elementu „{0}” uniemożliwi kontynuowanie sesji debugowania.</target>
        <note />
      </trans-unit>
      <trans-unit id="Updating_the_base_class_and_or_base_interface_s_of_0_will_prevent_the_debug_session_from_continuing">
        <source>Updating the base class and/or base interface(s) of '{0}' will prevent the debug session from continuing.</source>
        <target state="translated">Aktualizacja klasy bazowej i/lub interfejsów bazowych elementu „{0}” uniemożliwi kontynuowanie sesji debugowania.</target>
        <note />
      </trans-unit>
      <trans-unit id="Updating_a_field_to_an_event_or_vice_versa_will_prevent_the_debug_session_from_continuing">
        <source>Updating a field to an event or vice versa will prevent the debug session from continuing.</source>
        <target state="translated">Aktualizacja z pola do zdarzenia (lub na odwrót) uniemożliwi kontynuowanie sesji debugowania.</target>
        <note />
      </trans-unit>
      <trans-unit id="Updating_the_kind_of_a_type_will_prevent_the_debug_session_from_continuing">
        <source>Updating the kind of a type will prevent the debug session from continuing.</source>
        <target state="translated">Aktualizacja rodzaju typu uniemożliwi kontynuowanie sesji debugowania.</target>
        <note />
      </trans-unit>
      <trans-unit id="Updating_the_kind_of_an_property_event_accessor_will_prevent_the_debug_session_from_continuing">
        <source>Updating the kind of an property/event accessor will prevent the debug session from continuing.</source>
        <target state="translated">Aktualizacja rodzaju metody dostępu do właściwości lub zdarzenia uniemożliwi kontynuowanie sesji debugowania.</target>
        <note />
      </trans-unit>
      <trans-unit id="Updating_the_kind_of_a_method_Sub_Function_will_prevent_the_debug_session_from_continuing">
        <source>Updating the kind of a method (Sub/Function) will prevent the debug session from continuing.</source>
        <target state="translated">Aktualizacja rodzaju metody (Sub/Function) uniemożliwi kontynuowanie sesji debugowania.</target>
        <note />
      </trans-unit>
      <trans-unit id="Updating_the_library_name_of_Declare_Statement_will_prevent_the_debug_session_from_continuing">
        <source>Updating the library name of Declare Statement will prevent the debug session from continuing.</source>
        <target state="translated">Aktualizacja nazwy biblioteki instrukcji Declare uniemożliwi kontynuowanie sesji debugowania.</target>
        <note />
      </trans-unit>
      <trans-unit id="Updating_the_alias_of_Declare_Statement_will_prevent_the_debug_session_from_continuing">
        <source>Updating the alias of Declare Statement will prevent the debug session from continuing.</source>
        <target state="translated">Aktualizacja aliasu instrukcji Declare uniemożliwi kontynuowanie sesji debugowania.</target>
        <note />
      </trans-unit>
      <trans-unit id="Renaming_0_will_prevent_the_debug_session_from_continuing">
        <source>Renaming '{0}' will prevent the debug session from continuing.</source>
        <target state="translated">Zmiana nazwy elementu „{0}” uniemożliwi kontynuowanie sesji debugowania.</target>
        <note />
      </trans-unit>
      <trans-unit id="Adding_0_will_prevent_the_debug_session_from_continuing">
        <source>Adding '{0}' will prevent the debug session from continuing.</source>
        <target state="translated">Dodanie elementu „{0}” uniemożliwi kontynuowanie sesji debugowania.</target>
        <note />
      </trans-unit>
      <trans-unit id="Adding_an_abstract_0_or_overriding_an_inherited_0_will_prevent_the_debug_session_from_continuing">
        <source>Adding an abstract '{0}' or overriding an inherited '{0}' will prevent the debug session from continuing.</source>
        <target state="translated">Dodanie abstrakcyjnego elementu „{0}” lub przesłonięcie odziedziczonego elementu „{0}” uniemożliwi kontynuowanie sesji debugowania.</target>
        <note />
      </trans-unit>
      <trans-unit id="Adding_a_MustOverride_0_or_overriding_an_inherited_0_will_prevent_the_debug_session_from_continuing">
        <source>Adding a MustOverride '{0}' or overriding an inherited '{0}' will prevent the debug session from continuing.</source>
        <target state="translated">Dodanie elementu „{0}” typu MustOverride lub przesłonięcie odziedziczonego elementu „{0}” uniemożliwi kontynuowanie sesji debugowania.</target>
        <note />
      </trans-unit>
      <trans-unit id="Adding_an_extern_0_will_prevent_the_debug_session_from_continuing">
        <source>Adding an extern '{0}' will prevent the debug session from continuing.</source>
        <target state="translated">Dodanie zewnętrznego elementu „{0}” uniemożliwi kontynuowanie sesji debugowania.</target>
        <note />
      </trans-unit>
      <trans-unit id="Adding_an_imported_method_will_prevent_the_debug_session_from_continuing">
        <source>Adding an imported method will prevent the debug session from continuing.</source>
        <target state="translated">Dodanie zaimportowanej metody uniemożliwi kontynuowanie sesji debugowania.</target>
        <note />
      </trans-unit>
      <trans-unit id="Adding_a_user_defined_0_will_prevent_the_debug_session_from_continuing">
        <source>Adding a user defined '{0}' will prevent the debug session from continuing.</source>
        <target state="translated">Dodanie zdefiniowanego przez użytkownika elementu „{0}” uniemożliwi kontynuowanie sesji debugowania.</target>
        <note />
      </trans-unit>
      <trans-unit id="Adding_a_generic_0_will_prevent_the_debug_session_from_continuing">
        <source>Adding a generic '{0}' will prevent the debug session from continuing.</source>
        <target state="translated">Dodanie ogólnego elementu „{0}” uniemożliwi kontynuowanie sesji debugowania.</target>
        <note />
      </trans-unit>
      <trans-unit id="Adding_0_around_an_active_statement_will_prevent_the_debug_session_from_continuing">
        <source>Adding '{0}' around an active statement will prevent the debug session from continuing.</source>
        <target state="translated">Dodanie elementu „{0}” w ramach aktywnej instrukcji uniemożliwi kontynuowanie sesji debugowania.</target>
        <note />
      </trans-unit>
      <trans-unit id="Moving_0_will_prevent_the_debug_session_from_continuing">
        <source>Moving '{0}' will prevent the debug session from continuing.</source>
        <target state="translated">Przeniesienie elementu „{0}” uniemożliwi kontynuowanie sesji debugowania.</target>
        <note />
      </trans-unit>
      <trans-unit id="Deleting_0_will_prevent_the_debug_session_from_continuing">
        <source>Deleting '{0}' will prevent the debug session from continuing.</source>
        <target state="translated">Usunięcie elementu „{0}” uniemożliwi kontynuowanie sesji debugowania.</target>
        <note />
      </trans-unit>
      <trans-unit id="Deleting_0_around_an_active_statement_will_prevent_the_debug_session_from_continuing">
        <source>Deleting '{0}' around an active statement will prevent the debug session from continuing.</source>
        <target state="translated">Usunięcie elementu „{0}” w ramach aktywnej instrukcji uniemożliwi kontynuowanie sesji debugowania.</target>
        <note />
      </trans-unit>
      <trans-unit id="Adding_a_method_body_will_prevent_the_debug_session_from_continuing">
        <source>Adding a method body will prevent the debug session from continuing.</source>
        <target state="translated">Dodanie treści metody uniemożliwi kontynuowanie sesji debugowania.</target>
        <note />
      </trans-unit>
      <trans-unit id="Deleting_a_method_body_will_prevent_the_debug_session_from_continuing">
        <source>Deleting a method body will prevent the debug session from continuing.</source>
        <target state="translated">Usunięcie treści metody uniemożliwi kontynuowanie sesji debugowania.</target>
        <note />
      </trans-unit>
      <trans-unit id="An_active_statement_has_been_removed_from_its_original_method_You_must_revert_your_changes_to_continue_or_restart_the_debugging_session">
        <source>An active statement has been removed from its original method. You must revert your changes to continue or restart the debugging session.</source>
        <target state="translated">Aktywna instrukcja została usunięta ze swojej oryginalnej metody. Musisz cofnąć zmiany, aby kontynuować, lub uruchomić ponownie sesję debugowania.</target>
        <note />
      </trans-unit>
      <trans-unit id="Updating_a_0_statement_around_an_active_statement_will_prevent_the_debug_session_from_continuing">
        <source>Updating a '{0}' statement around an active statement will prevent the debug session from continuing.</source>
        <target state="translated">Aktualizacja instrukcji „{0}” w pobliżu aktywnej instrukcji uniemożliwi kontynuowanie sesji debugowania.</target>
        <note />
      </trans-unit>
      <trans-unit id="Updating_async_or_iterator_modifier_around_an_active_statement_will_prevent_the_debug_session_from_continuing">
        <source>Updating async or iterator modifier around an active statement will prevent the debug session from continuing.</source>
        <target state="translated">Aktualizowanie modyfikatora asynchronicznego lub powiązanego z iteratorem w pobliżu aktywnej instrukcji uniemożliwi kontynuowanie sesji debugowania.</target>
        <note>{Locked="async"}{Locked="iterator"} "async" and "iterator" are C#/VB keywords and should not be localized.</note>
      </trans-unit>
      <trans-unit id="Modifying_a_generic_method_will_prevent_the_debug_session_from_continuing">
        <source>Modifying a generic method will prevent the debug session from continuing.</source>
        <target state="translated">Modyfikacja metody ogólnej uniemożliwi kontynuowanie sesji debugowania.</target>
        <note />
      </trans-unit>
      <trans-unit id="Modifying_whitespace_or_comments_in_a_generic_0_will_prevent_the_debug_session_from_continuing">
        <source>Modifying whitespace or comments in a generic '{0}' will prevent the debug session from continuing.</source>
        <target state="translated">Modyfikacja odstępów lub komentarzy w ogólnej metodzie „{0}” uniemożliwi kontynuowanie sesji debugowania.</target>
        <note />
      </trans-unit>
      <trans-unit id="Modifying_a_method_inside_the_context_of_a_generic_type_will_prevent_the_debug_session_from_continuing">
        <source>Modifying a method inside the context of a generic type will prevent the debug session from continuing.</source>
        <target state="translated">Modyfikacja metody w ramach kontekstu typu ogólnego uniemożliwi kontynuowanie sesji debugowania.</target>
        <note />
      </trans-unit>
      <trans-unit id="Modifying_whitespace_or_comments_in_0_inside_the_context_of_a_generic_type_will_prevent_the_debug_session_from_continuing">
        <source>Modifying whitespace or comments in '{0}' inside the context of a generic type will prevent the debug session from continuing.</source>
        <target state="translated">Modyfikacja odstępów lub komentarzy w elemencie „{0}” w ramach kontekstu typu ogólnego uniemożliwi kontynuowanie sesji debugowania.</target>
        <note />
      </trans-unit>
      <trans-unit id="Modifying_the_initializer_of_0_in_a_generic_type_will_prevent_the_debug_session_from_continuing">
        <source>Modifying the initializer of '{0}' in a generic type will prevent the debug session from continuing.</source>
        <target state="translated">Modyfikacja inicjatora elementu „{0}” w typie ogólnym uniemożliwi kontynuowanie sesji debugowania.</target>
        <note />
      </trans-unit>
      <trans-unit id="Modifying_the_initializer_of_0_in_a_partial_type_will_prevent_the_debug_session_from_continuing">
        <source>Modifying the initializer of '{0}' in a partial type will prevent the debug session from continuing.</source>
        <target state="translated">Modyfikacja inicjatora elementu „{0}” w typie częściowym uniemożliwi kontynuowanie sesji debugowania.</target>
        <note />
      </trans-unit>
      <trans-unit id="Adding_a_constructor_to_a_type_with_a_field_or_property_initializer_that_contains_an_anonymous_function_will_prevent_the_debug_session_from_continuing">
        <source>Adding a constructor to a type with a field or property initializer that contains an anonymous function will prevent the debug session from continuing.</source>
        <target state="translated">Dodanie konstruktora do typu z inicjatorem pola lub właściwości zawierającego funkcję anonimową uniemożliwi kontynuowanie sesji debugowania.</target>
        <note />
      </trans-unit>
      <trans-unit id="Renaming_a_captured_variable_from_0_to_1_will_prevent_the_debug_session_from_continuing">
        <source>Renaming a captured variable, from '{0}' to '{1}' will prevent the debug session from continuing.</source>
        <target state="translated">Zmiana nazwy zmiennej przechwyconej z „{0}” na „{1}” uniemożliwi kontynuowanie sesji debugowania.</target>
        <note />
      </trans-unit>
      <trans-unit id="Modifying_a_catch_finally_handler_with_an_active_statement_in_the_try_block_will_prevent_the_debug_session_from_continuing">
        <source>Modifying a catch/finally handler with an active statement in the try block will prevent the debug session from continuing.</source>
        <target state="translated">Modyfikacja procedury obsługi catch/finally z aktywną instrukcją w bloku try uniemożliwi kontynuowanie sesji debugowania.</target>
        <note />
      </trans-unit>
      <trans-unit id="Modifying_a_try_catch_finally_statement_when_the_finally_block_is_active_will_prevent_the_debug_session_from_continuing">
        <source>Modifying a try/catch/finally statement when the finally block is active will prevent the debug session from continuing.</source>
        <target state="translated">Modyfikacja instrukcji try/catch/finally, gdy blok finally jest aktywny, uniemożliwi kontynuowanie sesji debugowania.</target>
        <note />
      </trans-unit>
      <trans-unit id="Modifying_a_catch_handler_around_an_active_statement_will_prevent_the_debug_session_from_continuing">
        <source>Modifying a catch handler around an active statement will prevent the debug session from continuing.</source>
        <target state="translated">Modyfikacja procedury obsługi catch w obrębie aktywnej instrukcji uniemożliwi kontynuowanie sesji debugowania.</target>
        <note />
      </trans-unit>
      <trans-unit id="Modifying_0_which_contains_the_stackalloc_operator_will_prevent_the_debug_session_from_continuing">
        <source>Modifying '{0}' which contains the 'stackalloc' operator will prevent the debug session from continuing.</source>
        <target state="translated">Modyfikacja elementu „{0}” zawierającego operator „stackalloc” uniemożliwi kontynuowanie sesji debugowania.</target>
        <note />
      </trans-unit>
      <trans-unit id="Modifying_an_active_0_which_contains_On_Error_or_Resume_statements_will_prevent_the_debug_session_from_continuing">
        <source>Modifying an active '{0}' which contains 'On Error' or 'Resume' statements will prevent the debug session from continuing.</source>
        <target state="translated">Modyfikacja aktywnego elementu „{0}” zawierającego instrukcje „On Error” lub „Resume” uniemożliwi kontynuowanie sesji debugowania.</target>
        <note />
      </trans-unit>
      <trans-unit id="Modifying_0_which_contains_an_Aggregate_Group_By_or_Join_query_clauses_will_prevent_the_debug_session_from_continuing">
        <source>Modifying '{0}' which contains an Aggregate, Group By, or Join query clauses will prevent the debug session from continuing.</source>
        <target state="translated">Zmodyfikowanie elementu „{0}”, który zawiera klauzule zapytań Aggregate, Group By lub Join, uniemożliwi kontynuowanie sesji debugowania.</target>
        <note />
      </trans-unit>
      <trans-unit id="Modifying_source_with_experimental_language_features_enabled_will_prevent_the_debug_session_from_continuing">
        <source>Modifying source with experimental language features enabled will prevent the debug session from continuing.</source>
        <target state="translated">Modyfikacja elementu źródłowego z włączonymi eksperymentalnymi funkcjami językowymi uniemożliwi kontynuowanie sesji debugowania.</target>
        <note />
      </trans-unit>
      <trans-unit id="Updating_an_active_statement_will_prevent_the_debug_session_from_continuing">
        <source>Updating an active statement will prevent the debug session from continuing.</source>
        <target state="translated">Aktualizacja aktywnej instrukcji uniemożliwi kontynuowanie sesji debugowania.</target>
        <note />
      </trans-unit>
      <trans-unit id="Removing_0_that_contains_an_active_statement_will_prevent_the_debug_session_from_continuing">
        <source>Removing '{0}' that contains an active statement will prevent the debug session from continuing.</source>
        <target state="translated">Usunięcie elementu „{0}” zawierającego aktywną instrukcję uniemożliwi kontynuowanie sesji debugowania.</target>
        <note />
      </trans-unit>
      <trans-unit id="Adding_a_new_file_will_prevent_the_debug_session_from_continuing">
        <source>Adding a new file will prevent the debug session from continuing.</source>
        <target state="translated">Dodanie nowego pliku uniemożliwi kontynuowanie sesji debugowania.</target>
        <note />
      </trans-unit>
      <trans-unit id="Attribute_0_is_missing_Updating_an_async_method_or_an_iterator_will_prevent_the_debug_session_from_continuing">
        <source>Attribute '{0}' is missing. Updating an async method or an iterator will prevent the debug session from continuing.</source>
        <target state="translated">Brak atrybutu „{0}”. Zaktualizowanie metody asynchronicznej lub iteratora uniemożliwi kontynuowanie sesji debugowania.</target>
        <note />
      </trans-unit>
      <trans-unit id="Unexpected_interface_member_kind_colon_0">
        <source>Unexpected interface member kind: {0}</source>
        <target state="translated">Nieoczekiwany rodzaj składowej interfejsu: {0}</target>
        <note />
      </trans-unit>
      <trans-unit id="Unknown_symbol_kind">
        <source>Unknown symbol kind</source>
        <target state="translated">Nieznany rodzaj symbolu</target>
        <note />
      </trans-unit>
      <trans-unit id="Generate_abstract_property_1_0">
        <source>Generate abstract property '{1}.{0}'</source>
        <target state="translated">Generuj właściwość abstrakcyjną „{1}.{0}”</target>
        <note />
      </trans-unit>
      <trans-unit id="Generate_abstract_method_1_0">
        <source>Generate abstract method '{1}.{0}'</source>
        <target state="translated">Generuj metodę abstrakcyjną „{1}.{0}”</target>
        <note />
      </trans-unit>
      <trans-unit id="Generate_method_1_0">
        <source>Generate method '{1}.{0}'</source>
        <target state="translated">Generuj metodę „{1}.{0}”</target>
        <note />
      </trans-unit>
      <trans-unit id="Requested_assembly_already_loaded_from_0">
        <source>Requested assembly already loaded from '{0}'.</source>
        <target state="translated">Żądany zestaw został już załadowany z elementu „{0}”.</target>
        <note />
      </trans-unit>
      <trans-unit id="The_symbol_does_not_have_an_icon">
        <source>The symbol does not have an icon.</source>
        <target state="translated">Symbol nie ma ikony.</target>
        <note />
      </trans-unit>
      <trans-unit id="Unknown">
        <source>Unknown</source>
        <target state="translated">Nieznany</target>
        <note />
      </trans-unit>
      <trans-unit id="Extract_Method">
        <source>Extract Method</source>
        <target state="translated">Wyodrębnianie metody</target>
        <note />
      </trans-unit>
      <trans-unit id="Extract_Method_plus_Local">
        <source>Extract Method + Local</source>
        <target state="translated">Wyodrębnij metodę + element lokalny</target>
        <note />
      </trans-unit>
      <trans-unit id="Asynchronous_method_cannot_have_ref_out_parameters_colon_bracket_0_bracket">
        <source>Asynchronous method cannot have ref/out parameters : [{0}]</source>
        <target state="translated">Metoda asynchroniczna nie może zawierać parametrów ref/out: [{0}]</target>
        <note />
      </trans-unit>
      <trans-unit id="The_member_is_defined_in_metadata">
        <source>The member is defined in metadata.</source>
        <target state="translated">Składowa jest zdefiniowana w metadanych.</target>
        <note />
      </trans-unit>
      <trans-unit id="You_can_only_change_the_signature_of_a_constructor_indexer_method_or_delegate">
        <source>You can only change the signature of a constructor, indexer, method or delegate.</source>
        <target state="translated">Możesz zmienić tylko sygnaturę konstruktora, indeksatora, metody lub delegata.</target>
        <note />
      </trans-unit>
      <trans-unit id="This_symbol_has_related_definitions_or_references_in_metadata_Changing_its_signature_may_result_in_build_errors_Do_you_want_to_continue">
        <source>This symbol has related definitions or references in metadata. Changing its signature may result in build errors.

Do you want to continue?</source>
        <target state="translated">Ten symbol zawiera powiązane definicje lub odwołania w metadanych. Zmiana jego sygnatury może spowodować błędy kompilacji.

Czy chcesz kontynuować?</target>
        <note />
      </trans-unit>
      <trans-unit id="Change_signature">
        <source>Change signature...</source>
        <target state="translated">Zmień sygnaturę...</target>
        <note />
      </trans-unit>
      <trans-unit id="Generate_new_type">
        <source>Generate new type...</source>
        <target state="translated">Generuj nowy typ...</target>
        <note />
      </trans-unit>
      <trans-unit id="User_Diagnostic_Analyzer_Failure">
        <source>User Diagnostic Analyzer Failure.</source>
        <target state="translated">Błąd analizatora diagnostycznego użytkownika.</target>
        <note />
      </trans-unit>
      <trans-unit id="Analyzer_0_threw_an_exception_of_type_1_with_message_2">
        <source>Analyzer '{0}' threw an exception of type '{1}' with message '{2}'.</source>
        <target state="translated">Analizator „{0}” zgłosił wyjątek typu „{1}” z komunikatem „{2}”.</target>
        <note />
      </trans-unit>
      <trans-unit id="Analyzer_0_threw_the_following_exception_colon_1">
        <source>Analyzer '{0}' threw the following exception:
'{1}'.</source>
        <target state="translated">Analizator „{0}” zgłosił następujący wyjątek:
„{1}”.</target>
        <note />
      </trans-unit>
      <trans-unit id="Remove_Unnecessary_Cast">
        <source>Remove Unnecessary Cast</source>
        <target state="translated">Usuń niepotrzebne rzutowanie</target>
        <note />
      </trans-unit>
      <trans-unit id="Simplify_Names">
        <source>Simplify Names</source>
        <target state="translated">Uprość nazwy</target>
        <note />
      </trans-unit>
      <trans-unit id="Simplify_Member_Access">
        <source>Simplify Member Access</source>
        <target state="translated">Uprość dostęp do składowej</target>
        <note />
      </trans-unit>
      <trans-unit id="Remove_qualification">
        <source>Remove qualification</source>
        <target state="translated">Usuń kwalifikacje</target>
        <note />
      </trans-unit>
      <trans-unit id="Edit_and_Continue1">
        <source>Edit and Continue</source>
        <target state="translated">Edytuj i kontynuuj</target>
        <note />
      </trans-unit>
      <trans-unit id="This_signature_does_not_contain_parameters_that_can_be_changed">
        <source>This signature does not contain parameters that can be changed.</source>
        <target state="translated">Ta sygnatura nie zawiera parametrów, które można zmienić.</target>
        <note />
      </trans-unit>
      <trans-unit id="Unknown_error_occurred">
        <source>Unknown error occurred</source>
        <target state="translated">Wystąpił nieznany błąd</target>
        <note />
      </trans-unit>
      <trans-unit id="Available">
        <source>Available</source>
        <target state="translated">Dostępne</target>
        <note />
      </trans-unit>
      <trans-unit id="Not_Available">
        <source>Not Available</source>
        <target state="translated">Niedostępne</target>
        <note />
      </trans-unit>
      <trans-unit id="_0_1">
        <source>    {0} - {1}</source>
        <target state="translated">    {0} - {1}</target>
        <note />
      </trans-unit>
      <trans-unit id="You_can_use_the_navigation_bar_to_switch_context">
        <source>You can use the navigation bar to switch context.</source>
        <target state="translated">Możesz użyć paska nawigacyjnego, aby przełączyć kontekst.</target>
        <note />
      </trans-unit>
      <trans-unit id="in_Source">
        <source>in Source</source>
        <target state="translated">w źródle</target>
        <note />
      </trans-unit>
      <trans-unit id="in_Suppression_File">
        <source>in Suppression File</source>
        <target state="translated">w pliku pominięć</target>
        <note />
      </trans-unit>
      <trans-unit id="Remove_Suppression_0">
        <source>Remove Suppression {0}</source>
        <target state="translated">Usuń pominięcie {0}</target>
        <note />
      </trans-unit>
      <trans-unit id="Remove_Suppression">
        <source>Remove Suppression</source>
        <target state="translated">Usuń pominięcie</target>
        <note />
      </trans-unit>
      <trans-unit id="Pending">
        <source>&lt;Pending&gt;</source>
        <target state="translated">&lt;Oczekujące&gt;</target>
        <note />
      </trans-unit>
      <trans-unit id="Awaited_task_returns">
        <source>Awaited task returns</source>
        <target state="translated">Nastąpił powrót po oczekiwaniu na zadanie</target>
        <note />
      </trans-unit>
      <trans-unit id="no_value">
        <source>no value.</source>
        <target state="translated">brak wartości.</target>
        <note />
      </trans-unit>
      <trans-unit id="Note_colon_Tab_twice_to_insert_the_0_snippet">
        <source>Note: Tab twice to insert the '{0}' snippet.</source>
        <target state="translated">Uwaga: naciśnij dwa razy klawisz Tab, aby wstawić fragment kodu „{0}”.</target>
        <note />
      </trans-unit>
      <trans-unit id="Implement_interface_explicitly_with_Dispose_pattern">
        <source>Implement interface explicitly with Dispose pattern</source>
        <target state="translated">Jawnie implementuj interfejs za pomocą wzorca Dispose</target>
        <note />
      </trans-unit>
      <trans-unit id="Implement_interface_with_Dispose_pattern">
        <source>Implement interface with Dispose pattern</source>
        <target state="translated">Implementuj interfejs za pomocą wzorca Dispose</target>
        <note />
      </trans-unit>
      <trans-unit id="Compiler1">
        <source>Compiler</source>
        <target state="translated">Kompilator</target>
        <note />
      </trans-unit>
      <trans-unit id="Edit_and_Continue2">
        <source>Edit and Continue</source>
        <target state="translated">Edytuj i kontynuuj</target>
        <note />
      </trans-unit>
      <trans-unit id="Style">
        <source>Style</source>
        <target state="translated">Styl</target>
        <note />
      </trans-unit>
      <trans-unit id="Suppress_0">
        <source>Suppress {0}</source>
        <target state="translated">Pomiń element {0}</target>
        <note />
      </trans-unit>
      <trans-unit id="Re_triage_0_currently_1">
        <source>Re-triage {0}(currently '{1}')</source>
        <target state="translated">Sklasyfikuj ponownie element {0} (obecnie „{1}”)</target>
        <note />
      </trans-unit>
      <trans-unit id="Argument_cannot_have_a_null_element">
        <source>Argument cannot have a null element.</source>
        <target state="translated">Argument nie może zawierać elementu o wartości null.</target>
        <note />
      </trans-unit>
      <trans-unit id="Argument_cannot_be_empty">
        <source>Argument cannot be empty.</source>
        <target state="translated">Argument nie może być pusty.</target>
        <note />
      </trans-unit>
      <trans-unit id="Reported_diagnostic_with_ID_0_is_not_supported_by_the_analyzer">
        <source>Reported diagnostic with ID '{0}' is not supported by the analyzer.</source>
        <target state="translated">Zgłoszona diagnostyka z identyfikatorem „{0}” nie jest obsługiwana przez analizatora.</target>
        <note />
      </trans-unit>
      <trans-unit id="Computing_fix_all_occurrences_code_fix">
        <source>Computing fix all occurrences code fix...</source>
        <target state="translated">Trwa obliczanie poprawki kodu naprawiającej wszystkie obliczenia...</target>
        <note />
      </trans-unit>
      <trans-unit id="Fix_all_occurrences">
        <source>Fix all occurrences</source>
        <target state="translated">Popraw wszystkie wystąpienia</target>
        <note />
      </trans-unit>
      <trans-unit id="Document">
        <source>Document</source>
        <target state="translated">Dokument</target>
        <note />
      </trans-unit>
      <trans-unit id="Project">
        <source>Project</source>
        <target state="translated">Projekt</target>
        <note />
      </trans-unit>
      <trans-unit id="Solution">
        <source>Solution</source>
        <target state="translated">Rozwiązanie</target>
        <note />
      </trans-unit>
      <trans-unit id="TODO_colon_dispose_managed_state_managed_objects">
        <source>TODO: dispose managed state (managed objects).</source>
        <target state="translated">TODO: wyczyść stan zarządzany (obiekty zarządzane).</target>
        <note />
      </trans-unit>
      <trans-unit id="TODO_colon_set_large_fields_to_null">
        <source>TODO: set large fields to null.</source>
        <target state="translated">TODO: ustaw wartość null dla dużych pól.</target>
        <note />
      </trans-unit>
      <trans-unit id="To_detect_redundant_calls">
        <source>To detect redundant calls</source>
        <target state="translated">Aby wykryć nadmiarowe wywołania</target>
        <note />
      </trans-unit>
      <trans-unit id="Modifying_0_which_contains_a_static_variable_will_prevent_the_debug_session_from_continuing">
        <source>Modifying '{0}' which contains a static variable will prevent the debug session from continuing.</source>
        <target state="translated">Zmodyfikowanie elementu „{0}”, który zawiera zmienną statyczną, uniemożliwi kontynuowanie sesji debugowania.</target>
        <note />
      </trans-unit>
      <trans-unit id="Compiler2">
        <source>Compiler</source>
        <target state="translated">Kompilator</target>
        <note />
      </trans-unit>
      <trans-unit id="Edit_And_Continue">
        <source>Edit And Continue</source>
        <target state="translated">Edytuj i kontynuuj</target>
        <note />
      </trans-unit>
      <trans-unit id="Live">
        <source>Live</source>
        <target state="translated">Na żywo</target>
        <note />
      </trans-unit>
      <trans-unit id="enum_value">
        <source>enum value</source>
        <target state="translated">wartość wyliczenia</target>
        <note>{Locked="enum"} "enum" is a C#/VB keyword and should not be localized.</note>
      </trans-unit>
      <trans-unit id="const_field">
        <source>const field</source>
        <target state="translated">pole stałej</target>
        <note>{Locked="const"} "const" is a C#/VB keyword and should not be localized.</note>
      </trans-unit>
      <trans-unit id="method">
        <source>method</source>
        <target state="translated">metoda</target>
        <note />
      </trans-unit>
      <trans-unit id="operator_">
        <source>operator</source>
        <target state="translated">operator</target>
        <note />
      </trans-unit>
      <trans-unit id="constructor">
        <source>constructor</source>
        <target state="translated">konstruktor</target>
        <note />
      </trans-unit>
      <trans-unit id="auto_property">
        <source>auto-property</source>
        <target state="translated">właściwość automatyczna</target>
        <note />
      </trans-unit>
      <trans-unit id="property_">
        <source>property</source>
        <target state="translated">właściwość</target>
        <note />
      </trans-unit>
      <trans-unit id="event_accessor">
        <source>event accessor</source>
        <target state="translated">metoda dostępu do zdarzeń</target>
        <note />
      </trans-unit>
      <trans-unit id="type_constraint">
        <source>type constraint</source>
        <target state="translated">ograniczenie typu</target>
        <note />
      </trans-unit>
      <trans-unit id="type_parameter">
        <source>type parameter</source>
        <target state="translated">parametr typu</target>
        <note />
      </trans-unit>
      <trans-unit id="attribute">
        <source>attribute</source>
        <target state="translated">atrybut</target>
        <note />
      </trans-unit>
      <trans-unit id="Use_auto_property">
        <source>Use auto property</source>
        <target state="translated">Użyj właściwości automatycznej</target>
        <note />
      </trans-unit>
      <trans-unit id="Replace_0_and_1_with_property">
        <source>Replace '{0}' and '{1}' with property</source>
        <target state="translated">Zastąp elementy „{0}” i „{1}” właściwością</target>
        <note />
      </trans-unit>
      <trans-unit id="Replace_0_with_property">
        <source>Replace '{0}' with property</source>
        <target state="translated">Zastąp element „{0}” właściwością</target>
        <note />
      </trans-unit>
      <trans-unit id="Method_referenced_implicitly">
        <source>Method referenced implicitly</source>
        <target state="translated">Metoda z odwołaniem utworzonym niejawnie</target>
        <note />
      </trans-unit>
      <trans-unit id="Generate_type_0">
        <source>Generate type '{0}'</source>
        <target state="translated">Generuj typ „{0}”</target>
        <note />
      </trans-unit>
      <trans-unit id="Generate_0_1">
        <source>Generate {0} '{1}'</source>
        <target state="translated">Generuj element {0} „{1}”</target>
        <note />
      </trans-unit>
      <trans-unit id="Change_0_to_1">
        <source>Change '{0}' to '{1}'.</source>
        <target state="translated">Zmień element „{0}” na „{1}”.</target>
        <note />
      </trans-unit>
      <trans-unit id="Non_invoked_method_cannot_be_replaced_with_property">
        <source>Non-invoked method cannot be replaced with property.</source>
        <target state="translated">Niewywołanej metody nie można zastąpić właściwością.</target>
        <note />
      </trans-unit>
      <trans-unit id="Only_methods_with_a_single_argument_which_is_not_an_out_variable_declaration_can_be_replaced_with_a_property">
        <source>Only methods with a single argument, which is not an out variable declaration, can be replaced with a property.</source>
        <target state="translated">Tylko metody z pojedynczym argumentem, który nie jest deklaracją zmiennej wyjściowej, można zastąpić właściwością.</target>
        <note />
      </trans-unit>
      <trans-unit id="Roslyn_HostError">
        <source>Roslyn.HostError</source>
        <target state="translated">Roslyn.HostError</target>
        <note />
      </trans-unit>
      <trans-unit id="An_instance_of_analyzer_0_cannot_be_created_from_1_colon_2">
        <source>An instance of analyzer {0} cannot be created from {1}: {2}.</source>
        <target state="translated">Nie można utworzyć wystąpienia analizatora {0} z elementu {1}: {2}.</target>
        <note />
      </trans-unit>
      <trans-unit id="The_assembly_0_does_not_contain_any_analyzers">
        <source>The assembly {0} does not contain any analyzers.</source>
        <target state="translated">Zestaw {0} nie zawiera żadnych analizatorów.</target>
        <note />
      </trans-unit>
      <trans-unit id="Unable_to_load_Analyzer_assembly_0_colon_1">
        <source>Unable to load Analyzer assembly {0}: {1}</source>
        <target state="translated">Nie można załadować zestawu analizatora {0}: {1}</target>
        <note />
      </trans-unit>
      <trans-unit id="Make_method_synchronous">
        <source>Make method synchronous</source>
        <target state="translated">Ustaw metodę jako synchroniczną</target>
        <note />
      </trans-unit>
      <trans-unit id="Add_this_or_Me_qualification">
        <source>Add 'this' or 'Me' qualification.</source>
        <target state="translated">Dodaj kwalifikacje „this” lub „Me”.</target>
        <note />
      </trans-unit>
      <trans-unit id="Fix_Name_Violation_colon_0">
        <source>Fix Name Violation: {0}</source>
        <target state="translated">Napraw naruszenie nazwy: {0}</target>
        <note />
      </trans-unit>
      <trans-unit id="Naming_rule_violation_0">
        <source>Naming rule violation: {0}</source>
        <target state="translated">Naruszenie reguły nazewnictwa: {0}</target>
        <note>{0} is the rule title, {1} is the way in which the rule was violated</note>
      </trans-unit>
      <trans-unit id="Naming_Styles">
        <source>Naming Styles</source>
        <target state="translated">Style nazewnictwa</target>
        <note />
      </trans-unit>
      <trans-unit id="from_0">
        <source>from {0}</source>
        <target state="translated">z {0}</target>
        <note />
      </trans-unit>
      <trans-unit id="Find_and_install_latest_version">
        <source>Find and install latest version</source>
        <target state="translated">Znajdź i zainstaluj najnowszą wersję</target>
        <note />
      </trans-unit>
      <trans-unit id="Use_local_version_0">
        <source>Use local version '{0}'</source>
        <target state="translated">Użyj wersji lokalnej „{0}”</target>
        <note />
      </trans-unit>
      <trans-unit id="Use_locally_installed_0_version_1_This_version_used_in_colon_2">
        <source>Use locally installed '{0}' version '{1}'
This version used in: {2}</source>
        <target state="translated">Użyj lokalnie zainstalowanej wersji „{0}” („{1}”)
Ta wersja jest używana wersja: {2}</target>
        <note />
      </trans-unit>
      <trans-unit id="Find_and_install_latest_version_of_0">
        <source>Find and install latest version of '{0}'</source>
        <target state="translated">Znajdź i zainstaluj najnowszą wersję pakietu „{0}”</target>
        <note />
      </trans-unit>
      <trans-unit id="Install_with_package_manager">
        <source>Install with package manager...</source>
        <target state="translated">Zainstaluj za pomocą menedżera pakietów...</target>
        <note />
      </trans-unit>
      <trans-unit id="Install_0_1">
        <source>Install '{0} {1}'</source>
        <target state="translated">Zainstaluj pakiet „{0} {1}”</target>
        <note />
      </trans-unit>
      <trans-unit id="Install_version_0">
        <source>Install version '{0}'</source>
        <target state="translated">Zainstaluj wersję „{0}”</target>
        <note />
      </trans-unit>
      <trans-unit id="Generate_variable_0">
        <source>Generate variable '{0}'</source>
        <target state="translated">Generuj zmienną „{0}”</target>
        <note />
      </trans-unit>
      <trans-unit id="Classes">
        <source>Classes</source>
        <target state="translated">Klasy</target>
        <note />
      </trans-unit>
      <trans-unit id="Constants">
        <source>Constants</source>
        <target state="translated">Stałe</target>
        <note />
      </trans-unit>
      <trans-unit id="Delegates">
        <source>Delegates</source>
        <target state="translated">Delegaci</target>
        <note />
      </trans-unit>
      <trans-unit id="Enums">
        <source>Enums</source>
        <target state="translated">Wyliczenia</target>
        <note />
      </trans-unit>
      <trans-unit id="Events">
        <source>Events</source>
        <target state="translated">Zdarzenia</target>
        <note />
      </trans-unit>
      <trans-unit id="Extension_methods">
        <source>Extension methods</source>
        <target state="translated">Metody rozszerzenia</target>
        <note />
      </trans-unit>
      <trans-unit id="Fields">
        <source>Fields</source>
        <target state="translated">Pola</target>
        <note />
      </trans-unit>
      <trans-unit id="Interfaces">
        <source>Interfaces</source>
        <target state="translated">Interfejsy</target>
        <note />
      </trans-unit>
      <trans-unit id="Locals">
        <source>Locals</source>
        <target state="translated">Elementy lokalne</target>
        <note />
      </trans-unit>
      <trans-unit id="Methods">
        <source>Methods</source>
        <target state="translated">Metody</target>
        <note />
      </trans-unit>
      <trans-unit id="Modules">
        <source>Modules</source>
        <target state="translated">Moduły</target>
        <note />
      </trans-unit>
      <trans-unit id="Namespaces">
        <source>Namespaces</source>
        <target state="translated">Przestrzenie nazw</target>
        <note />
      </trans-unit>
      <trans-unit id="Properties">
        <source>Properties</source>
        <target state="translated">Właściwości</target>
        <note />
      </trans-unit>
      <trans-unit id="Structures">
        <source>Structures</source>
        <target state="translated">Struktury</target>
        <note />
      </trans-unit>
      <trans-unit id="Parameters_colon">
        <source>Parameters:</source>
        <target state="translated">Parametry:</target>
        <note />
      </trans-unit>
      <trans-unit id="Add_missing_cases">
        <source>Add missing cases</source>
        <target state="translated">Dodaj brakujące przypadki</target>
        <note />
      </trans-unit>
      <trans-unit id="Add_both">
        <source>Add both</source>
        <target state="translated">Dodaj oba</target>
        <note />
      </trans-unit>
      <trans-unit id="Add_default_case">
        <source>Add default case</source>
        <target state="translated">Dodaj przypadek domyślny</target>
        <note />
      </trans-unit>
      <trans-unit id="Variadic_SignatureHelpItem_must_have_at_least_one_parameter">
        <source>Variadic SignatureHelpItem must have at least one parameter.</source>
        <target state="translated">Element SignatureHelpItem ze zmienną liczbą argumentów musi mieć co najmniej jeden parametr.</target>
        <note />
      </trans-unit>
      <trans-unit id="Add_braces">
        <source>Add braces</source>
        <target state="translated">Dodaj nawiasy klamrowe</target>
        <note />
      </trans-unit>
      <trans-unit id="Replace_0_with_method">
        <source>Replace '{0}' with method</source>
        <target state="translated">Zastąp element „{0}” metodą</target>
        <note />
      </trans-unit>
      <trans-unit id="Replace_0_with_methods">
        <source>Replace '{0}' with methods</source>
        <target state="translated">Zastąp element „{0}” metodami</target>
        <note />
      </trans-unit>
      <trans-unit id="Property_referenced_implicitly">
        <source>Property referenced implicitly</source>
        <target state="translated">Niejawne odwołanie do właściwości</target>
        <note />
      </trans-unit>
      <trans-unit id="Property_cannot_safely_be_replaced_with_a_method_call">
        <source>Property cannot safely be replaced with a method call</source>
        <target state="translated">Właściwości nie można bezpiecznie zastąpić wywołaniem metody</target>
        <note />
      </trans-unit>
      <trans-unit id="Convert_to_interpolated_string">
        <source>Convert to interpolated string</source>
        <target state="translated">Konwertuj na ciąg interpolowany</target>
        <note />
      </trans-unit>
      <trans-unit id="Move_type_to_0">
        <source>Move type to {0}</source>
        <target state="translated">Przenieś typ do {0}</target>
        <note />
      </trans-unit>
      <trans-unit id="Rename_file_to_0">
        <source>Rename file to {0}</source>
        <target state="translated">Zmień nazwę pliku na {0}</target>
        <note />
      </trans-unit>
      <trans-unit id="Rename_type_to_0">
        <source>Rename type to {0}</source>
        <target state="translated">Zmień nazwę typu na {0}</target>
        <note />
      </trans-unit>
      <trans-unit id="Remove_tag">
        <source>Remove tag</source>
        <target state="translated">Usuń tag</target>
        <note />
      </trans-unit>
      <trans-unit id="Add_missing_param_nodes">
        <source>Add missing param nodes</source>
        <target state="translated">Dodaj brakujące węzły parametrów</target>
        <note />
      </trans-unit>
      <trans-unit id="Make_containing_scope_async">
        <source>Make containing scope async</source>
        <target state="translated">Ustaw zawierający zakres jako asynchroniczny</target>
        <note />
      </trans-unit>
      <trans-unit id="Make_containing_scope_async_return_Task">
        <source>Make containing scope async (return Task)</source>
        <target state="translated">Ustaw zawierający zakres jako asynchroniczny (zwróć typ Task)</target>
        <note />
      </trans-unit>
      <trans-unit id="paren_Unknown_paren">
        <source>(Unknown)</source>
        <target state="translated">(Nieznany)</target>
        <note />
      </trans-unit>
      <trans-unit id="Implement_Abstract_Class">
        <source>Implement Abstract Class</source>
        <target state="translated">Implementuj klasę abstrakcyjną</target>
        <note />
      </trans-unit>
      <trans-unit id="Use_framework_type">
        <source>Use framework type</source>
        <target state="translated">Użyj typu platformy</target>
        <note />
      </trans-unit>
      <trans-unit id="Install_package_0">
        <source>Install package '{0}'</source>
        <target state="translated">Zainstaluj pakiet „{0}“</target>
        <note />
      </trans-unit>
      <trans-unit id="Object_initialization_can_be_simplified">
        <source>Object initialization can be simplified</source>
        <target state="translated">Inicjowanie obiektu można uprościć</target>
        <note />
      </trans-unit>
      <trans-unit id="Use_throw_expression">
        <source>Use 'throw' expression</source>
        <target state="translated">Użyj wyrażenia „throw“</target>
        <note />
      </trans-unit>
      <trans-unit id="project_0">
        <source>project {0}</source>
        <target state="translated">projekt {0}</target>
        <note />
      </trans-unit>
      <trans-unit id="Inline_variable_declaration">
        <source>Inline variable declaration</source>
        <target state="translated">Deklaracja zmiennej wbudowanej</target>
        <note />
      </trans-unit>
      <trans-unit id="Use_pattern_matching">
        <source>Use pattern matching</source>
        <target state="translated">Użyj dopasowywania wzorców</target>
        <note />
      </trans-unit>
      <trans-unit id="Use_expression_body_for_methods">
        <source>Use expression body for methods</source>
        <target state="translated">Użyj treści wyrażenia dla metod</target>
        <note />
      </trans-unit>
      <trans-unit id="Use_block_body_for_methods">
        <source>Use block body for methods</source>
        <target state="translated">Użyj treści bloku dla metod</target>
        <note />
      </trans-unit>
      <trans-unit id="Use_block_body_for_accessors">
        <source>Use block body for accessors</source>
        <target state="translated">Użyj treści bloku dla metod dostępu</target>
        <note />
      </trans-unit>
      <trans-unit id="Use_block_body_for_constructors">
        <source>Use block body for constructors</source>
        <target state="translated">Użyj treści bloku dla konstruktorów</target>
        <note />
      </trans-unit>
      <trans-unit id="Use_block_body_for_indexers">
        <source>Use block body for indexers</source>
        <target state="translated">Użyj treści bloku dla indeksatorów</target>
        <note />
      </trans-unit>
      <trans-unit id="Use_block_body_for_operators">
        <source>Use block body for operators</source>
        <target state="translated">Użyj treści bloku dla operatorów</target>
        <note />
      </trans-unit>
      <trans-unit id="Use_block_body_for_properties">
        <source>Use block body for properties</source>
        <target state="translated">Użyj treści bloku dla właściwości</target>
        <note />
      </trans-unit>
      <trans-unit id="Use_expression_body_for_accessors">
        <source>Use expression body for accessors</source>
        <target state="translated">Użyj treści wyrażenia dla metod dostępu</target>
        <note />
      </trans-unit>
      <trans-unit id="Use_expression_body_for_constructors">
        <source>Use expression body for constructors</source>
        <target state="translated">Użyj treści wyrażenia dla konstruktorów</target>
        <note />
      </trans-unit>
      <trans-unit id="Use_expression_body_for_indexers">
        <source>Use expression body for indexers</source>
        <target state="translated">Użyj treści wyrażenia dla indeksatorów</target>
        <note />
      </trans-unit>
      <trans-unit id="Use_expression_body_for_operators">
        <source>Use expression body for operators</source>
        <target state="translated">Użyj treści wyrażenia dla operatorów</target>
        <note />
      </trans-unit>
      <trans-unit id="Use_expression_body_for_properties">
        <source>Use expression body for properties</source>
        <target state="translated">Użyj treści wyrażenia dla właściwości</target>
        <note />
      </trans-unit>
      <trans-unit id="Fully_qualify_0">
        <source>Fully qualify '{0}'</source>
        <target state="translated">W pełni kwalifikowany element „{0}”</target>
        <note />
      </trans-unit>
      <trans-unit id="Remove_reference_to_0">
        <source>Remove reference to '{0}'.</source>
        <target state="translated">Usuń odwołanie do elementu „{0}”.</target>
        <note />
      </trans-unit>
      <trans-unit id="Keywords">
        <source>Keywords</source>
        <target state="translated">Słowa kluczowe</target>
        <note />
      </trans-unit>
      <trans-unit id="Snippets">
        <source>Snippets</source>
        <target state="translated">Fragmenty kodu</target>
        <note />
      </trans-unit>
      <trans-unit id="All_lowercase">
        <source>All lowercase</source>
        <target state="translated">Same małe litery</target>
        <note />
      </trans-unit>
      <trans-unit id="All_uppercase">
        <source>All uppercase</source>
        <target state="translated">Same wielkie litery</target>
        <note />
      </trans-unit>
      <trans-unit id="First_word_capitalized">
        <source>First word capitalized</source>
        <target state="translated">Pierwsze słowo wielką literą</target>
        <note />
      </trans-unit>
      <trans-unit id="Pascal_Case">
        <source>Pascal Case</source>
        <target state="translated">PascalCase</target>
        <note />
      </trans-unit>
      <trans-unit id="Collection_initialization_can_be_simplified">
        <source>Collection initialization can be simplified</source>
        <target state="translated">Można uprościć inicjowanie kolekcji</target>
        <note />
      </trans-unit>
      <trans-unit id="Use_coalesce_expression">
        <source>Use coalesce expression</source>
        <target state="translated">Użyj wyrażenia łączącego</target>
        <note />
      </trans-unit>
      <trans-unit id="Use_null_propagation">
        <source>Use null propagation</source>
        <target state="translated">Użyj propagacji wartości null</target>
        <note />
      </trans-unit>
      <trans-unit id="Variable_declaration_can_be_inlined">
        <source>Variable declaration can be inlined</source>
        <target state="translated">Deklaracja zmiennej może być śródwierszowa</target>
        <note />
      </trans-unit>
      <trans-unit id="Null_check_can_be_simplified">
        <source>Null check can be simplified</source>
        <target state="translated">Można uprościć test na obecność wartości null</target>
        <note />
      </trans-unit>
      <trans-unit id="Simplify_collection_initialization">
        <source>Simplify collection initialization</source>
        <target state="translated">Uprość inicjowanie kolekcji</target>
        <note />
      </trans-unit>
      <trans-unit id="Simplify_object_initialization">
        <source>Simplify object initialization</source>
        <target state="translated">Uprość inicjowanie obiektów</target>
        <note />
      </trans-unit>
      <trans-unit id="Prefer_explicitly_provided_tuple_element_name">
        <source>Prefer explicitly provided tuple element name</source>
        <target state="translated">Preferuj jawnie podaną nazwę elementu krotki</target>
        <note />
      </trans-unit>
      <trans-unit id="Use_explicitly_provided_tuple_name">
        <source>Use explicitly provided tuple name</source>
        <target state="translated">Użyj jawnie podanej nazwy krotki</target>
        <note />
      </trans-unit>
      <trans-unit id="Remove_document_0">
        <source>Remove document '{0}'</source>
        <target state="translated">Usuń dokument „{0}”</target>
        <note />
      </trans-unit>
      <trans-unit id="Add_document_0">
        <source>Add document '{0}'</source>
        <target state="translated">Dodaj dokument „{0}”</target>
        <note />
      </trans-unit>
      <trans-unit id="Add_argument_name_0">
        <source>Add argument name '{0}'</source>
        <target state="translated">Dodaj nazwę argumentu „{0}”</target>
        <note />
      </trans-unit>
      <trans-unit id="Take_0">
        <source>Take '{0}'</source>
        <target state="translated">Przyjmij „{0}”</target>
        <note />
      </trans-unit>
      <trans-unit id="Take_both">
        <source>Take both</source>
        <target state="translated">Przyjmij oba</target>
        <note />
      </trans-unit>
      <trans-unit id="Take_bottom">
        <source>Take bottom</source>
        <target state="translated">Przyjmij dół</target>
        <note />
      </trans-unit>
      <trans-unit id="Take_top">
        <source>Take top</source>
        <target state="translated">Przyjmij górę</target>
        <note />
      </trans-unit>
      <trans-unit id="Remove_unused_variable">
        <source>Remove unused variable</source>
        <target state="translated">Usuń nieużywaną zmienną</target>
        <note />
      </trans-unit>
      <trans-unit id="Convert_to_binary">
        <source>Convert to binary</source>
        <target state="translated">Konwertuj na wartość binarną</target>
        <note />
      </trans-unit>
      <trans-unit id="Convert_to_decimal">
        <source>Convert to decimal</source>
        <target state="translated">Konwertuj na wartość dziesiętną</target>
        <note />
      </trans-unit>
      <trans-unit id="Convert_to_hex">
        <source>Convert to hex</source>
        <target state="translated">Konwertuj na wartość szesnastkową</target>
        <note />
      </trans-unit>
      <trans-unit id="Separate_thousands">
        <source>Separate thousands</source>
        <target state="translated">Oddziel tysiące</target>
        <note />
      </trans-unit>
      <trans-unit id="Separate_words">
        <source>Separate words</source>
        <target state="translated">Oddziel wyrazy</target>
        <note />
      </trans-unit>
      <trans-unit id="Separate_nibbles">
        <source>Separate nibbles</source>
        <target state="translated">Oddziel półbajty</target>
        <note />
      </trans-unit>
      <trans-unit id="Remove_separators">
        <source>Remove separators</source>
        <target state="translated">Usuń separatory</target>
        <note />
      </trans-unit>
      <trans-unit id="Add_parameter_to_0">
        <source>Add parameter to '{0}'</source>
        <target state="translated">Dodaj parametr do elementu „{0}”</target>
        <note />
      </trans-unit>
      <trans-unit id="Generate_constructor">
        <source>Generate constructor...</source>
        <target state="translated">Generuj konstruktor...</target>
        <note />
      </trans-unit>
      <trans-unit id="Pick_members_to_be_used_as_constructor_parameters">
        <source>Pick members to be used as constructor parameters</source>
        <target state="translated">Wybierz składowe, które zostaną użyte jako parametry konstruktora</target>
        <note />
      </trans-unit>
      <trans-unit id="Pick_members_to_be_used_in_Equals_GetHashCode">
        <source>Pick members to be used in Equals/GetHashCode</source>
        <target state="translated">Wybierz składowe, które zostaną użyte w elementach Equals/GetHashCode</target>
        <note />
      </trans-unit>
      <trans-unit id="Changes_to_expression_trees_may_result_in_behavior_changes_at_runtime">
        <source>Changes to expression trees may result in behavior changes at runtime</source>
        <target state="translated">Wprowadzenie zmian w drzewach wyrażeń może spowodować zmiany zachowania w czasie wykonywania</target>
        <note />
      </trans-unit>
      <trans-unit id="Generate_overrides">
        <source>Generate overrides...</source>
        <target state="translated">Generuj zastąpienia...</target>
        <note />
      </trans-unit>
      <trans-unit id="Pick_members_to_override">
        <source>Pick members to override</source>
        <target state="translated">Wybierz składowe do zastąpienia</target>
        <note />
      </trans-unit>
      <trans-unit id="Add_null_check">
        <source>Add null check</source>
        <target state="translated">Dodaj sprawdzenie wartości null</target>
        <note />
      </trans-unit>
      <trans-unit id="Add_string_IsNullOrEmpty_check">
        <source>Add 'string.IsNullOrEmpty' check</source>
        <target state="translated">Dodaj sprawdzenie elementu „string.IsNullOrEmpty”</target>
        <note />
      </trans-unit>
      <trans-unit id="Add_string_IsNullOrWhiteSpace_check">
        <source>Add 'string.IsNullOrWhiteSpace' check</source>
        <target state="translated">Dodaj sprawdzenie elementu „string.IsNullOrWhiteSpace”</target>
        <note />
      </trans-unit>
      <trans-unit id="Create_and_initialize_field_0">
        <source>Create and initialize field '{0}'</source>
        <target state="translated">Utwórz i zainicjuj pole „{0}”</target>
        <note />
      </trans-unit>
      <trans-unit id="Create_and_initialize_property_0">
        <source>Create and initialize property '{0}'</source>
        <target state="translated">Utwórz i zainicjuj właściwość „{0}”</target>
        <note />
      </trans-unit>
      <trans-unit id="Initialize_field_0">
        <source>Initialize field '{0}'</source>
        <target state="translated">Inicjuj pole „{0}”</target>
        <note />
      </trans-unit>
      <trans-unit id="Initialize_property_0">
        <source>Initialize property '{0}'</source>
        <target state="translated">Inicjuj właściwość „{0}”</target>
        <note />
      </trans-unit>
      <trans-unit id="Add_null_checks">
        <source>Add null checks</source>
        <target state="translated">Dodaj sprawdzenia wartości null</target>
        <note />
      </trans-unit>
      <trans-unit id="Generate_operators">
        <source>Generate operators</source>
        <target state="translated">Generuj operatory</target>
        <note />
      </trans-unit>
      <trans-unit id="Implement_0">
        <source>Implement {0}</source>
        <target state="translated">Implementuj {0}</target>
        <note />
      </trans-unit>
      <trans-unit id="Simplify_default_expression">
        <source>Simplify 'default' expression</source>
        <target state="translated">Uprość wyrażenie „default”</target>
        <note />
      </trans-unit>
      <trans-unit id="default_expression_can_be_simplified">
        <source>'default' expression can be simplified</source>
        <target state="translated">'Wyrażenie „default” można uprościć</target>
        <note />
      </trans-unit>
      <trans-unit id="Format_string_contains_invalid_placeholder">
        <source>Format string contains invalid placeholder</source>
        <target state="translated">Ciąg formatu zawiera nieprawidłowy symbol zastępczy</target>
        <note />
      </trans-unit>
      <trans-unit id="Invalid_format_string">
        <source>Invalid format string</source>
        <target state="translated">Nieprawidłowy ciąg formatu</target>
        <note />
      </trans-unit>
      <trans-unit id="Use_inferred_member_name">
        <source>Use inferred member name</source>
        <target state="translated">Użyj nazwy wywnioskowanego elementu członkowskiego</target>
        <note />
      </trans-unit>
      <trans-unit id="Member_name_can_be_simplified">
        <source>Member name can be simplified</source>
        <target state="translated">Nazwę składowej można uprościć</target>
        <note />
      </trans-unit>
      <trans-unit id="Reported_diagnostic_0_has_a_source_location_in_file_1_which_is_not_part_of_the_compilation_being_analyzed">
        <source>Reported diagnostic '{0}' has a source location in file '{1}', which is not part of the compilation being analyzed.</source>
        <target state="translated">Lokalizacja źródłowa zgłoszonych danych diagnostycznych „{0}” znajduje się w pliku „{1}”, który nie jest częścią analizowanej kompilacji.</target>
        <note />
      </trans-unit>
      <trans-unit id="Reported_diagnostic_0_has_a_source_location_1_in_file_2_which_is_outside_of_the_given_file">
        <source>Reported diagnostic '{0}' has a source location '{1}' in file '{2}', which is outside of the given file.</source>
        <target state="translated">Zgłoszone dane diagnostyczne „{0}” mają lokalizację źródłową „{1}” w pliku „{2}”, który jest spoza podanego pliku.</target>
        <note />
      </trans-unit>
      <trans-unit id="Unreachable_code_detected">
        <source>Unreachable code detected</source>
        <target state="translated">Wykryto nieosiągalny kod</target>
        <note />
      </trans-unit>
      <trans-unit id="Remove_unreachable_code">
        <source>Remove unreachable code</source>
        <target state="translated">Usuń nieosiągalny kod</target>
        <note />
      </trans-unit>
      <trans-unit id="Modifiers_are_not_ordered">
        <source>Modifiers are not ordered</source>
        <target state="translated">Modyfikatory nie są uporządkowane</target>
        <note />
      </trans-unit>
      <trans-unit id="Order_modifiers">
        <source>Order modifiers</source>
        <target state="translated">Uporządkuj modyfikatory</target>
        <note />
      </trans-unit>
      <trans-unit id="in_0_project_1">
        <source>in {0} (project {1})</source>
        <target state="translated">w {0} (projekt {1})</target>
        <note />
      </trans-unit>
      <trans-unit id="Accessibility_modifiers_required">
        <source>Accessibility modifiers required</source>
        <target state="translated">Wymagane modyfikatory dostępności</target>
        <note />
      </trans-unit>
      <trans-unit id="Add_accessibility_modifiers">
        <source>Add accessibility modifiers</source>
        <target state="translated">Dodaj modyfikatory dostępności</target>
        <note />
      </trans-unit>
      <trans-unit id="Use_local_function">
        <source>Use local function</source>
        <target state="translated">Użyj funkcji lokalnej</target>
        <note />
      </trans-unit>
      <trans-unit id="Warning_colon_Declaration_changes_scope_and_may_change_meaning">
        <source>Warning: Declaration changes scope and may change meaning.</source>
        <target state="translated">Ostrzeżenie: deklaracja zmienia zakres i może zmienić znaczenie.</target>
        <note />
      </trans-unit>
      <trans-unit id="Move_declaration_near_reference">
        <source>Move declaration near reference</source>
        <target state="translated">Przenieś deklarację blisko odwołania</target>
        <note />
      </trans-unit>
      <trans-unit id="Convert_to_full_property">
        <source>Convert to full property</source>
        <target state="translated">Konwertuj na pełną właściwość</target>
        <note />
      </trans-unit>
      <trans-unit id="Generate_constructor_in_0_without_fields">
        <source>Generate constructor in '{0}' (without fields)</source>
        <target state="translated">Generowanie konstruktora w „{0}” (bez pól)</target>
        <note />
      </trans-unit>
      <trans-unit id="Add_file_banner">
        <source>Add file banner</source>
        <target state="translated">Dodaj transparent pliku</target>
        <note />
      </trans-unit>
      <trans-unit id="Warning_Method_overrides_symbol_from_metadata">
        <source>Warning: Method overrides symbol from metadata</source>
        <target state="translated">Ostrzeżenie: metoda zastępuje symbol z metadanych</target>
        <note />
      </trans-unit>
      <trans-unit id="Use_0">
        <source>Use {0}</source>
        <target state="translated">Użyj {0}</target>
        <note />
      </trans-unit>
      <trans-unit id="Switching_between_lambda_and_local_function_will_prevent_the_debug_session_from_continuing">
        <source>Switching between a lambda and a local function will prevent the debug session from continuing.</source>
        <target state="translated">Przełączanie między wyrażeniem lambda a funkcją lokalną uniemożliwi kontynuowanie sesji debugowania.</target>
        <note />
      </trans-unit>
      <trans-unit id="Deconstruct_variable_declaration">
        <source>Deconstruct variable declaration</source>
        <target state="translated">Zdekonstruuj deklarację zmiennej</target>
        <note />
      </trans-unit>
      <trans-unit id="Variable_declaration_can_be_deconstructed">
        <source>Variable declaration can be deconstructed</source>
        <target state="translated">Deklaracja zmiennej może zostać zdekonstruowana</target>
        <note />
      </trans-unit>
      <trans-unit id="Add_argument_name_0_including_trailing_arguments">
        <source>Add argument name '{0}' (including trailing arguments)</source>
        <target state="translated">Dodaj nazwę argumentu „{0}” (w tym końcowe argumenty)</target>
        <note />
      </trans-unit>
      <trans-unit id="Using_readonly_structs_will_prevent_the_debug_session_from_continuing">
        <source>Using readonly structs will prevent the debug session from continuing.</source>
        <target state="translated">Używanie struktur tylko do odczytu uniemożliwi kontynuowanie sesji debugowania.</target>
        <note />
      </trans-unit>
      <trans-unit id="Using_ref_structs_will_prevent_the_debug_session_from_continuing">
        <source>Using ref structs will prevent the debug session from continuing.</source>
        <target state="translated">Używanie struktur ref uniemożliwi kontynuowanie sesji debugowania.</target>
        <note />
      </trans-unit>
      <trans-unit id="Using_readonly_references_will_prevent_the_debug_session_from_continuing">
        <source>Using readonly references will prevent the debug session from continuing.</source>
        <target state="translated">Używanie odwołań tylko do odczytu uniemożliwi kontynuowanie sesji debugowania.</target>
        <note />
      </trans-unit>
      <trans-unit id="local_function">
        <source>local function</source>
        <target state="translated">funkcja lokalna</target>
        <note />
      </trans-unit>
      <trans-unit id="indexer_">
        <source>indexer</source>
        <target state="translated">indeksator</target>
        <note />
      </trans-unit>
      <trans-unit id="Parentheses_can_be_removed">
        <source>Parentheses can be removed</source>
        <target state="translated">Nawiasy można usunąć</target>
        <note />
      </trans-unit>
      <trans-unit id="Remove_unnecessary_parentheses">
        <source>Remove unnecessary parentheses</source>
        <target state="translated">Usuń niepotrzebne nawiasy</target>
        <note />
      </trans-unit>
      <trans-unit id="Add_parentheses_for_clarity">
        <source>Add parentheses for clarity</source>
        <target state="translated">Dodaj nawiasy w celu zapewnienia jednoznaczności</target>
        <note />
      </trans-unit>
      <trans-unit id="Parentheses_should_be_added_for_clarity">
        <source>Parentheses should be added for clarity</source>
        <target state="translated">Nawiasy powinny zostać dodane w celu zapewnienia jednoznaczności</target>
        <note />
      </trans-unit>
      <trans-unit id="Alias_ambiguous_type_0">
        <source>Alias ambiguous type '{0}'</source>
        <target state="translated">Niejednoznaczny typ aliasu „{0}”</target>
        <note />
      </trans-unit>
      <trans-unit id="Warning_colon_Collection_was_modified_during_iteration">
        <source>Warning: Collection was modified during iteration.</source>
        <target state="translated">Ostrzeżenie: kolekcja została zmodyfikowana podczas iteracji.</target>
        <note />
      </trans-unit>
      <trans-unit id="Warning_colon_Iteration_variable_crossed_function_boundary">
        <source>Warning: Iteration variable crossed function boundary.</source>
        <target state="translated">Ostrzeżenie: zmienna iteracji przekroczyła granicę funkcji.</target>
        <note />
      </trans-unit>
      <trans-unit id="Warning_colon_Collection_may_be_modified_during_iteration">
        <source>Warning: Collection may be modified during iteration.</source>
        <target state="translated">Ostrzeżenie: kolekcja mogła zostać zmodyfikowana podczas iteracji.</target>
        <note />
      </trans-unit>
      <trans-unit id="Add_readonly_modifier">
        <source>Add readonly modifier</source>
        <target state="translated">Dodaj modyfikator tylko do odczytu</target>
        <note />
      </trans-unit>
      <trans-unit id="Make_field_readonly">
        <source>Make field readonly</source>
        <target state="translated">Ustaw pole jako tylko do odczytu</target>
        <note />
      </trans-unit>
      <trans-unit id="Convert_to_conditional_expression">
        <source>Convert to conditional expression</source>
        <target state="translated">Konwertuj na wyrażenie warunkowe</target>
        <note />
      </trans-unit>
      <trans-unit id="updating_usages_in_containing_member">
        <source>updating usages in containing member</source>
        <target state="translated">aktualizowanie użyć w zawierającym elemencie członkowskim</target>
        <note />
      </trans-unit>
      <trans-unit id="updating_usages_in_containing_project">
        <source>updating usages in containing project</source>
        <target state="translated">aktualizowanie użyć w projekcie zawierającym</target>
        <note />
      </trans-unit>
      <trans-unit id="updating_usages_in_containing_type">
        <source>updating usages in containing type</source>
        <target state="translated">aktualizowanie użyć w typie zawierającym</target>
        <note />
      </trans-unit>
      <trans-unit id="updating_usages_in_dependent_projects">
        <source>updating usages in dependent projects</source>
        <target state="translated">aktualizowanie użyć w projektach zależnych</target>
        <note />
      </trans-unit>
      <trans-unit id="using_statement_can_be_simplified">
        <source>'using' statement can be simplified</source>
        <target state="new">'using' statement can be simplified</target>
        <note />
      </trans-unit>
      <trans-unit id="x_y_range_in_reverse_order">
        <source>[x-y] range in reverse order</source>
        <target state="new">[x-y] range in reverse order</target>
        <note>This is an error message shown to the user when they write an invalid Regular Expression. Example: [b-a]</note>
      </trans-unit>
    </body>
  </file>
</xliff>