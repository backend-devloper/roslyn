*REMOVED*Microsoft.CodeAnalysis.VisualBasic.SyntaxExtensions.NormalizeWhitespace(Of TNode)(node As TNode, useDefaultCasing As Boolean, indentation As String = "    ", elasticTrivia As Boolean = False) -> TNode
*REMOVED*Microsoft.CodeAnalysis.VisualBasic.SyntaxExtensions.NormalizeWhitespace(token As Microsoft.CodeAnalysis.SyntaxToken, indentation As String = "    ", elasticTrivia As Boolean = False) -> Microsoft.CodeAnalysis.SyntaxToken
*REMOVED*Microsoft.CodeAnalysis.VisualBasic.VisualBasicCommandLineParser.New(isInteractive As Boolean = False) -> Void
*REMOVED*Microsoft.CodeAnalysis.VisualBasic.VisualBasicCompilationOptions.New(outputKind As Microsoft.CodeAnalysis.OutputKind, moduleName As String = Nothing, mainTypeName As String = Nothing, scriptClassName As String = "Script", globalImports As System.Collections.Generic.IEnumerable(Of Microsoft.CodeAnalysis.VisualBasic.GlobalImport) = Nothing, rootNamespace As String = Nothing, optionStrict As Microsoft.CodeAnalysis.VisualBasic.OptionStrict = Microsoft.CodeAnalysis.VisualBasic.OptionStrict.Off, optionInfer As Boolean = True, optionExplicit As Boolean = True, optionCompareText As Boolean = False, parseOptions As Microsoft.CodeAnalysis.VisualBasic.VisualBasicParseOptions = Nothing, embedVbCoreRuntime As Boolean = False, optimizationLevel As Microsoft.CodeAnalysis.OptimizationLevel = Microsoft.CodeAnalysis.OptimizationLevel.Debug, checkOverflow As Boolean = True, cryptoKeyContainer As String = Nothing, cryptoKeyFile As String = Nothing, cryptoPublicKey As System.Collections.Immutable.ImmutableArray(Of Byte) = Nothing, delaySign As Boolean? = Nothing, platform As Microsoft.CodeAnalysis.Platform = Microsoft.CodeAnalysis.Platform.AnyCpu, generalDiagnosticOption As Microsoft.CodeAnalysis.ReportDiagnostic = Microsoft.CodeAnalysis.ReportDiagnostic.Default, specificDiagnosticOptions As System.Collections.Generic.IEnumerable(Of System.Collections.Generic.KeyValuePair(Of String, Microsoft.CodeAnalysis.ReportDiagnostic)) = Nothing, concurrentBuild As Boolean = True, xmlReferenceResolver As Microsoft.CodeAnalysis.XmlReferenceResolver = Nothing, sourceReferenceResolver As Microsoft.CodeAnalysis.SourceReferenceResolver = Nothing, metadataReferenceResolver As Microsoft.CodeAnalysis.MetadataReferenceResolver = Nothing, assemblyIdentityComparer As Microsoft.CodeAnalysis.AssemblyIdentityComparer = Nothing, strongNameProvider As Microsoft.CodeAnalysis.StrongNameProvider = Nothing) -> Void
Microsoft.CodeAnalysis.VisualBasic.SyntaxExtensions.NormalizeWhitespace(Of TNode)(node As TNode, useDefaultCasing As Boolean, indentation As String = "    ", eol As String = vbCrLf, elasticTrivia As Boolean = False) -> TNode
Microsoft.CodeAnalysis.VisualBasic.SyntaxExtensions.NormalizeWhitespace(Of TNode)(node As TNode, useDefaultCasing As Boolean, indentation As String, elasticTrivia As Boolean) -> TNode
Microsoft.CodeAnalysis.VisualBasic.SyntaxExtensions.NormalizeWhitespace(token As Microsoft.CodeAnalysis.SyntaxToken, indentation As String = "    ", eol As String = vbCrLf, elasticTrivia As Boolean = False, useDefaultCasing As Boolean = False) -> Microsoft.CodeAnalysis.SyntaxToken
Microsoft.CodeAnalysis.VisualBasic.SyntaxExtensions.NormalizeWhitespace(token As Microsoft.CodeAnalysis.SyntaxToken, indentation As String, elasticTrivia As Boolean) -> Microsoft.CodeAnalysis.SyntaxToken
Microsoft.CodeAnalysis.VisualBasic.SyntaxExtensions.NormalizeWhitespace(trivia As Microsoft.CodeAnalysis.SyntaxTriviaList, indentation As String = "    ", eol As String = vbCrLf, elasticTrivia As Boolean = False, useDefaultCasing As Boolean = False) -> Microsoft.CodeAnalysis.SyntaxTriviaList
Microsoft.CodeAnalysis.VisualBasic.VisualBasicCompilationOptions.New(outputKind As Microsoft.CodeAnalysis.OutputKind, moduleName As String = Nothing, mainTypeName As String = Nothing, scriptClassName As String = "Script", globalImports As System.Collections.Generic.IEnumerable(Of Microsoft.CodeAnalysis.VisualBasic.GlobalImport) = Nothing, rootNamespace As String = Nothing, optionStrict As Microsoft.CodeAnalysis.VisualBasic.OptionStrict = Microsoft.CodeAnalysis.VisualBasic.OptionStrict.Off, optionInfer As Boolean = True, optionExplicit As Boolean = True, optionCompareText As Boolean = False, parseOptions As Microsoft.CodeAnalysis.VisualBasic.VisualBasicParseOptions = Nothing, embedVbCoreRuntime As Boolean = False, optimizationLevel As Microsoft.CodeAnalysis.OptimizationLevel = Microsoft.CodeAnalysis.OptimizationLevel.Debug, checkOverflow As Boolean = True, cryptoKeyContainer As String = Nothing, cryptoKeyFile As String = Nothing, cryptoPublicKey As System.Collections.Immutable.ImmutableArray(Of Byte) = Nothing, delaySign As Boolean? = Nothing, platform As Microsoft.CodeAnalysis.Platform = Microsoft.CodeAnalysis.Platform.AnyCpu, generalDiagnosticOption As Microsoft.CodeAnalysis.ReportDiagnostic = Microsoft.CodeAnalysis.ReportDiagnostic.Default, specificDiagnosticOptions As System.Collections.Generic.IEnumerable(Of System.Collections.Generic.KeyValuePair(Of String, Microsoft.CodeAnalysis.ReportDiagnostic)) = Nothing, concurrentBuild As Boolean = True, deterministic As Boolean = False, xmlReferenceResolver As Microsoft.CodeAnalysis.XmlReferenceResolver = Nothing, sourceReferenceResolver As Microsoft.CodeAnalysis.SourceReferenceResolver = Nothing, metadataReferenceResolver As Microsoft.CodeAnalysis.MetadataReferenceResolver = Nothing, assemblyIdentityComparer As Microsoft.CodeAnalysis.AssemblyIdentityComparer = Nothing, strongNameProvider As Microsoft.CodeAnalysis.StrongNameProvider = Nothing) -> Void
Microsoft.CodeAnalysis.VisualBasic.VisualBasicCompilationOptions.New(outputKind As Microsoft.CodeAnalysis.OutputKind, moduleName As String, mainTypeName As String, scriptClassName As String, globalImports As System.Collections.Generic.IEnumerable(Of Microsoft.CodeAnalysis.VisualBasic.GlobalImport), rootNamespace As String, optionStrict As Microsoft.CodeAnalysis.VisualBasic.OptionStrict, optionInfer As Boolean, optionExplicit As Boolean, optionCompareText As Boolean, parseOptions As Microsoft.CodeAnalysis.VisualBasic.VisualBasicParseOptions, embedVbCoreRuntime As Boolean, optimizationLevel As Microsoft.CodeAnalysis.OptimizationLevel, checkOverflow As Boolean, cryptoKeyContainer As String, cryptoKeyFile As String, cryptoPublicKey As System.Collections.Immutable.ImmutableArray(Of Byte), delaySign As Boolean?, platform As Microsoft.CodeAnalysis.Platform, generalDiagnosticOption As Microsoft.CodeAnalysis.ReportDiagnostic, specificDiagnosticOptions As System.Collections.Generic.IEnumerable(Of System.Collections.Generic.KeyValuePair(Of String, Microsoft.CodeAnalysis.ReportDiagnostic)), concurrentBuild As Boolean, xmlReferenceResolver As Microsoft.CodeAnalysis.XmlReferenceResolver, sourceReferenceResolver As Microsoft.CodeAnalysis.SourceReferenceResolver, metadataReferenceResolver As Microsoft.CodeAnalysis.MetadataReferenceResolver, assemblyIdentityComparer As Microsoft.CodeAnalysis.AssemblyIdentityComparer, strongNameProvider As Microsoft.CodeAnalysis.StrongNameProvider) -> Void
Microsoft.CodeAnalysis.VisualBasic.VisualBasicCompilationOptions.New(outputKind As Microsoft.CodeAnalysis.OutputKind, reportSuppressedDiagnostics As Boolean, moduleName As String = Nothing, mainTypeName As String = Nothing, scriptClassName As String = "Script", globalImports As System.Collections.Generic.IEnumerable(Of Microsoft.CodeAnalysis.VisualBasic.GlobalImport) = Nothing, rootNamespace As String = Nothing, optionStrict As Microsoft.CodeAnalysis.VisualBasic.OptionStrict = Microsoft.CodeAnalysis.VisualBasic.OptionStrict.Off, optionInfer As Boolean = True, optionExplicit As Boolean = True, optionCompareText As Boolean = False, parseOptions As Microsoft.CodeAnalysis.VisualBasic.VisualBasicParseOptions = Nothing, embedVbCoreRuntime As Boolean = False, optimizationLevel As Microsoft.CodeAnalysis.OptimizationLevel = Microsoft.CodeAnalysis.OptimizationLevel.Debug, checkOverflow As Boolean = True, cryptoKeyContainer As String = Nothing, cryptoKeyFile As String = Nothing, cryptoPublicKey As System.Collections.Immutable.ImmutableArray(Of Byte) = Nothing, delaySign As Boolean? = Nothing, platform As Microsoft.CodeAnalysis.Platform = Microsoft.CodeAnalysis.Platform.AnyCpu, generalDiagnosticOption As Microsoft.CodeAnalysis.ReportDiagnostic = Microsoft.CodeAnalysis.ReportDiagnostic.Default, specificDiagnosticOptions As System.Collections.Generic.IEnumerable(Of System.Collections.Generic.KeyValuePair(Of String, Microsoft.CodeAnalysis.ReportDiagnostic)) = Nothing, concurrentBuild As Boolean = True, deterministic As Boolean = False, xmlReferenceResolver As Microsoft.CodeAnalysis.XmlReferenceResolver = Nothing, sourceReferenceResolver As Microsoft.CodeAnalysis.SourceReferenceResolver = Nothing, metadataReferenceResolver As Microsoft.CodeAnalysis.MetadataReferenceResolver = Nothing, assemblyIdentityComparer As Microsoft.CodeAnalysis.AssemblyIdentityComparer = Nothing, strongNameProvider As Microsoft.CodeAnalysis.StrongNameProvider = Nothing) -> Void
Microsoft.CodeAnalysis.VisualBasic.VisualBasicCompilationOptions.WithDeterministic(deterministic As Boolean) -> Microsoft.CodeAnalysis.VisualBasic.VisualBasicCompilationOptions
Microsoft.CodeAnalysis.VisualBasic.VisualBasicCompilationOptions.WithReportSuppressedDiagnostics(value As Boolean) -> Microsoft.CodeAnalysis.VisualBasic.VisualBasicCompilationOptions
Microsoft.CodeAnalysis.VisualBasic.VisualBasicParseOptions.WithKind(kind As Microsoft.CodeAnalysis.SourceCodeKind) -> Microsoft.CodeAnalysis.VisualBasic.VisualBasicParseOptions
Overrides Microsoft.CodeAnalysis.VisualBasic.VisualBasicParseOptions.CommonWithKind(kind As Microsoft.CodeAnalysis.SourceCodeKind) -> Microsoft.CodeAnalysis.ParseOptions
Shared Microsoft.CodeAnalysis.VisualBasic.SyntaxFactory.DocumentationComment(ParamArray content As Microsoft.CodeAnalysis.VisualBasic.Syntax.XmlNodeSyntax()) -> Microsoft.CodeAnalysis.VisualBasic.Syntax.DocumentationCommentTriviaSyntax
Shared Microsoft.CodeAnalysis.VisualBasic.SyntaxFactory.XmlCrefAttribute(cref As Microsoft.CodeAnalysis.VisualBasic.Syntax.CrefReferenceSyntax) -> Microsoft.CodeAnalysis.VisualBasic.Syntax.XmlCrefAttributeSyntax
Shared Microsoft.CodeAnalysis.VisualBasic.SyntaxFactory.XmlCrefAttribute(cref As Microsoft.CodeAnalysis.VisualBasic.Syntax.CrefReferenceSyntax, quoteKind As Microsoft.CodeAnalysis.VisualBasic.SyntaxKind) -> Microsoft.CodeAnalysis.VisualBasic.Syntax.XmlCrefAttributeSyntax
Shared Microsoft.CodeAnalysis.VisualBasic.SyntaxFactory.XmlElement(localName As String, content As Microsoft.CodeAnalysis.SyntaxList(Of Microsoft.CodeAnalysis.VisualBasic.Syntax.XmlNodeSyntax)) -> Microsoft.CodeAnalysis.VisualBasic.Syntax.XmlElementSyntax
Shared Microsoft.CodeAnalysis.VisualBasic.SyntaxFactory.XmlElement(name As Microsoft.CodeAnalysis.VisualBasic.Syntax.XmlNameSyntax, content As Microsoft.CodeAnalysis.SyntaxList(Of Microsoft.CodeAnalysis.VisualBasic.Syntax.XmlNodeSyntax)) -> Microsoft.CodeAnalysis.VisualBasic.Syntax.XmlElementSyntax
Shared Microsoft.CodeAnalysis.VisualBasic.SyntaxFactory.XmlEmptyElement(localName As String) -> Microsoft.CodeAnalysis.VisualBasic.Syntax.XmlEmptyElementSyntax
Shared Microsoft.CodeAnalysis.VisualBasic.SyntaxFactory.XmlExampleElement(ParamArray content As Microsoft.CodeAnalysis.VisualBasic.Syntax.XmlNodeSyntax()) -> Microsoft.CodeAnalysis.VisualBasic.Syntax.XmlElementSyntax
Shared Microsoft.CodeAnalysis.VisualBasic.SyntaxFactory.XmlExampleElement(content As Microsoft.CodeAnalysis.SyntaxList(Of Microsoft.CodeAnalysis.VisualBasic.Syntax.XmlNodeSyntax)) -> Microsoft.CodeAnalysis.VisualBasic.Syntax.XmlElementSyntax
Shared Microsoft.CodeAnalysis.VisualBasic.SyntaxFactory.XmlExceptionElement(cref As Microsoft.CodeAnalysis.VisualBasic.Syntax.CrefReferenceSyntax, ParamArray content As Microsoft.CodeAnalysis.VisualBasic.Syntax.XmlNodeSyntax()) -> Microsoft.CodeAnalysis.VisualBasic.Syntax.XmlElementSyntax
Shared Microsoft.CodeAnalysis.VisualBasic.SyntaxFactory.XmlExceptionElement(cref As Microsoft.CodeAnalysis.VisualBasic.Syntax.CrefReferenceSyntax, content As Microsoft.CodeAnalysis.SyntaxList(Of Microsoft.CodeAnalysis.VisualBasic.Syntax.XmlNodeSyntax)) -> Microsoft.CodeAnalysis.VisualBasic.Syntax.XmlElementSyntax
Shared Microsoft.CodeAnalysis.VisualBasic.SyntaxFactory.XmlMultiLineElement(localName As String, content As Microsoft.CodeAnalysis.SyntaxList(Of Microsoft.CodeAnalysis.VisualBasic.Syntax.XmlNodeSyntax)) -> Microsoft.CodeAnalysis.VisualBasic.Syntax.XmlElementSyntax
Shared Microsoft.CodeAnalysis.VisualBasic.SyntaxFactory.XmlMultiLineElement(name As Microsoft.CodeAnalysis.VisualBasic.Syntax.XmlNameSyntax, content As Microsoft.CodeAnalysis.SyntaxList(Of Microsoft.CodeAnalysis.VisualBasic.Syntax.XmlNodeSyntax)) -> Microsoft.CodeAnalysis.VisualBasic.Syntax.XmlElementSyntax
Shared Microsoft.CodeAnalysis.VisualBasic.SyntaxFactory.XmlNameAttribute(parameterName As String) -> Microsoft.CodeAnalysis.VisualBasic.Syntax.XmlNameAttributeSyntax
Shared Microsoft.CodeAnalysis.VisualBasic.SyntaxFactory.XmlNewLine() -> Microsoft.CodeAnalysis.VisualBasic.Syntax.XmlTextSyntax
Shared Microsoft.CodeAnalysis.VisualBasic.SyntaxFactory.XmlNullKeywordElement() -> Microsoft.CodeAnalysis.VisualBasic.Syntax.XmlEmptyElementSyntax
Shared Microsoft.CodeAnalysis.VisualBasic.SyntaxFactory.XmlParaElement(ParamArray content As Microsoft.CodeAnalysis.VisualBasic.Syntax.XmlNodeSyntax()) -> Microsoft.CodeAnalysis.VisualBasic.Syntax.XmlElementSyntax
Shared Microsoft.CodeAnalysis.VisualBasic.SyntaxFactory.XmlParaElement(content As Microsoft.CodeAnalysis.SyntaxList(Of Microsoft.CodeAnalysis.VisualBasic.Syntax.XmlNodeSyntax)) -> Microsoft.CodeAnalysis.VisualBasic.Syntax.XmlElementSyntax
Shared Microsoft.CodeAnalysis.VisualBasic.SyntaxFactory.XmlParamElement(parameterName As String, ParamArray content As Microsoft.CodeAnalysis.VisualBasic.Syntax.XmlNodeSyntax()) -> Microsoft.CodeAnalysis.VisualBasic.Syntax.XmlElementSyntax
Shared Microsoft.CodeAnalysis.VisualBasic.SyntaxFactory.XmlParamElement(parameterName As String, content As Microsoft.CodeAnalysis.SyntaxList(Of Microsoft.CodeAnalysis.VisualBasic.Syntax.XmlNodeSyntax)) -> Microsoft.CodeAnalysis.VisualBasic.Syntax.XmlElementSyntax
Shared Microsoft.CodeAnalysis.VisualBasic.SyntaxFactory.XmlParamRefElement(parameterName As String) -> Microsoft.CodeAnalysis.VisualBasic.Syntax.XmlEmptyElementSyntax
Shared Microsoft.CodeAnalysis.VisualBasic.SyntaxFactory.XmlPermissionElement(cref As Microsoft.CodeAnalysis.VisualBasic.Syntax.CrefReferenceSyntax, ParamArray content As Microsoft.CodeAnalysis.VisualBasic.Syntax.XmlNodeSyntax()) -> Microsoft.CodeAnalysis.VisualBasic.Syntax.XmlElementSyntax
Shared Microsoft.CodeAnalysis.VisualBasic.SyntaxFactory.XmlPermissionElement(cref As Microsoft.CodeAnalysis.VisualBasic.Syntax.CrefReferenceSyntax, content As Microsoft.CodeAnalysis.SyntaxList(Of Microsoft.CodeAnalysis.VisualBasic.Syntax.XmlNodeSyntax)) -> Microsoft.CodeAnalysis.VisualBasic.Syntax.XmlElementSyntax
Shared Microsoft.CodeAnalysis.VisualBasic.SyntaxFactory.XmlPlaceholderElement(ParamArray content As Microsoft.CodeAnalysis.VisualBasic.Syntax.XmlNodeSyntax()) -> Microsoft.CodeAnalysis.VisualBasic.Syntax.XmlElementSyntax
Shared Microsoft.CodeAnalysis.VisualBasic.SyntaxFactory.XmlPlaceholderElement(content As Microsoft.CodeAnalysis.SyntaxList(Of Microsoft.CodeAnalysis.VisualBasic.Syntax.XmlNodeSyntax)) -> Microsoft.CodeAnalysis.VisualBasic.Syntax.XmlElementSyntax
Shared Microsoft.CodeAnalysis.VisualBasic.SyntaxFactory.XmlPreliminaryElement() -> Microsoft.CodeAnalysis.VisualBasic.Syntax.XmlEmptyElementSyntax
Shared Microsoft.CodeAnalysis.VisualBasic.SyntaxFactory.XmlRemarksElement(ParamArray content As Microsoft.CodeAnalysis.VisualBasic.Syntax.XmlNodeSyntax()) -> Microsoft.CodeAnalysis.VisualBasic.Syntax.XmlElementSyntax
Shared Microsoft.CodeAnalysis.VisualBasic.SyntaxFactory.XmlRemarksElement(content As Microsoft.CodeAnalysis.SyntaxList(Of Microsoft.CodeAnalysis.VisualBasic.Syntax.XmlNodeSyntax)) -> Microsoft.CodeAnalysis.VisualBasic.Syntax.XmlElementSyntax
Shared Microsoft.CodeAnalysis.VisualBasic.SyntaxFactory.XmlReturnsElement(ParamArray content As Microsoft.CodeAnalysis.VisualBasic.Syntax.XmlNodeSyntax()) -> Microsoft.CodeAnalysis.VisualBasic.Syntax.XmlElementSyntax
Shared Microsoft.CodeAnalysis.VisualBasic.SyntaxFactory.XmlReturnsElement(content As Microsoft.CodeAnalysis.SyntaxList(Of Microsoft.CodeAnalysis.VisualBasic.Syntax.XmlNodeSyntax)) -> Microsoft.CodeAnalysis.VisualBasic.Syntax.XmlElementSyntax
Shared Microsoft.CodeAnalysis.VisualBasic.SyntaxFactory.XmlSeeAlsoElement(cref As Microsoft.CodeAnalysis.VisualBasic.Syntax.CrefReferenceSyntax) -> Microsoft.CodeAnalysis.VisualBasic.Syntax.XmlEmptyElementSyntax
Shared Microsoft.CodeAnalysis.VisualBasic.SyntaxFactory.XmlSeeAlsoElement(linkAddress As System.Uri, linkText As Microsoft.CodeAnalysis.SyntaxList(Of Microsoft.CodeAnalysis.VisualBasic.Syntax.XmlNodeSyntax)) -> Microsoft.CodeAnalysis.VisualBasic.Syntax.XmlElementSyntax
Shared Microsoft.CodeAnalysis.VisualBasic.SyntaxFactory.XmlSeeElement(cref As Microsoft.CodeAnalysis.VisualBasic.Syntax.CrefReferenceSyntax) -> Microsoft.CodeAnalysis.VisualBasic.Syntax.XmlEmptyElementSyntax
Shared Microsoft.CodeAnalysis.VisualBasic.SyntaxFactory.XmlSummaryElement(ParamArray content As Microsoft.CodeAnalysis.VisualBasic.Syntax.XmlNodeSyntax()) -> Microsoft.CodeAnalysis.VisualBasic.Syntax.XmlElementSyntax
Shared Microsoft.CodeAnalysis.VisualBasic.SyntaxFactory.XmlSummaryElement(content As Microsoft.CodeAnalysis.SyntaxList(Of Microsoft.CodeAnalysis.VisualBasic.Syntax.XmlNodeSyntax)) -> Microsoft.CodeAnalysis.VisualBasic.Syntax.XmlElementSyntax
Shared Microsoft.CodeAnalysis.VisualBasic.SyntaxFactory.XmlText(ParamArray textTokens As Microsoft.CodeAnalysis.SyntaxToken()) -> Microsoft.CodeAnalysis.VisualBasic.Syntax.XmlTextSyntax
Shared Microsoft.CodeAnalysis.VisualBasic.SyntaxFactory.XmlText(value As String) -> Microsoft.CodeAnalysis.VisualBasic.Syntax.XmlTextSyntax
Shared Microsoft.CodeAnalysis.VisualBasic.SyntaxFactory.XmlTextLiteral(text As String, value As String) -> Microsoft.CodeAnalysis.SyntaxToken
Shared Microsoft.CodeAnalysis.VisualBasic.SyntaxFactory.XmlTextLiteral(value As String) -> Microsoft.CodeAnalysis.SyntaxToken
Shared Microsoft.CodeAnalysis.VisualBasic.SyntaxFactory.XmlTextNewLine() -> Microsoft.CodeAnalysis.SyntaxToken
Shared Microsoft.CodeAnalysis.VisualBasic.SyntaxFactory.XmlTextNewLine(continueXmlDocumentationComment As Boolean) -> Microsoft.CodeAnalysis.SyntaxToken
Shared Microsoft.CodeAnalysis.VisualBasic.SyntaxFactory.XmlTextNewLine(leading As Microsoft.CodeAnalysis.SyntaxTriviaList, text As String, value As String, trailing As Microsoft.CodeAnalysis.SyntaxTriviaList) -> Microsoft.CodeAnalysis.SyntaxToken
Shared Microsoft.CodeAnalysis.VisualBasic.SyntaxFactory.XmlThreadSafetyElement() -> Microsoft.CodeAnalysis.VisualBasic.Syntax.XmlEmptyElementSyntax
Shared Microsoft.CodeAnalysis.VisualBasic.SyntaxFactory.XmlThreadSafetyElement(static As Boolean, instance As Boolean) -> Microsoft.CodeAnalysis.VisualBasic.Syntax.XmlEmptyElementSyntax
Shared Microsoft.CodeAnalysis.VisualBasic.SyntaxFactory.XmlValueElement(ParamArray content As Microsoft.CodeAnalysis.VisualBasic.Syntax.XmlNodeSyntax()) -> Microsoft.CodeAnalysis.VisualBasic.Syntax.XmlElementSyntax
Shared Microsoft.CodeAnalysis.VisualBasic.SyntaxFactory.XmlValueElement(content As Microsoft.CodeAnalysis.SyntaxList(Of Microsoft.CodeAnalysis.VisualBasic.Syntax.XmlNodeSyntax)) -> Microsoft.CodeAnalysis.VisualBasic.Syntax.XmlElementSyntax