ValidateFormatStringTests.cs:        string.Format(""This {0[||]} works"", ""test""); 
ValidateFormatStringTests.cs:        string.Format(""This {0[||]} {1} works"", ""test"", ""also""); 
ValidateFormatStringTests.cs:        string.Format(""This {0} {1[||]} works {2} "", ""test"", ""also"", ""well""); 
ValidateFormatStringTests.cs:        string.Format(""This {1} is {2} my {6[||]} test "", ""teststring1"", ""teststring2"", ""teststring3"", ""teststring4"", ""teststring5"", ""teststring6"", ""teststring7"");
ValidateFormatStringTests.cs:        string.Format(""This {0} {1} {2[||]} works"", testParamsArray); 
ValidateFormatStringTests.cs:        testStr = string.Format(culture, ""The current price is {0[||]:C2} per ounce"", 2.45);
ValidateFormatStringTests.cs:        testStr = string.Format(culture, ""The current price is {0[||]:C2} per {1} "", 2.45, ""ounce"");
ValidateFormatStringTests.cs:        testStr = string.Format(culture, ""The current price is {0} {[||]1} {2} "", 2.45, ""per"", ""ounce"");
ValidateFormatStringTests.cs:        testStr = string.Format(culture, ""The current price is {0} {1[||]} {2} {3} "", 2.45, ""per"", ""ounce"", ""today only"");
ValidateFormatStringTests.cs:        string.Format(culture, ""This {0} {1} {[||]2} works"", testParamsArray); 
ValidateFormatStringTests.cs:        string.Format(""{0[||],6}"", 34);
ValidateFormatStringTests.cs:        string.Format(""{[||]0:N0}"", 34);
ValidateFormatStringTests.cs:        string.Format(""Test {0,[||]15:N0} output"", 34);
ValidateFormatStringTests.cs:        string.Format(""{0[||]} is my test case"", ""This"");
ValidateFormatStringTests.cs:        string.Format(""This is my {0[||]}"", ""test"");
ValidateFormatStringTests.cs:        string.Format("" {{ 2}} This {1[||]} is {2} {{ my {0} test }} "", ""teststring1"", ""teststring2"", ""teststring3"");
ValidateFormatStringTests.cs:        string.Format(""{{ 2}} This {1[||]} is {2} {{ my {0} test }} "", ""teststring1"", ""teststring2"", ""teststring3"");
ValidateFormatStringTests.cs:        string.Format("" {{ 2}} This {1[||]} is {2} {{ my {0} test }}"", ""teststring1"", ""teststring2"", ""teststring3"");
ValidateFormatStringTests.cs:        string.Format("" {{{2}} This {1[||]} is {2} {{ my {0} test }}"", ""teststring1"", ""teststring2"", ""teststring3"");
ValidateFormatStringTests.cs:            var diagnosticMessage = string.Format(FeaturesResources.Format_string_0_contains_invalid_placeholder_1, "\"This {1} is my test\"", "{1}");
ValidateFormatStringTests.cs:        string.Format(""This [|{1}|] is my test"", ""teststring1"");
ValidateFormatStringTests.cs:            var diagnosticMessage = string.Format(FeaturesResources.Format_string_0_contains_invalid_placeholder_1, "\"This {2} is my test\"", "{2}");
ValidateFormatStringTests.cs:        string.Format(""This [|{2}|] is my test"", ""teststring1"", ""teststring2"");
ValidateFormatStringTests.cs:            var diagnosticMessage = string.Format(FeaturesResources.Format_string_0_contains_invalid_placeholder_1, "\"This{0}{1}{2}{3} is my test\"", "{3}");
ValidateFormatStringTests.cs:        string.Format(""This{0}{1}{2}[|{3}|] is my test"", ""teststring1"", ""teststring2"", ""teststring3"");
ValidateFormatStringTests.cs:            var diagnosticMessage = string.Format(FeaturesResources.Format_string_0_contains_invalid_placeholder_1, "\"This{0}{1}{2}{3}{4} is my test\"", "{4}");
ValidateFormatStringTests.cs:        string.Format(""This{0}{1}{2}{3}[|{4}|] is my test"", ""teststring1"", ""teststring2"", ""teststring3"", ""teststring4"");
ValidateFormatStringTests.cs:            var diagnosticMessage = string.Format(FeaturesResources.Format_string_0_contains_invalid_placeholder_1, "\"This {1} is my test\"", "{1}");
ValidateFormatStringTests.cs:        string.Format(culture, ""This [|{1}|] is my test"", ""teststring1"");
ValidateFormatStringTests.cs:            var diagnosticMessage = string.Format(FeaturesResources.Format_string_0_contains_invalid_placeholder_1, "\"This {2} is my test\"", "{2}");
ValidateFormatStringTests.cs:        string.Format(culture, ""This [|{2}|] is my test"", ""teststring1"", ""teststring2"");
ValidateFormatStringTests.cs:            var diagnosticMessage = string.Format(FeaturesResources.Format_string_0_contains_invalid_placeholder_1, "\"This{0}{1}{2}{3} is my test\"", "{3}");
ValidateFormatStringTests.cs:        string.Format(culture, ""This{0}{1}{2}[|{3}|] is my test"", ""teststring1"", ""teststring2"", ""teststring3"");
ValidateFormatStringTests.cs:            var diagnosticMessage = string.Format(FeaturesResources.Format_string_0_contains_invalid_placeholder_1, "\"This{0}{1}{2}{3}{4} is my test\"", "{4}");
ValidateFormatStringTests.cs:        string.Format(culture, ""This{0}{1}{2}{3}[|{4}|] is my test"", ""teststring1"", ""teststring2"", ""teststring3"", ""teststring4"");
ValidateFormatStringTests.cs:            var diagnosticMessage = string.Format(FeaturesResources.Format_string_0_contains_invalid_placeholder_1, "\"{1}is my test\"", "{1}");
ValidateFormatStringTests.cs:        string.Format( ""[|{1}|]is my test"", ""teststring1"");
ValidateFormatStringTests.cs:            var diagnosticMessage = string.Format(FeaturesResources.Format_string_0_contains_invalid_placeholder_1, "\"is my test {2}\"", "{2}");
ValidateFormatStringTests.cs:        string.Format( ""is my test [|{2}|]"", ""teststring1"", ""teststring2"");
ValidateFormatStringTests.cs:            var diagnosticMessage = string.Format(FeaturesResources.Format_string_0_contains_invalid_placeholder_1, "\"}}is my test {2}\"", "{2}");
ValidateFormatStringTests.cs:        string.Format( ""}}is my test [|{2}|]"", ""teststring1"", ""teststring2"");
ValidateFormatStringTests.cs:            var diagnosticMessage = string.Format(FeaturesResources.Format_string_0_contains_invalid_placeholder_1, "\"is my test {2}{{\"", "{2}");
ValidateFormatStringTests.cs:        string.Format( ""is my test [|{2}|]{{"", ""teststring1"", ""teststring2"");
ValidateFormatStringTests.cs:        string.Format(arg0: ""test"", arg1: ""also"", format: ""This {0} {[||]1} works""); 
ValidateFormatStringTests.cs:        string.Format(arg0: ""test"", provider: culture, format: ""This {0[||]} works""); 
ValidateFormatStringTests.cs:        Console.WriteLine(string.Format(format: ""This {0[||]} works"", arg0:""test"")); 
ValidateFormatStringTests.cs:        string.Format(@""This {0} 
ValidateFormatStringTests.cs:            var diagnosticMessage = string.Format(FeaturesResources.Format_string_0_contains_invalid_placeholder_1, "@\"This {0} \\r\\n{1} {3} works\"", "{3}");
ValidateFormatStringTests.cs:        string.Format(@""This {0} 
ValidateFormatStringTests.cs:        string.Format($""{Name,[||] 20} is {Age:D3} ""); 
ValidateFormatStringTests.cs:        string.Format(""[||]""); 
ValidateFormatStringTests.cs:        string.Format([||]; 
ValidateFormatStringTests.cs:        string.Format([||]); 
ValidateFormatStringTests.cs:        string.Format(""[||]""); 
ValidateFormatStringTests.cs:            var diagnosticMessage = string.Format(FeaturesResources.Format_string_0_contains_invalid_placeholder_1, "\"This {0} {2} works\"", "{2}");
ValidateFormatStringTests.cs:        string.Format(arg0: ""test"", arg1: ""also"", format: ""This {0} [|{2}|] works"");
ValidateFormatStringTests.cs:            var diagnosticMessage = string.Format(FeaturesResources.Format_string_0_contains_invalid_placeholder_1, "\"This {0} {2} works\"", "{2}");
ValidateFormatStringTests.cs:        string.Format(arg0: ""test"", arg1: ""also"", format: ""This {0} [|{2}|] works"", provider: culture)
ValidateFormatStringTests.cs:            var diagnosticMessage = string.Format(FeaturesResources.Format_string_0_contains_invalid_placeholder_1, "\"This {0} {2} squiggles\"", "{2}");
ValidateFormatStringTests.cs:        string.Format(""This [|{1}|] is my test"", ""teststring1"");
ValidateFormatStringTests.cs:            var diagnosticMessage = string.Format(FeaturesResources.Format_string_0_contains_invalid_placeholder_1, "\"This {1} is my test\"", "{1}");
ValidateFormatStringTests.cs:        string.Format( : ""value""[||])); 
