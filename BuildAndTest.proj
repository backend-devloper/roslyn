<Project
  xmlns="http://schemas.microsoft.com/developer/msbuild/2003"
  DefaultTargets="BuildAndTest"
  ToolsVersion="12.0">

  <UsingTask
    AssemblyFile="packages\xunit.runners.2.0.0-alpha-build2576\tools\xunit.runner.msbuild.dll"
    TaskName="Xunit.Runner.MSBuild.xunit" />

  <!-- At the moment Jenkins runs on a machine without any build of Visual Studio 2015.  Hence we must
       use a 2013 compatible solution. -->
  <PropertyGroup>
    <RoslynSolution>$(MSBuildThisFileDirectory)Roslyn.sln</RoslynSolution>
    <Configuration Condition="'$(Configuration)' == ''">Debug</Configuration>
    <RunTestArgs></RunTestArgs>
    <RunTestArgs Condition="'$(Test64)' == 'true'">-test64</RunTestArgs>
    <IncludePattern Condition="'$(IncludePattern)' == ''">*.UnitTests*.dll</IncludePattern>

    <!-- Emit XML in a CIBuild in order to get structured test results -->
    <RunTestArgs Condition="'$(CIBuild)' == 'true'">$(RunTestArgs) -xml</RunTestArgs>
  </PropertyGroup>

  <Target Name="RestorePackages">
    <Exec Command="&quot;$(MSBuildThisFileDirectory)\.nuget\Nuget.exe&quot; install xunit.runners -pre -version 2.0.0-alpha-build2576 -outputdirectory packages"/>
    <Exec Command="&quot;$(MSBuildThisFileDirectory)\.nuget\Nuget.exe&quot; restore &quot;$(RoslynSolution)&quot;" />

    <!-- This package isn't properly signed and hence makes our tests unrunnable on standard
         machines.  FakeSign it for now during a test run until we get a correctly signed
         package uploaded --> 
    <Exec Command="&quot;$(MSBuildThisFileDirectory)\packages\FakeSign.0.9.2\tools\FakeSign.exe&quot; -f packages\Microsoft.CodeAnalysis.Test.Resources.Proprietary.1.1.0-beta1-20150716-07\lib\net45\Microsoft.CodeAnalysis.Test.Resources.Proprietary.dll" />
  </Target>

  <Target Name="Build" DependsOnTargets="RestorePackages">
    <MSBuild BuildInParallel="true"
             Projects="$(RoslynSolution)"
             Properties="RestorePackages=false;TreatWarningsAsErrors=true"
             Targets="Build"/>
  </Target>

  <Target Name="Clean">
    <MSBuild BuildInParallel="true"
             Projects="$(RoslynSolution)"
             Properties="RestorePackages=false"
             Targets="Clean"/>
  </Target>

  <Target Name="Rebuild">
    <MSBuild BuildInParallel="true"
             Projects="$(RoslynSolution)"
             Properties="RestorePackages=false;TreatWarningsAsErrors=true"
             Targets="Rebuild"/>
  </Target>

  <Target Name="Test">

    <ItemGroup Condition="'$(PublicBuild)' == '' AND '$(CIBuild)' == ''">
      <TestAssemblies
        Include="Binaries\$(Configuration)\**\$(IncludePattern)"
        Exclude="Binaries\$(Configuration)\Roslyn.Compilers.NativeClient.UnitTests.dll" />
    </ItemGroup>

    <ItemGroup Condition="'$(PublicBuild)' == '' AND '$(CIBuild)' == 'true'">
      <TestAssemblies
        Include="Binaries\$(Configuration)\**\$(IncludePattern)"
        Exclude="
        Binaries\$(Configuration)\Roslyn.Compilers.NativeClient.UnitTests.dll;
        Binaries\$(Configuration)\Microsoft.CodeAnalysis.Scripting.UnitTests.dll;" />
    </ItemGroup>

    <!-- The Microsoft.CodeAnalysis.Scripting.UnitTests.dll is disabled due to https://github.com/dotnet/roslyn/issues/860 -->
    <ItemGroup Condition="'$(PublicBuild)' == 'true' AND '$(CIBuild)' == ''">
      <TestAssemblies
        Include="Binaries\$(Configuration)\**\$(IncludePattern)"
        Exclude="
        Binaries\$(Configuration)\Roslyn.Compilers.NativeClient.UnitTests.dll;
        Binaries\$(Configuration)\Microsoft.CodeAnalysis.Scripting.UnitTests.dll;
        Binaries\$(Configuration)\Roslyn.Services.Editor.UnitTests2.dll;
        Binaries\$(Configuration)\Roslyn.Services.Editor.UnitTests.dll;
        Binaries\$(Configuration)\Roslyn.ExpressionEvaluator.CSharp.ResultProvider.UnitTests.dll;
        Binaries\$(Configuration)\Roslyn.ExpressionEvaluator.VisualBasic.ResultProvider.UnitTests.dll;
        Binaries\$(Configuration)\Roslyn.Services.Editor.VisualBasic.UnitTests.dll;
        Binaries\$(Configuration)\Roslyn.Services.Editor.CSharp.UnitTests.dll;" />
    </ItemGroup>

    <Exec Command="Binaries\$(Configuration)\RunTests.exe packages\xunit.runners.2.0.0-alpha-build2576\tools $(RunTestArgs) @(TestAssemblies, ' ')" />

  </Target>

  <Target Name="BuildAndTest"
          DependsOnTargets="Build;Test" />

</Project>
